[2021-12-14 04:54:18] [[32minfo[39m] Server is running on port 8080
[2021-12-14 04:54:18] [[32minfo[39m] Executing (default): DROP TABLE IF EXISTS `user_roles`;
[2021-12-14 04:54:18] [[32minfo[39m] Executing (default): DROP TABLE IF EXISTS `marketNotes`;
[2021-12-14 04:54:18] [[32minfo[39m] Executing (default): DROP TABLE IF EXISTS `address-villages`;
[2021-12-14 04:54:18] [[32minfo[39m] Executing (default): DROP TABLE IF EXISTS `address-districts`;
[2021-12-14 04:54:18] [[32minfo[39m] Executing (default): DROP TABLE IF EXISTS `address-provinces`;
[2021-12-14 04:54:19] [[32minfo[39m] Executing (default): DROP TABLE IF EXISTS `favoriteFoodCategories`;
[2021-12-14 04:54:19] [[32minfo[39m] Executing (default): DROP TABLE IF EXISTS `orderDetails`;
[2021-12-14 04:54:19] [[32minfo[39m] Executing (default): DROP TABLE IF EXISTS `orders`;
[2021-12-14 04:54:19] [[32minfo[39m] Executing (default): DROP TABLE IF EXISTS `paymentMethods`;
[2021-12-14 04:54:19] [[32minfo[39m] Executing (default): DROP TABLE IF EXISTS `deliveryMethods`;
[2021-12-14 04:54:19] [[32minfo[39m] Executing (default): DROP TABLE IF EXISTS `cartDetails`;
[2021-12-14 04:54:19] [[32minfo[39m] Executing (default): DROP TABLE IF EXISTS `carts`;
[2021-12-14 04:54:19] [[32minfo[39m] Executing (default): DROP TABLE IF EXISTS `foodCookSteps`;
[2021-12-14 04:54:19] [[32minfo[39m] Executing (default): DROP TABLE IF EXISTS `foodMaterials`;
[2021-12-14 04:54:19] [[32minfo[39m] Executing (default): DROP TABLE IF EXISTS `products`;
[2021-12-14 04:54:19] [[32minfo[39m] Executing (default): DROP TABLE IF EXISTS `quantities`;
[2021-12-14 04:54:19] [[32minfo[39m] Executing (default): DROP TABLE IF EXISTS `productCategories`;
[2021-12-14 04:54:19] [[32minfo[39m] Executing (default): DROP TABLE IF EXISTS `foods`;
[2021-12-14 04:54:19] [[32minfo[39m] Executing (default): DROP TABLE IF EXISTS `foodCategories`;
[2021-12-14 04:54:19] [[32minfo[39m] Executing (default): DROP TABLE IF EXISTS `roles`;
[2021-12-14 04:54:19] [[32minfo[39m] Executing (default): DROP TABLE IF EXISTS `users`;
[2021-12-14 04:54:19] [[32minfo[39m] Executing (default): DROP TABLE IF EXISTS `users`;
[2021-12-14 04:54:19] [[32minfo[39m] Executing (default): CREATE TABLE IF NOT EXISTS `users` (`id` INTEGER NOT NULL auto_increment , `username` VARCHAR(255) UNIQUE, `email` VARCHAR(255) UNIQUE, `password` VARCHAR(255), `firstname` VARCHAR(255), `lastname` VARCHAR(255), `gender` VARCHAR(255), `phone` VARCHAR(255), `birthday` DATE, `address` VARCHAR(255), `userAvatar` VARCHAR(255), `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, PRIMARY KEY (`id`)) ENGINE=InnoDB;
[2021-12-14 04:54:19] [[32minfo[39m] Executing (default): SHOW INDEX FROM `users`
[2021-12-14 04:54:19] [[32minfo[39m] Executing (default): DROP TABLE IF EXISTS `roles`;
[2021-12-14 04:54:19] [[32minfo[39m] Executing (default): CREATE TABLE IF NOT EXISTS `roles` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255), `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, PRIMARY KEY (`id`)) ENGINE=InnoDB;
[2021-12-14 04:54:19] [[32minfo[39m] Executing (default): SHOW INDEX FROM `roles`
[2021-12-14 04:54:19] [[32minfo[39m] Executing (default): DROP TABLE IF EXISTS `foodCategories`;
[2021-12-14 04:54:19] [[32minfo[39m] Executing (default): CREATE TABLE IF NOT EXISTS `foodCategories` (`id` INTEGER NOT NULL auto_increment , `catName` VARCHAR(255), `catIcon` VARCHAR(255), `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, PRIMARY KEY (`id`)) ENGINE=InnoDB;
[2021-12-14 04:54:19] [[32minfo[39m] Executing (default): SHOW INDEX FROM `foodCategories`
[2021-12-14 04:54:19] [[32minfo[39m] Executing (default): DROP TABLE IF EXISTS `foods`;
[2021-12-14 04:54:19] [[32minfo[39m] Executing (default): CREATE TABLE IF NOT EXISTS `foods` (`id` INTEGER NOT NULL auto_increment , `foodName` VARCHAR(255), `foodDescription` VARCHAR(255), `foodCalories` FLOAT, `foodImage` VARCHAR(255), `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, `foodCategoryId` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`foodCategoryId`) REFERENCES `foodCategories` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;
[2021-12-14 04:54:19] [[32minfo[39m] Executing (default): SHOW INDEX FROM `foods`
[2021-12-14 04:54:19] [[32minfo[39m] Executing (default): ALTER TABLE `foods` ADD FULLTEXT INDEX `food_index` (`foodName`)
[2021-12-14 04:54:20] [[32minfo[39m] Executing (default): DROP TABLE IF EXISTS `productCategories`;
[2021-12-14 04:54:20] [[32minfo[39m] Executing (default): CREATE TABLE IF NOT EXISTS `productCategories` (`id` INTEGER NOT NULL auto_increment , `catName` VARCHAR(255), `catIcon` VARCHAR(255), `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, PRIMARY KEY (`id`)) ENGINE=InnoDB;
[2021-12-14 04:54:20] [[32minfo[39m] Executing (default): SHOW INDEX FROM `productCategories`
[2021-12-14 04:54:20] [[32minfo[39m] Executing (default): DROP TABLE IF EXISTS `quantities`;
[2021-12-14 04:54:20] [[32minfo[39m] Executing (default): CREATE TABLE IF NOT EXISTS `quantities` (`id` INTEGER NOT NULL auto_increment , `quantityName` VARCHAR(255), `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, PRIMARY KEY (`id`)) ENGINE=InnoDB;
[2021-12-14 04:54:20] [[32minfo[39m] Executing (default): SHOW INDEX FROM `quantities`
[2021-12-14 04:54:20] [[32minfo[39m] Executing (default): DROP TABLE IF EXISTS `products`;
[2021-12-14 04:54:20] [[32minfo[39m] Executing (default): CREATE TABLE IF NOT EXISTS `products` (`id` INTEGER NOT NULL auto_increment , `proName` VARCHAR(255), `proDescription` VARCHAR(255), `quantityValue` FLOAT, `price` FLOAT, `brand` VARCHAR(255), `origin` VARCHAR(255), `productAt` DATE, `expireAt` VARCHAR(255), `manual` VARCHAR(255), `preserve` VARCHAR(255), `productImage` VARCHAR(255), `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, `productCategoryId` INTEGER, `quantityId` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`productCategoryId`) REFERENCES `productCategories` (`id`) ON DELETE SET NULL ON UPDATE CASCADE, FOREIGN KEY (`quantityId`) REFERENCES `quantities` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;
[2021-12-14 04:54:20] [[32minfo[39m] Executing (default): SHOW INDEX FROM `products`
[2021-12-14 04:54:20] [[32minfo[39m] Executing (default): ALTER TABLE `products` ADD FULLTEXT INDEX `product_index` (`proName`)
[2021-12-14 04:54:21] [[32minfo[39m] Executing (default): DROP TABLE IF EXISTS `foodMaterials`;
[2021-12-14 04:54:21] [[32minfo[39m] Executing (default): CREATE TABLE IF NOT EXISTS `foodMaterials` (`id` INTEGER NOT NULL auto_increment , `foodMaterialName` VARCHAR(255), `quantityDescription` VARCHAR(255), `quantityValue` FLOAT, `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, `foodId` INTEGER, `productId` INTEGER, `quantityId` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`foodId`) REFERENCES `foods` (`id`) ON DELETE SET NULL ON UPDATE CASCADE, FOREIGN KEY (`productId`) REFERENCES `products` (`id`) ON DELETE SET NULL ON UPDATE CASCADE, FOREIGN KEY (`quantityId`) REFERENCES `quantities` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;
[2021-12-14 04:54:21] [[32minfo[39m] Executing (default): SHOW INDEX FROM `foodMaterials`
[2021-12-14 04:54:21] [[32minfo[39m] Executing (default): DROP TABLE IF EXISTS `foodCookSteps`;
[2021-12-14 04:54:21] [[32minfo[39m] Executing (default): CREATE TABLE IF NOT EXISTS `foodCookSteps` (`id` INTEGER NOT NULL auto_increment , `stepNumber` INTEGER, `stepDescription` VARCHAR(255), `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, `foodId` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`foodId`) REFERENCES `foods` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;
[2021-12-14 04:54:21] [[32minfo[39m] Executing (default): SHOW INDEX FROM `foodCookSteps`
[2021-12-14 04:54:21] [[32minfo[39m] Executing (default): DROP TABLE IF EXISTS `carts`;
[2021-12-14 04:54:21] [[32minfo[39m] Executing (default): CREATE TABLE IF NOT EXISTS `carts` (`id` INTEGER NOT NULL auto_increment , `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, `userId` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`userId`) REFERENCES `users` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;
[2021-12-14 04:54:21] [[32minfo[39m] Executing (default): SHOW INDEX FROM `carts`
[2021-12-14 04:54:21] [[32minfo[39m] Executing (default): DROP TABLE IF EXISTS `cartDetails`;
[2021-12-14 04:54:21] [[32minfo[39m] Executing (default): CREATE TABLE IF NOT EXISTS `cartDetails` (`id` INTEGER NOT NULL auto_increment , `quantity` INTEGER, `isBuy` TINYINT(1), `isDeleted` TINYINT(1), `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, `cartId` INTEGER, `productId` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`cartId`) REFERENCES `carts` (`id`) ON DELETE SET NULL ON UPDATE CASCADE, FOREIGN KEY (`productId`) REFERENCES `products` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;
[2021-12-14 04:54:21] [[32minfo[39m] Executing (default): SHOW INDEX FROM `cartDetails`
[2021-12-14 04:54:21] [[32minfo[39m] Executing (default): DROP TABLE IF EXISTS `deliveryMethods`;
[2021-12-14 04:54:21] [[32minfo[39m] Executing (default): CREATE TABLE IF NOT EXISTS `deliveryMethods` (`id` INTEGER NOT NULL auto_increment , `deliveryMethod` VARCHAR(255), `fee` FLOAT, `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, PRIMARY KEY (`id`)) ENGINE=InnoDB;
[2021-12-14 04:54:21] [[32minfo[39m] Executing (default): SHOW INDEX FROM `deliveryMethods`
[2021-12-14 04:54:21] [[32minfo[39m] Executing (default): DROP TABLE IF EXISTS `paymentMethods`;
[2021-12-14 04:54:21] [[32minfo[39m] Executing (default): CREATE TABLE IF NOT EXISTS `paymentMethods` (`id` INTEGER NOT NULL auto_increment , `paymentType` VARCHAR(255), `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, PRIMARY KEY (`id`)) ENGINE=InnoDB;
[2021-12-14 04:54:21] [[32minfo[39m] Executing (default): SHOW INDEX FROM `paymentMethods`
[2021-12-14 04:54:21] [[32minfo[39m] Executing (default): DROP TABLE IF EXISTS `orders`;
[2021-12-14 04:54:21] [[32minfo[39m] Executing (default): CREATE TABLE IF NOT EXISTS `orders` (`id` INTEGER NOT NULL auto_increment , `addressDelivery` VARCHAR(255), `deliveryAt` DATE, `orderStatus` TINYINT(1), `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, `userId` INTEGER, `deliveryMethodId` INTEGER, `shipperId` INTEGER, `paymentMethodId` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`userId`) REFERENCES `users` (`id`) ON DELETE SET NULL ON UPDATE CASCADE, FOREIGN KEY (`deliveryMethodId`) REFERENCES `deliveryMethods` (`id`) ON DELETE SET NULL ON UPDATE CASCADE, FOREIGN KEY (`shipperId`) REFERENCES `users` (`id`) ON DELETE SET NULL ON UPDATE CASCADE, FOREIGN KEY (`paymentMethodId`) REFERENCES `paymentMethods` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;
[2021-12-14 04:54:21] [[32minfo[39m] Executing (default): SHOW INDEX FROM `orders`
[2021-12-14 04:54:21] [[32minfo[39m] Executing (default): DROP TABLE IF EXISTS `orderDetails`;
[2021-12-14 04:54:21] [[32minfo[39m] Executing (default): CREATE TABLE IF NOT EXISTS `orderDetails` (`id` INTEGER NOT NULL auto_increment , `quantity` INTEGER, `price` FLOAT, `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, `orderId` INTEGER, `productId` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`orderId`) REFERENCES `orders` (`id`) ON DELETE SET NULL ON UPDATE CASCADE, FOREIGN KEY (`productId`) REFERENCES `products` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;
[2021-12-14 04:54:21] [[32minfo[39m] Executing (default): SHOW INDEX FROM `orderDetails`
[2021-12-14 04:54:21] [[32minfo[39m] Executing (default): DROP TABLE IF EXISTS `favoriteFoodCategories`;
[2021-12-14 04:54:21] [[32minfo[39m] Executing (default): CREATE TABLE IF NOT EXISTS `favoriteFoodCategories` (`createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, `userId` INTEGER , `foodCategoryId` INTEGER , PRIMARY KEY (`userId`, `foodCategoryId`), FOREIGN KEY (`userId`) REFERENCES `users` (`id`) ON DELETE CASCADE ON UPDATE CASCADE, FOREIGN KEY (`foodCategoryId`) REFERENCES `foodCategories` (`id`) ON DELETE CASCADE ON UPDATE CASCADE) ENGINE=InnoDB;
[2021-12-14 04:54:21] [[32minfo[39m] Executing (default): SHOW INDEX FROM `favoriteFoodCategories`
[2021-12-14 04:54:21] [[32minfo[39m] Executing (default): DROP TABLE IF EXISTS `address-provinces`;
[2021-12-14 04:54:21] [[32minfo[39m] Executing (default): CREATE TABLE IF NOT EXISTS `address-provinces` (`id` INTEGER NOT NULL auto_increment , `province` VARCHAR(255), `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, PRIMARY KEY (`id`)) ENGINE=InnoDB;
[2021-12-14 04:54:21] [[32minfo[39m] Executing (default): SHOW INDEX FROM `address-provinces`
[2021-12-14 04:54:21] [[32minfo[39m] Executing (default): DROP TABLE IF EXISTS `address-districts`;
[2021-12-14 04:54:21] [[32minfo[39m] Executing (default): CREATE TABLE IF NOT EXISTS `address-districts` (`id` INTEGER NOT NULL auto_increment , `district` VARCHAR(255), `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, `addressProvinceId` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`addressProvinceId`) REFERENCES `address-provinces` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;
[2021-12-14 04:54:21] [[32minfo[39m] Executing (default): SHOW INDEX FROM `address-districts`
[2021-12-14 04:54:21] [[32minfo[39m] Executing (default): DROP TABLE IF EXISTS `address-villages`;
[2021-12-14 04:54:21] [[32minfo[39m] Executing (default): CREATE TABLE IF NOT EXISTS `address-villages` (`id` INTEGER NOT NULL auto_increment , `village` VARCHAR(255), `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, `addressDistrictId` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`addressDistrictId`) REFERENCES `address-districts` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;
[2021-12-14 04:54:22] [[32minfo[39m] Executing (default): SHOW INDEX FROM `address-villages`
[2021-12-14 04:54:22] [[32minfo[39m] Executing (default): DROP TABLE IF EXISTS `marketNotes`;
[2021-12-14 04:54:22] [[32minfo[39m] Executing (default): CREATE TABLE IF NOT EXISTS `marketNotes` (`id` INTEGER NOT NULL auto_increment , `marketNoteText` VARCHAR(255), `remindDate` DATE, `isDone` TINYINT(1), `isDeleted` TINYINT(1), `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, `userId` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`userId`) REFERENCES `users` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;
[2021-12-14 04:54:22] [[32minfo[39m] Executing (default): SHOW INDEX FROM `marketNotes`
[2021-12-14 04:54:22] [[32minfo[39m] Executing (default): DROP TABLE IF EXISTS `user_roles`;
[2021-12-14 04:54:22] [[32minfo[39m] Executing (default): CREATE TABLE IF NOT EXISTS `user_roles` (`createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, `roleId` INTEGER , `userId` INTEGER , PRIMARY KEY (`roleId`, `userId`), FOREIGN KEY (`roleId`) REFERENCES `roles` (`id`) ON DELETE CASCADE ON UPDATE CASCADE, FOREIGN KEY (`userId`) REFERENCES `users` (`id`) ON DELETE CASCADE ON UPDATE CASCADE) ENGINE=InnoDB;
[2021-12-14 04:54:22] [[32minfo[39m] Executing (default): SHOW INDEX FROM `user_roles`
[2021-12-14 04:54:22] [[32minfo[39m] Dropped and Resync database
[2021-12-14 04:55:19] [[32minfo[39m] Executing (default): SELECT `id`, `name`, `createdAt`, `updatedAt` FROM `roles` AS `roles` WHERE (`roles`.`name` = 'user');
[2021-12-14 04:55:19] [[32minfo[39m] User baotg is registered
[2021-12-14 04:55:22] [[32minfo[39m] Executing (default): SELECT `id`, `username`, `email`, `password`, `firstname`, `lastname`, `gender`, `phone`, `birthday`, `address`, `userAvatar`, `createdAt`, `updatedAt` FROM `users` AS `users` WHERE `users`.`username` = 'baotg';
[2021-12-14 04:55:36] [[32minfo[39m] Executing (default): SELECT `id`, `createdAt`, `updatedAt`, `userId` FROM `carts` AS `carts` WHERE `carts`.`userId` = '2' LIMIT 1;
[2021-12-14 04:55:43] [[32minfo[39m] Executing (default): SELECT `carts`.*, `cartDetails`.`id` AS `cartDetails.id`, `cartDetails`.`quantity` AS `cartDetails.quantity`, `cartDetails`.`isBuy` AS `cartDetails.isBuy`, `cartDetails`.`isDeleted` AS `cartDetails.isDeleted`, `cartDetails`.`createdAt` AS `cartDetails.createdAt`, `cartDetails`.`updatedAt` AS `cartDetails.updatedAt`, `cartDetails`.`cartId` AS `cartDetails.cartId`, `cartDetails`.`productId` AS `cartDetails.productId`, `cartDetails->product`.`id` AS `cartDetails.product.id`, `cartDetails->product`.`proName` AS `cartDetails.product.proName`, `cartDetails->product`.`proDescription` AS `cartDetails.product.proDescription`, `cartDetails->product`.`quantityValue` AS `cartDetails.product.quantityValue`, `cartDetails->product`.`price` AS `cartDetails.product.price`, `cartDetails->product`.`brand` AS `cartDetails.product.brand`, `cartDetails->product`.`origin` AS `cartDetails.product.origin`, `cartDetails->product`.`productAt` AS `cartDetails.product.productAt`, `cartDetails->product`.`expireAt` AS `cartDetails.product.expireAt`, `cartDetails->product`.`manual` AS `cartDetails.product.manual`, `cartDetails->product`.`preserve` AS `cartDetails.product.preserve`, `cartDetails->product`.`productImage` AS `cartDetails.product.productImage`, `cartDetails->product`.`createdAt` AS `cartDetails.product.createdAt`, `cartDetails->product`.`updatedAt` AS `cartDetails.product.updatedAt`, `cartDetails->product`.`productCategoryId` AS `cartDetails.product.productCategoryId`, `cartDetails->product`.`quantityId` AS `cartDetails.product.quantityId` FROM (SELECT `carts`.`id`, `carts`.`createdAt`, `carts`.`updatedAt`, `carts`.`userId` FROM `carts` AS `carts` WHERE `carts`.`userId` = '2' AND ( SELECT `cartId` FROM `cartDetails` AS `cartDetails` WHERE ((`cartDetails`.`isBuy` = false AND `cartDetails`.`isDeleted` = false) AND `cartDetails`.`cartId` = `carts`.`id`) LIMIT 1 ) IS NOT NULL LIMIT 1) AS `carts` INNER JOIN `cartDetails` AS `cartDetails` ON `carts`.`id` = `cartDetails`.`cartId` AND `cartDetails`.`isBuy` = false AND `cartDetails`.`isDeleted` = false LEFT OUTER JOIN `products` AS `cartDetails->product` ON `cartDetails`.`productId` = `cartDetails->product`.`id`;
[2021-12-14 04:55:43] [[32minfo[39m] Request: status: [object Object]  data [object SequelizeInstance:carts]
[2021-12-14 04:56:56] [[32minfo[39m] Server is running on port 8080
[2021-12-14 04:56:56] [[32minfo[39m] Executing (default): DROP TABLE IF EXISTS `user_roles`;
[2021-12-14 04:56:56] [[32minfo[39m] Executing (default): DROP TABLE IF EXISTS `marketNotes`;
[2021-12-14 04:56:56] [[32minfo[39m] Executing (default): DROP TABLE IF EXISTS `address-villages`;
[2021-12-14 04:56:56] [[32minfo[39m] Executing (default): DROP TABLE IF EXISTS `address-districts`;
[2021-12-14 04:56:56] [[32minfo[39m] Executing (default): DROP TABLE IF EXISTS `address-provinces`;
[2021-12-14 04:56:56] [[32minfo[39m] Executing (default): DROP TABLE IF EXISTS `favoriteFoodCategories`;
[2021-12-14 04:56:56] [[32minfo[39m] Executing (default): DROP TABLE IF EXISTS `orderDetails`;
[2021-12-14 04:56:56] [[32minfo[39m] Executing (default): DROP TABLE IF EXISTS `orders`;
[2021-12-14 04:56:56] [[32minfo[39m] Executing (default): DROP TABLE IF EXISTS `paymentMethods`;
[2021-12-14 04:56:56] [[32minfo[39m] Executing (default): DROP TABLE IF EXISTS `deliveryMethods`;
[2021-12-14 04:56:56] [[32minfo[39m] Executing (default): DROP TABLE IF EXISTS `cartDetails`;
[2021-12-14 04:56:56] [[32minfo[39m] Executing (default): DROP TABLE IF EXISTS `carts`;
[2021-12-14 04:56:56] [[32minfo[39m] Executing (default): DROP TABLE IF EXISTS `foodCookSteps`;
[2021-12-14 04:56:56] [[32minfo[39m] Executing (default): DROP TABLE IF EXISTS `foodMaterials`;
[2021-12-14 04:56:56] [[32minfo[39m] Executing (default): DROP TABLE IF EXISTS `products`;
[2021-12-14 04:56:56] [[32minfo[39m] Executing (default): DROP TABLE IF EXISTS `quantities`;
[2021-12-14 04:56:56] [[32minfo[39m] Executing (default): DROP TABLE IF EXISTS `productCategories`;
[2021-12-14 04:56:56] [[32minfo[39m] Executing (default): DROP TABLE IF EXISTS `foods`;
[2021-12-14 04:56:57] [[32minfo[39m] Executing (default): DROP TABLE IF EXISTS `foodCategories`;
[2021-12-14 04:56:57] [[32minfo[39m] Executing (default): DROP TABLE IF EXISTS `roles`;
[2021-12-14 04:56:57] [[32minfo[39m] Executing (default): DROP TABLE IF EXISTS `users`;
[2021-12-14 04:56:57] [[32minfo[39m] Executing (default): DROP TABLE IF EXISTS `users`;
[2021-12-14 04:56:57] [[32minfo[39m] Executing (default): CREATE TABLE IF NOT EXISTS `users` (`id` INTEGER NOT NULL auto_increment , `username` VARCHAR(255) UNIQUE, `email` VARCHAR(255) UNIQUE, `password` VARCHAR(255), `firstname` VARCHAR(255), `lastname` VARCHAR(255), `gender` VARCHAR(255), `phone` VARCHAR(255), `birthday` DATE, `address` VARCHAR(255), `userAvatar` VARCHAR(255), `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, PRIMARY KEY (`id`)) ENGINE=InnoDB;
[2021-12-14 04:56:57] [[32minfo[39m] Executing (default): SHOW INDEX FROM `users`
[2021-12-14 04:56:57] [[32minfo[39m] Executing (default): DROP TABLE IF EXISTS `roles`;
[2021-12-14 04:56:57] [[32minfo[39m] Executing (default): CREATE TABLE IF NOT EXISTS `roles` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255), `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, PRIMARY KEY (`id`)) ENGINE=InnoDB;
[2021-12-14 04:56:57] [[32minfo[39m] Executing (default): SHOW INDEX FROM `roles`
[2021-12-14 04:56:57] [[32minfo[39m] Executing (default): DROP TABLE IF EXISTS `foodCategories`;
[2021-12-14 04:56:57] [[32minfo[39m] Executing (default): CREATE TABLE IF NOT EXISTS `foodCategories` (`id` INTEGER NOT NULL auto_increment , `catName` VARCHAR(255), `catIcon` VARCHAR(255), `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, PRIMARY KEY (`id`)) ENGINE=InnoDB;
[2021-12-14 04:56:57] [[32minfo[39m] Executing (default): SHOW INDEX FROM `foodCategories`
[2021-12-14 04:56:57] [[32minfo[39m] Executing (default): DROP TABLE IF EXISTS `foods`;
[2021-12-14 04:56:57] [[32minfo[39m] Executing (default): CREATE TABLE IF NOT EXISTS `foods` (`id` INTEGER NOT NULL auto_increment , `foodName` VARCHAR(255), `foodDescription` VARCHAR(255), `foodCalories` FLOAT, `foodImage` VARCHAR(255), `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, `foodCategoryId` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`foodCategoryId`) REFERENCES `foodCategories` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;
[2021-12-14 04:56:57] [[32minfo[39m] Executing (default): SHOW INDEX FROM `foods`
[2021-12-14 04:56:57] [[32minfo[39m] Executing (default): ALTER TABLE `foods` ADD FULLTEXT INDEX `food_index` (`foodName`)
[2021-12-14 04:56:57] [[32minfo[39m] Executing (default): DROP TABLE IF EXISTS `productCategories`;
[2021-12-14 04:56:57] [[32minfo[39m] Executing (default): CREATE TABLE IF NOT EXISTS `productCategories` (`id` INTEGER NOT NULL auto_increment , `catName` VARCHAR(255), `catIcon` VARCHAR(255), `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, PRIMARY KEY (`id`)) ENGINE=InnoDB;
[2021-12-14 04:56:57] [[32minfo[39m] Executing (default): SHOW INDEX FROM `productCategories`
[2021-12-14 04:56:57] [[32minfo[39m] Executing (default): DROP TABLE IF EXISTS `quantities`;
[2021-12-14 04:56:57] [[32minfo[39m] Executing (default): CREATE TABLE IF NOT EXISTS `quantities` (`id` INTEGER NOT NULL auto_increment , `quantityName` VARCHAR(255), `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, PRIMARY KEY (`id`)) ENGINE=InnoDB;
[2021-12-14 04:56:57] [[32minfo[39m] Executing (default): SHOW INDEX FROM `quantities`
[2021-12-14 04:56:57] [[32minfo[39m] Executing (default): DROP TABLE IF EXISTS `products`;
[2021-12-14 04:56:57] [[32minfo[39m] Executing (default): CREATE TABLE IF NOT EXISTS `products` (`id` INTEGER NOT NULL auto_increment , `proName` VARCHAR(255), `proDescription` VARCHAR(255), `quantityValue` FLOAT, `price` FLOAT, `brand` VARCHAR(255), `origin` VARCHAR(255), `productAt` DATE, `expireAt` VARCHAR(255), `manual` VARCHAR(255), `preserve` VARCHAR(255), `productImage` VARCHAR(255), `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, `productCategoryId` INTEGER, `quantityId` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`productCategoryId`) REFERENCES `productCategories` (`id`) ON DELETE SET NULL ON UPDATE CASCADE, FOREIGN KEY (`quantityId`) REFERENCES `quantities` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;
[2021-12-14 04:56:57] [[32minfo[39m] Executing (default): SHOW INDEX FROM `products`
[2021-12-14 04:56:57] [[32minfo[39m] Executing (default): ALTER TABLE `products` ADD FULLTEXT INDEX `product_index` (`proName`)
[2021-12-14 04:56:58] [[32minfo[39m] Executing (default): DROP TABLE IF EXISTS `foodMaterials`;
[2021-12-14 04:56:58] [[32minfo[39m] Executing (default): CREATE TABLE IF NOT EXISTS `foodMaterials` (`id` INTEGER NOT NULL auto_increment , `foodMaterialName` VARCHAR(255), `quantityDescription` VARCHAR(255), `quantityValue` FLOAT, `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, `foodId` INTEGER, `productId` INTEGER, `quantityId` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`foodId`) REFERENCES `foods` (`id`) ON DELETE SET NULL ON UPDATE CASCADE, FOREIGN KEY (`productId`) REFERENCES `products` (`id`) ON DELETE SET NULL ON UPDATE CASCADE, FOREIGN KEY (`quantityId`) REFERENCES `quantities` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;
[2021-12-14 04:56:58] [[32minfo[39m] Executing (default): SHOW INDEX FROM `foodMaterials`
[2021-12-14 04:56:58] [[32minfo[39m] Executing (default): DROP TABLE IF EXISTS `foodCookSteps`;
[2021-12-14 04:56:58] [[32minfo[39m] Executing (default): CREATE TABLE IF NOT EXISTS `foodCookSteps` (`id` INTEGER NOT NULL auto_increment , `stepNumber` INTEGER, `stepDescription` VARCHAR(255), `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, `foodId` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`foodId`) REFERENCES `foods` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;
[2021-12-14 04:56:58] [[32minfo[39m] Executing (default): SHOW INDEX FROM `foodCookSteps`
[2021-12-14 04:56:58] [[32minfo[39m] Executing (default): DROP TABLE IF EXISTS `carts`;
[2021-12-14 04:56:58] [[32minfo[39m] Executing (default): CREATE TABLE IF NOT EXISTS `carts` (`id` INTEGER NOT NULL auto_increment , `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, `userId` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`userId`) REFERENCES `users` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;
[2021-12-14 04:56:58] [[32minfo[39m] Executing (default): SHOW INDEX FROM `carts`
[2021-12-14 04:56:58] [[32minfo[39m] Executing (default): DROP TABLE IF EXISTS `cartDetails`;
[2021-12-14 04:56:58] [[32minfo[39m] Executing (default): CREATE TABLE IF NOT EXISTS `cartDetails` (`id` INTEGER NOT NULL auto_increment , `quantity` INTEGER, `isBuy` TINYINT(1), `isDeleted` TINYINT(1), `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, `cartId` INTEGER, `productId` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`cartId`) REFERENCES `carts` (`id`) ON DELETE SET NULL ON UPDATE CASCADE, FOREIGN KEY (`productId`) REFERENCES `products` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;
[2021-12-14 04:56:58] [[32minfo[39m] Executing (default): SHOW INDEX FROM `cartDetails`
[2021-12-14 04:56:58] [[32minfo[39m] Executing (default): DROP TABLE IF EXISTS `deliveryMethods`;
[2021-12-14 04:56:58] [[32minfo[39m] Executing (default): CREATE TABLE IF NOT EXISTS `deliveryMethods` (`id` INTEGER NOT NULL auto_increment , `deliveryMethod` VARCHAR(255), `fee` FLOAT, `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, PRIMARY KEY (`id`)) ENGINE=InnoDB;
[2021-12-14 04:56:58] [[32minfo[39m] Executing (default): SHOW INDEX FROM `deliveryMethods`
[2021-12-14 04:56:58] [[32minfo[39m] Executing (default): DROP TABLE IF EXISTS `paymentMethods`;
[2021-12-14 04:56:58] [[32minfo[39m] Executing (default): CREATE TABLE IF NOT EXISTS `paymentMethods` (`id` INTEGER NOT NULL auto_increment , `paymentType` VARCHAR(255), `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, PRIMARY KEY (`id`)) ENGINE=InnoDB;
[2021-12-14 04:56:58] [[32minfo[39m] Executing (default): SHOW INDEX FROM `paymentMethods`
[2021-12-14 04:56:58] [[32minfo[39m] Executing (default): DROP TABLE IF EXISTS `orders`;
[2021-12-14 04:56:58] [[32minfo[39m] Executing (default): CREATE TABLE IF NOT EXISTS `orders` (`id` INTEGER NOT NULL auto_increment , `addressDelivery` VARCHAR(255), `deliveryAt` DATE, `orderStatus` TINYINT(1), `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, `userId` INTEGER, `deliveryMethodId` INTEGER, `shipperId` INTEGER, `paymentMethodId` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`userId`) REFERENCES `users` (`id`) ON DELETE SET NULL ON UPDATE CASCADE, FOREIGN KEY (`deliveryMethodId`) REFERENCES `deliveryMethods` (`id`) ON DELETE SET NULL ON UPDATE CASCADE, FOREIGN KEY (`shipperId`) REFERENCES `users` (`id`) ON DELETE SET NULL ON UPDATE CASCADE, FOREIGN KEY (`paymentMethodId`) REFERENCES `paymentMethods` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;
[2021-12-14 04:56:58] [[32minfo[39m] Executing (default): SHOW INDEX FROM `orders`
[2021-12-14 04:56:58] [[32minfo[39m] Executing (default): DROP TABLE IF EXISTS `orderDetails`;
[2021-12-14 04:56:58] [[32minfo[39m] Executing (default): CREATE TABLE IF NOT EXISTS `orderDetails` (`id` INTEGER NOT NULL auto_increment , `quantity` INTEGER, `price` FLOAT, `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, `orderId` INTEGER, `productId` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`orderId`) REFERENCES `orders` (`id`) ON DELETE SET NULL ON UPDATE CASCADE, FOREIGN KEY (`productId`) REFERENCES `products` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;
[2021-12-14 04:56:58] [[32minfo[39m] Executing (default): SHOW INDEX FROM `orderDetails`
[2021-12-14 04:56:58] [[32minfo[39m] Executing (default): DROP TABLE IF EXISTS `favoriteFoodCategories`;
[2021-12-14 04:56:58] [[32minfo[39m] Executing (default): CREATE TABLE IF NOT EXISTS `favoriteFoodCategories` (`createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, `userId` INTEGER , `foodCategoryId` INTEGER , PRIMARY KEY (`userId`, `foodCategoryId`), FOREIGN KEY (`userId`) REFERENCES `users` (`id`) ON DELETE CASCADE ON UPDATE CASCADE, FOREIGN KEY (`foodCategoryId`) REFERENCES `foodCategories` (`id`) ON DELETE CASCADE ON UPDATE CASCADE) ENGINE=InnoDB;
[2021-12-14 04:56:58] [[32minfo[39m] Executing (default): SHOW INDEX FROM `favoriteFoodCategories`
[2021-12-14 04:56:58] [[32minfo[39m] Executing (default): DROP TABLE IF EXISTS `address-provinces`;
[2021-12-14 04:56:58] [[32minfo[39m] Executing (default): CREATE TABLE IF NOT EXISTS `address-provinces` (`id` INTEGER NOT NULL auto_increment , `province` VARCHAR(255), `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, PRIMARY KEY (`id`)) ENGINE=InnoDB;
[2021-12-14 04:56:59] [[32minfo[39m] Executing (default): SHOW INDEX FROM `address-provinces`
[2021-12-14 04:56:59] [[32minfo[39m] Executing (default): DROP TABLE IF EXISTS `address-districts`;
[2021-12-14 04:56:59] [[32minfo[39m] Executing (default): CREATE TABLE IF NOT EXISTS `address-districts` (`id` INTEGER NOT NULL auto_increment , `district` VARCHAR(255), `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, `addressProvinceId` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`addressProvinceId`) REFERENCES `address-provinces` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;
[2021-12-14 04:56:59] [[32minfo[39m] Executing (default): SHOW INDEX FROM `address-districts`
[2021-12-14 04:56:59] [[32minfo[39m] Executing (default): DROP TABLE IF EXISTS `address-villages`;
[2021-12-14 04:56:59] [[32minfo[39m] Executing (default): CREATE TABLE IF NOT EXISTS `address-villages` (`id` INTEGER NOT NULL auto_increment , `village` VARCHAR(255), `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, `addressDistrictId` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`addressDistrictId`) REFERENCES `address-districts` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;
[2021-12-14 04:56:59] [[32minfo[39m] Executing (default): SHOW INDEX FROM `address-villages`
[2021-12-14 04:56:59] [[32minfo[39m] Executing (default): DROP TABLE IF EXISTS `marketNotes`;
[2021-12-14 04:56:59] [[32minfo[39m] Executing (default): CREATE TABLE IF NOT EXISTS `marketNotes` (`id` INTEGER NOT NULL auto_increment , `marketNoteText` VARCHAR(255), `remindDate` DATE, `isDone` TINYINT(1), `isDeleted` TINYINT(1), `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, `userId` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`userId`) REFERENCES `users` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;
[2021-12-14 04:56:59] [[32minfo[39m] Executing (default): SHOW INDEX FROM `marketNotes`
[2021-12-14 04:56:59] [[32minfo[39m] Executing (default): DROP TABLE IF EXISTS `user_roles`;
[2021-12-14 04:56:59] [[32minfo[39m] Executing (default): CREATE TABLE IF NOT EXISTS `user_roles` (`createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, `roleId` INTEGER , `userId` INTEGER , PRIMARY KEY (`roleId`, `userId`), FOREIGN KEY (`roleId`) REFERENCES `roles` (`id`) ON DELETE CASCADE ON UPDATE CASCADE, FOREIGN KEY (`userId`) REFERENCES `users` (`id`) ON DELETE CASCADE ON UPDATE CASCADE) ENGINE=InnoDB;
[2021-12-14 04:56:59] [[32minfo[39m] Executing (default): SHOW INDEX FROM `user_roles`
[2021-12-14 04:56:59] [[32minfo[39m] Dropped and Resync database
[2021-12-14 04:57:13] [[32minfo[39m] Executing (default): SELECT `id`, `name`, `createdAt`, `updatedAt` FROM `roles` AS `roles` WHERE (`roles`.`name` = 'user');
[2021-12-14 04:57:13] [[32minfo[39m] User baotg is registered
[2021-12-14 04:57:16] [[32minfo[39m] Executing (default): SELECT `id`, `username`, `email`, `password`, `firstname`, `lastname`, `gender`, `phone`, `birthday`, `address`, `userAvatar`, `createdAt`, `updatedAt` FROM `users` AS `users` WHERE `users`.`username` = 'baotg';
[2021-12-14 04:57:26] [[32minfo[39m] Executing (default): SELECT `id`, `createdAt`, `updatedAt`, `userId` FROM `carts` AS `carts` WHERE `carts`.`userId` = '2' LIMIT 1;
[2021-12-14 04:57:31] [[32minfo[39m] Executing (default): SELECT `carts`.*, `cartDetails`.`id` AS `cartDetails.id`, `cartDetails`.`quantity` AS `cartDetails.quantity`, `cartDetails`.`isBuy` AS `cartDetails.isBuy`, `cartDetails`.`isDeleted` AS `cartDetails.isDeleted`, `cartDetails`.`createdAt` AS `cartDetails.createdAt`, `cartDetails`.`updatedAt` AS `cartDetails.updatedAt`, `cartDetails`.`cartId` AS `cartDetails.cartId`, `cartDetails`.`productId` AS `cartDetails.productId`, `cartDetails->product`.`id` AS `cartDetails.product.id`, `cartDetails->product`.`proName` AS `cartDetails.product.proName`, `cartDetails->product`.`proDescription` AS `cartDetails.product.proDescription`, `cartDetails->product`.`quantityValue` AS `cartDetails.product.quantityValue`, `cartDetails->product`.`price` AS `cartDetails.product.price`, `cartDetails->product`.`brand` AS `cartDetails.product.brand`, `cartDetails->product`.`origin` AS `cartDetails.product.origin`, `cartDetails->product`.`productAt` AS `cartDetails.product.productAt`, `cartDetails->product`.`expireAt` AS `cartDetails.product.expireAt`, `cartDetails->product`.`manual` AS `cartDetails.product.manual`, `cartDetails->product`.`preserve` AS `cartDetails.product.preserve`, `cartDetails->product`.`productImage` AS `cartDetails.product.productImage`, `cartDetails->product`.`createdAt` AS `cartDetails.product.createdAt`, `cartDetails->product`.`updatedAt` AS `cartDetails.product.updatedAt`, `cartDetails->product`.`productCategoryId` AS `cartDetails.product.productCategoryId`, `cartDetails->product`.`quantityId` AS `cartDetails.product.quantityId` FROM (SELECT `carts`.`id`, `carts`.`createdAt`, `carts`.`updatedAt`, `carts`.`userId` FROM `carts` AS `carts` WHERE `carts`.`userId` = '2' AND ( SELECT `cartId` FROM `cartDetails` AS `cartDetails` WHERE ((`cartDetails`.`isBuy` = false AND `cartDetails`.`isDeleted` = false) AND `cartDetails`.`cartId` = `carts`.`id`) LIMIT 1 ) IS NOT NULL LIMIT 1) AS `carts` INNER JOIN `cartDetails` AS `cartDetails` ON `carts`.`id` = `cartDetails`.`cartId` AND `cartDetails`.`isBuy` = false AND `cartDetails`.`isDeleted` = false LEFT OUTER JOIN `products` AS `cartDetails->product` ON `cartDetails`.`productId` = `cartDetails->product`.`id`;
[2021-12-14 04:57:31] [[32minfo[39m] Request: status: [object Object]  data [object SequelizeInstance:carts]
[2021-12-14 12:07:32] [[32minfo[39m] Server is running on port 8080
[2021-12-14 12:07:32] [[32minfo[39m] Executing (default): DROP TABLE IF EXISTS `user_roles`;
[2021-12-14 12:07:32] [[32minfo[39m] Executing (default): DROP TABLE IF EXISTS `marketNotes`;
[2021-12-14 12:07:32] [[32minfo[39m] Executing (default): DROP TABLE IF EXISTS `address-villages`;
[2021-12-14 12:07:32] [[32minfo[39m] Executing (default): DROP TABLE IF EXISTS `address-districts`;
[2021-12-14 12:07:32] [[32minfo[39m] Executing (default): DROP TABLE IF EXISTS `address-provinces`;
[2021-12-14 12:07:32] [[32minfo[39m] Executing (default): DROP TABLE IF EXISTS `favoriteFoodCategories`;
[2021-12-14 12:07:32] [[32minfo[39m] Executing (default): DROP TABLE IF EXISTS `orderDetails`;
[2021-12-14 12:07:32] [[32minfo[39m] Executing (default): DROP TABLE IF EXISTS `orders`;
[2021-12-14 12:07:32] [[32minfo[39m] Executing (default): DROP TABLE IF EXISTS `paymentMethods`;
[2021-12-14 12:07:32] [[32minfo[39m] Executing (default): DROP TABLE IF EXISTS `deliveryMethods`;
[2021-12-14 12:07:32] [[32minfo[39m] Executing (default): DROP TABLE IF EXISTS `cartDetails`;
[2021-12-14 12:07:32] [[32minfo[39m] Executing (default): DROP TABLE IF EXISTS `carts`;
[2021-12-14 12:07:32] [[32minfo[39m] Executing (default): DROP TABLE IF EXISTS `foodCookSteps`;
[2021-12-14 12:07:32] [[32minfo[39m] Executing (default): DROP TABLE IF EXISTS `foodMaterials`;
[2021-12-14 12:07:32] [[32minfo[39m] Executing (default): DROP TABLE IF EXISTS `products`;
[2021-12-14 12:07:32] [[32minfo[39m] Executing (default): DROP TABLE IF EXISTS `quantities`;
[2021-12-14 12:07:33] [[32minfo[39m] Executing (default): DROP TABLE IF EXISTS `productCategories`;
[2021-12-14 12:07:33] [[32minfo[39m] Executing (default): DROP TABLE IF EXISTS `foods`;
[2021-12-14 12:07:33] [[32minfo[39m] Executing (default): DROP TABLE IF EXISTS `foodCategories`;
[2021-12-14 12:07:33] [[32minfo[39m] Executing (default): DROP TABLE IF EXISTS `roles`;
[2021-12-14 12:07:33] [[32minfo[39m] Executing (default): DROP TABLE IF EXISTS `users`;
[2021-12-14 12:07:33] [[32minfo[39m] Executing (default): DROP TABLE IF EXISTS `users`;
[2021-12-14 12:07:33] [[32minfo[39m] Executing (default): CREATE TABLE IF NOT EXISTS `users` (`id` INTEGER NOT NULL auto_increment , `username` VARCHAR(255) UNIQUE, `email` VARCHAR(255) UNIQUE, `password` VARCHAR(255), `firstname` VARCHAR(255), `lastname` VARCHAR(255), `gender` VARCHAR(255), `phone` VARCHAR(255), `birthday` DATE, `address` VARCHAR(255), `userAvatar` VARCHAR(255), `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, PRIMARY KEY (`id`)) ENGINE=InnoDB;
[2021-12-14 12:07:33] [[32minfo[39m] Executing (default): SHOW INDEX FROM `users`
[2021-12-14 12:07:33] [[32minfo[39m] Executing (default): DROP TABLE IF EXISTS `roles`;
[2021-12-14 12:07:33] [[32minfo[39m] Executing (default): CREATE TABLE IF NOT EXISTS `roles` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255), `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, PRIMARY KEY (`id`)) ENGINE=InnoDB;
[2021-12-14 12:07:33] [[32minfo[39m] Executing (default): SHOW INDEX FROM `roles`
[2021-12-14 12:07:33] [[32minfo[39m] Executing (default): DROP TABLE IF EXISTS `foodCategories`;
[2021-12-14 12:07:33] [[32minfo[39m] Executing (default): CREATE TABLE IF NOT EXISTS `foodCategories` (`id` INTEGER NOT NULL auto_increment , `catName` VARCHAR(255), `catIcon` VARCHAR(255), `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, PRIMARY KEY (`id`)) ENGINE=InnoDB;
[2021-12-14 12:07:33] [[32minfo[39m] Executing (default): SHOW INDEX FROM `foodCategories`
[2021-12-14 12:07:33] [[32minfo[39m] Executing (default): DROP TABLE IF EXISTS `foods`;
[2021-12-14 12:07:33] [[32minfo[39m] Executing (default): CREATE TABLE IF NOT EXISTS `foods` (`id` INTEGER NOT NULL auto_increment , `foodName` VARCHAR(255), `foodDescription` VARCHAR(255), `foodCalories` FLOAT, `foodImage` VARCHAR(255), `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, `foodCategoryId` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`foodCategoryId`) REFERENCES `foodCategories` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;
[2021-12-14 12:07:33] [[32minfo[39m] Executing (default): SHOW INDEX FROM `foods`
[2021-12-14 12:07:33] [[32minfo[39m] Executing (default): ALTER TABLE `foods` ADD FULLTEXT INDEX `food_index` (`foodName`)
[2021-12-14 12:07:34] [[32minfo[39m] Executing (default): DROP TABLE IF EXISTS `productCategories`;
[2021-12-14 12:07:34] [[32minfo[39m] Executing (default): CREATE TABLE IF NOT EXISTS `productCategories` (`id` INTEGER NOT NULL auto_increment , `catName` VARCHAR(255), `catIcon` VARCHAR(255), `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, PRIMARY KEY (`id`)) ENGINE=InnoDB;
[2021-12-14 12:07:34] [[32minfo[39m] Executing (default): SHOW INDEX FROM `productCategories`
[2021-12-14 12:07:34] [[32minfo[39m] Executing (default): DROP TABLE IF EXISTS `quantities`;
[2021-12-14 12:07:34] [[32minfo[39m] Executing (default): CREATE TABLE IF NOT EXISTS `quantities` (`id` INTEGER NOT NULL auto_increment , `quantityName` VARCHAR(255), `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, PRIMARY KEY (`id`)) ENGINE=InnoDB;
[2021-12-14 12:07:34] [[32minfo[39m] Executing (default): SHOW INDEX FROM `quantities`
[2021-12-14 12:07:34] [[32minfo[39m] Executing (default): DROP TABLE IF EXISTS `products`;
[2021-12-14 12:07:34] [[32minfo[39m] Executing (default): CREATE TABLE IF NOT EXISTS `products` (`id` INTEGER NOT NULL auto_increment , `proName` VARCHAR(255), `proDescription` VARCHAR(255), `quantityValue` FLOAT, `price` FLOAT, `brand` VARCHAR(255), `origin` VARCHAR(255), `productAt` DATE, `expireAt` VARCHAR(255), `manual` VARCHAR(255), `preserve` VARCHAR(255), `productImage` VARCHAR(255), `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, `productCategoryId` INTEGER, `quantityId` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`productCategoryId`) REFERENCES `productCategories` (`id`) ON DELETE SET NULL ON UPDATE CASCADE, FOREIGN KEY (`quantityId`) REFERENCES `quantities` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;
[2021-12-14 12:07:34] [[32minfo[39m] Executing (default): SHOW INDEX FROM `products`
[2021-12-14 12:07:34] [[32minfo[39m] Executing (default): ALTER TABLE `products` ADD FULLTEXT INDEX `product_index` (`proName`)
[2021-12-14 12:07:34] [[32minfo[39m] Executing (default): DROP TABLE IF EXISTS `foodMaterials`;
[2021-12-14 12:07:34] [[32minfo[39m] Executing (default): CREATE TABLE IF NOT EXISTS `foodMaterials` (`id` INTEGER NOT NULL auto_increment , `foodMaterialName` VARCHAR(255), `quantityDescription` VARCHAR(255), `quantityValue` FLOAT, `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, `foodId` INTEGER, `productId` INTEGER, `quantityId` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`foodId`) REFERENCES `foods` (`id`) ON DELETE SET NULL ON UPDATE CASCADE, FOREIGN KEY (`productId`) REFERENCES `products` (`id`) ON DELETE SET NULL ON UPDATE CASCADE, FOREIGN KEY (`quantityId`) REFERENCES `quantities` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;
[2021-12-14 12:07:35] [[32minfo[39m] Executing (default): SHOW INDEX FROM `foodMaterials`
[2021-12-14 12:07:35] [[32minfo[39m] Executing (default): DROP TABLE IF EXISTS `foodCookSteps`;
[2021-12-14 12:07:35] [[32minfo[39m] Executing (default): CREATE TABLE IF NOT EXISTS `foodCookSteps` (`id` INTEGER NOT NULL auto_increment , `stepNumber` INTEGER, `stepDescription` VARCHAR(255), `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, `foodId` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`foodId`) REFERENCES `foods` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;
[2021-12-14 12:07:35] [[32minfo[39m] Executing (default): SHOW INDEX FROM `foodCookSteps`
[2021-12-14 12:07:35] [[32minfo[39m] Executing (default): DROP TABLE IF EXISTS `carts`;
[2021-12-14 12:07:35] [[32minfo[39m] Executing (default): CREATE TABLE IF NOT EXISTS `carts` (`id` INTEGER NOT NULL auto_increment , `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, `userId` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`userId`) REFERENCES `users` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;
[2021-12-14 12:07:35] [[32minfo[39m] Executing (default): SHOW INDEX FROM `carts`
[2021-12-14 12:07:35] [[32minfo[39m] Executing (default): DROP TABLE IF EXISTS `cartDetails`;
[2021-12-14 12:07:35] [[32minfo[39m] Executing (default): CREATE TABLE IF NOT EXISTS `cartDetails` (`id` INTEGER NOT NULL auto_increment , `quantity` INTEGER, `isBuy` TINYINT(1), `isDeleted` TINYINT(1), `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, `cartId` INTEGER, `productId` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`cartId`) REFERENCES `carts` (`id`) ON DELETE SET NULL ON UPDATE CASCADE, FOREIGN KEY (`productId`) REFERENCES `products` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;
[2021-12-14 12:07:35] [[32minfo[39m] Executing (default): SHOW INDEX FROM `cartDetails`
[2021-12-14 12:07:35] [[32minfo[39m] Executing (default): DROP TABLE IF EXISTS `deliveryMethods`;
[2021-12-14 12:07:35] [[32minfo[39m] Executing (default): CREATE TABLE IF NOT EXISTS `deliveryMethods` (`id` INTEGER NOT NULL auto_increment , `deliveryMethod` VARCHAR(255), `fee` FLOAT, `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, PRIMARY KEY (`id`)) ENGINE=InnoDB;
[2021-12-14 12:07:35] [[32minfo[39m] Executing (default): SHOW INDEX FROM `deliveryMethods`
[2021-12-14 12:07:35] [[32minfo[39m] Executing (default): DROP TABLE IF EXISTS `paymentMethods`;
[2021-12-14 12:07:35] [[32minfo[39m] Executing (default): CREATE TABLE IF NOT EXISTS `paymentMethods` (`id` INTEGER NOT NULL auto_increment , `paymentType` VARCHAR(255), `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, PRIMARY KEY (`id`)) ENGINE=InnoDB;
[2021-12-14 12:07:35] [[32minfo[39m] Executing (default): SHOW INDEX FROM `paymentMethods`
[2021-12-14 12:07:35] [[32minfo[39m] Executing (default): DROP TABLE IF EXISTS `orders`;
[2021-12-14 12:07:35] [[32minfo[39m] Executing (default): CREATE TABLE IF NOT EXISTS `orders` (`id` INTEGER NOT NULL auto_increment , `addressDelivery` VARCHAR(255), `deliveryAt` DATE, `orderStatus` TINYINT(1), `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, `userId` INTEGER, `deliveryMethodId` INTEGER, `shipperId` INTEGER, `paymentMethodId` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`userId`) REFERENCES `users` (`id`) ON DELETE SET NULL ON UPDATE CASCADE, FOREIGN KEY (`deliveryMethodId`) REFERENCES `deliveryMethods` (`id`) ON DELETE SET NULL ON UPDATE CASCADE, FOREIGN KEY (`shipperId`) REFERENCES `users` (`id`) ON DELETE SET NULL ON UPDATE CASCADE, FOREIGN KEY (`paymentMethodId`) REFERENCES `paymentMethods` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;
[2021-12-14 12:07:35] [[32minfo[39m] Executing (default): SHOW INDEX FROM `orders`
[2021-12-14 12:07:35] [[32minfo[39m] Executing (default): DROP TABLE IF EXISTS `orderDetails`;
[2021-12-14 12:07:35] [[32minfo[39m] Executing (default): CREATE TABLE IF NOT EXISTS `orderDetails` (`id` INTEGER NOT NULL auto_increment , `quantity` INTEGER, `price` FLOAT, `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, `orderId` INTEGER, `productId` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`orderId`) REFERENCES `orders` (`id`) ON DELETE SET NULL ON UPDATE CASCADE, FOREIGN KEY (`productId`) REFERENCES `products` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;
[2021-12-14 12:07:35] [[32minfo[39m] Executing (default): SHOW INDEX FROM `orderDetails`
[2021-12-14 12:07:35] [[32minfo[39m] Executing (default): DROP TABLE IF EXISTS `favoriteFoodCategories`;
[2021-12-14 12:07:35] [[32minfo[39m] Executing (default): CREATE TABLE IF NOT EXISTS `favoriteFoodCategories` (`createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, `userId` INTEGER , `foodCategoryId` INTEGER , PRIMARY KEY (`userId`, `foodCategoryId`), FOREIGN KEY (`userId`) REFERENCES `users` (`id`) ON DELETE CASCADE ON UPDATE CASCADE, FOREIGN KEY (`foodCategoryId`) REFERENCES `foodCategories` (`id`) ON DELETE CASCADE ON UPDATE CASCADE) ENGINE=InnoDB;
[2021-12-14 12:07:35] [[32minfo[39m] Executing (default): SHOW INDEX FROM `favoriteFoodCategories`
[2021-12-14 12:07:35] [[32minfo[39m] Executing (default): DROP TABLE IF EXISTS `address-provinces`;
[2021-12-14 12:07:35] [[32minfo[39m] Executing (default): CREATE TABLE IF NOT EXISTS `address-provinces` (`id` INTEGER NOT NULL auto_increment , `province` VARCHAR(255), `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, PRIMARY KEY (`id`)) ENGINE=InnoDB;
[2021-12-14 12:07:35] [[32minfo[39m] Executing (default): SHOW INDEX FROM `address-provinces`
[2021-12-14 12:07:35] [[32minfo[39m] Executing (default): DROP TABLE IF EXISTS `address-districts`;
[2021-12-14 12:07:35] [[32minfo[39m] Executing (default): CREATE TABLE IF NOT EXISTS `address-districts` (`id` INTEGER NOT NULL auto_increment , `district` VARCHAR(255), `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, `addressProvinceId` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`addressProvinceId`) REFERENCES `address-provinces` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;
[2021-12-14 12:07:35] [[32minfo[39m] Executing (default): SHOW INDEX FROM `address-districts`
[2021-12-14 12:07:35] [[32minfo[39m] Executing (default): DROP TABLE IF EXISTS `address-villages`;
[2021-12-14 12:07:35] [[32minfo[39m] Executing (default): CREATE TABLE IF NOT EXISTS `address-villages` (`id` INTEGER NOT NULL auto_increment , `village` VARCHAR(255), `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, `addressDistrictId` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`addressDistrictId`) REFERENCES `address-districts` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;
[2021-12-14 12:07:36] [[32minfo[39m] Executing (default): SHOW INDEX FROM `address-villages`
[2021-12-14 12:07:36] [[32minfo[39m] Executing (default): DROP TABLE IF EXISTS `marketNotes`;
[2021-12-14 12:07:36] [[32minfo[39m] Executing (default): CREATE TABLE IF NOT EXISTS `marketNotes` (`id` INTEGER NOT NULL auto_increment , `marketNoteText` VARCHAR(255), `remindDate` DATE, `isDone` TINYINT(1), `isDeleted` TINYINT(1), `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, `userId` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`userId`) REFERENCES `users` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;
[2021-12-14 12:07:36] [[32minfo[39m] Executing (default): SHOW INDEX FROM `marketNotes`
[2021-12-14 12:07:36] [[32minfo[39m] Executing (default): DROP TABLE IF EXISTS `user_roles`;
[2021-12-14 12:07:36] [[32minfo[39m] Executing (default): CREATE TABLE IF NOT EXISTS `user_roles` (`createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, `roleId` INTEGER , `userId` INTEGER , PRIMARY KEY (`roleId`, `userId`), FOREIGN KEY (`roleId`) REFERENCES `roles` (`id`) ON DELETE CASCADE ON UPDATE CASCADE, FOREIGN KEY (`userId`) REFERENCES `users` (`id`) ON DELETE CASCADE ON UPDATE CASCADE) ENGINE=InnoDB;
[2021-12-14 12:07:36] [[32minfo[39m] Executing (default): SHOW INDEX FROM `user_roles`
[2021-12-14 12:07:36] [[32minfo[39m] Dropped and Resync database
[2021-12-14 12:10:35] [[32minfo[39m] Executing (default): SELECT `id`, `username`, `email`, `password`, `firstname`, `lastname`, `gender`, `phone`, `birthday`, `address`, `userAvatar`, `createdAt`, `updatedAt` FROM `users` AS `users` WHERE `users`.`username` = 'phuc2106';
[2021-12-14 12:19:21] [[32minfo[39m] Executing (default): SELECT `id`, `username`, `email`, `password`, `firstname`, `lastname`, `gender`, `phone`, `birthday`, `address`, `userAvatar`, `createdAt`, `updatedAt` FROM `users` AS `users` WHERE `users`.`username` = 'phuctg';
[2021-12-14 12:19:21] [[32minfo[39m] Executing (default): SELECT `id`, `username`, `email`, `password`, `firstname`, `lastname`, `gender`, `phone`, `birthday`, `address`, `userAvatar`, `createdAt`, `updatedAt` FROM `users` AS `users` WHERE `users`.`id` = '1';
[2021-12-14 12:19:21] [[32minfo[39m] Request status: [object Object] data [object SequelizeInstance:users]
[2021-12-14 12:19:21] [[31merror[39m] Request status: [object Object] error Error: ENOENT: no such file or directory, open 'D:\git\CNPMM\BEnull'
[2021-12-14 12:19:21] [[32minfo[39m] Executing (default): SELECT `createdAt`, `updatedAt`, `userId`, `foodCategoryId` FROM `favoriteFoodCategories` AS `favoriteFoodCategories` WHERE `favoriteFoodCategories`.`userId` = '1';
[2021-12-14 12:19:21] [[32minfo[39m] Request status: [object Object] data 
[2021-12-14 12:19:24] [[32minfo[39m] Executing (default): SELECT `id`, `catName`, `catIcon` FROM `foodCategories` AS `foodCategories`;
[2021-12-14 12:19:24] [[32minfo[39m] Request status: [object Object] data [object SequelizeInstance:foodCategories],[object SequelizeInstance:foodCategories],[object SequelizeInstance:foodCategories],[object SequelizeInstance:foodCategories],[object SequelizeInstance:foodCategories]
[2021-12-14 12:19:24] [[32minfo[39m] Executing (default): SELECT `id`, `username`, `email`, `password`, `firstname`, `lastname`, `gender`, `phone`, `birthday`, `address`, `userAvatar`, `createdAt`, `updatedAt` FROM `users` AS `users` WHERE `users`.`id` = '1';
[2021-12-14 12:19:24] [[32minfo[39m] Executing (default): SELECT `createdAt`, `updatedAt`, `userId`, `foodCategoryId` FROM `favoriteFoodCategories` AS `favoriteFoodCategories` WHERE `favoriteFoodCategories`.`userId` = '1';
[2021-12-14 12:19:24] [[32minfo[39m] Request status: [object Object] data [object SequelizeInstance:users]
[2021-12-14 12:19:24] [[31merror[39m] Request status: [object Object] error Error: ENOENT: no such file or directory, open 'D:\git\CNPMM\BEnull'
[2021-12-14 12:19:24] [[32minfo[39m] Request status: [object Object] data 
[2021-12-14 12:19:26] [[32minfo[39m] Executing (default): SELECT `createdAt`, `updatedAt`, `userId`, `foodCategoryId` FROM `favoriteFoodCategories` AS `favoriteFoodCategories` WHERE `favoriteFoodCategories`.`userId` = '1';
[2021-12-14 12:19:26] [[32minfo[39m] Request status: [object Object] data 
[2021-12-14 12:19:26] [[32minfo[39m] Request status: [object Object]
[2021-12-14 12:19:28] [[32minfo[39m] Executing (default): SELECT `id`, `username`, `email`, `password`, `firstname`, `lastname`, `gender`, `phone`, `birthday`, `address`, `userAvatar`, `createdAt`, `updatedAt` FROM `users` AS `users` WHERE `users`.`id` = '1';
[2021-12-14 12:19:28] [[32minfo[39m] Executing (default): SELECT `createdAt`, `updatedAt`, `userId`, `foodCategoryId` FROM `favoriteFoodCategories` AS `favoriteFoodCategories` WHERE `favoriteFoodCategories`.`userId` = '1';
[2021-12-14 12:19:28] [[32minfo[39m] Request status: [object Object] data [object SequelizeInstance:users]
[2021-12-14 12:19:28] [[31merror[39m] Request status: [object Object] error Error: ENOENT: no such file or directory, open 'D:\git\CNPMM\BEnull'
[2021-12-14 12:19:28] [[32minfo[39m] Request status: [object Object] data [object SequelizeInstance:favoriteFoodCategories]
[2021-12-14 12:19:34] [[32minfo[39m] Executing (default): SELECT `createdAt`, `updatedAt`, `userId`, `foodCategoryId` FROM `favoriteFoodCategories` AS `favoriteFoodCategories` WHERE `favoriteFoodCategories`.`userId` = '1';
[2021-12-14 12:19:34] [[32minfo[39m] Executing (default): SELECT `id`, `username`, `email`, `password`, `firstname`, `lastname`, `gender`, `phone`, `birthday`, `address`, `userAvatar`, `createdAt`, `updatedAt` FROM `users` AS `users` WHERE `users`.`id` = '1';
[2021-12-14 12:19:34] [[32minfo[39m] Executing (default): SELECT `id`, `catName` FROM `productCategories` AS `productCategories`;
[2021-12-14 12:19:34] [[32minfo[39m] Request status: [object Object] data [object SequelizeInstance:favoriteFoodCategories]
[2021-12-14 12:19:34] [[32minfo[39m] Request status: [object Object] data [object SequelizeInstance:users]
[2021-12-14 12:19:34] [[31merror[39m] Request status: [object Object] error Error: ENOENT: no such file or directory, open 'D:\git\CNPMM\BEnull'
[2021-12-14 12:19:34] [[32minfo[39m] Request status: [object Object] data [object SequelizeInstance:productCategories],[object SequelizeInstance:productCategories],[object SequelizeInstance:productCategories],[object SequelizeInstance:productCategories],[object SequelizeInstance:productCategories]
[2021-12-14 12:19:35] [[32minfo[39m] Executing (default): SELECT `id`, `username`, `email`, `password`, `firstname`, `lastname`, `gender`, `phone`, `birthday`, `address`, `userAvatar`, `createdAt`, `updatedAt` FROM `users` AS `users` WHERE `users`.`id` = '1';
[2021-12-14 12:19:35] [[32minfo[39m] Executing (default): SELECT `createdAt`, `updatedAt`, `userId`, `foodCategoryId` FROM `favoriteFoodCategories` AS `favoriteFoodCategories` WHERE `favoriteFoodCategories`.`userId` = '1';
[2021-12-14 12:19:35] [[32minfo[39m] Request status: [object Object] data [object SequelizeInstance:users]
[2021-12-14 12:19:35] [[31merror[39m] Request status: [object Object] error Error: ENOENT: no such file or directory, open 'D:\git\CNPMM\BEnull'
[2021-12-14 12:19:35] [[32minfo[39m] Request status: [object Object] data [object SequelizeInstance:favoriteFoodCategories]
[2021-12-14 12:19:46] [[32minfo[39m] Executing (default): SELECT `createdAt`, `updatedAt`, `userId`, `foodCategoryId` FROM `favoriteFoodCategories` AS `favoriteFoodCategories` WHERE `favoriteFoodCategories`.`userId` = '1';
[2021-12-14 12:19:46] [[32minfo[39m] Executing (default): SELECT `id`, `username`, `email`, `password`, `firstname`, `lastname`, `gender`, `phone`, `birthday`, `address`, `userAvatar`, `createdAt`, `updatedAt` FROM `users` AS `users` WHERE `users`.`id` = '1';
[2021-12-14 12:19:46] [[32minfo[39m] Request status: [object Object] data [object SequelizeInstance:favoriteFoodCategories]
[2021-12-14 12:19:46] [[32minfo[39m] Request status: [object Object] data [object SequelizeInstance:users]
[2021-12-14 12:19:46] [[31merror[39m] Request status: [object Object] error Error: ENOENT: no such file or directory, open 'D:\git\CNPMM\BEnull'
[2021-12-14 12:19:47] [[32minfo[39m] Executing (default): SELECT `id`, `proName`, `proDescription`, `quantityValue`, `price`, `brand`, `origin`, `productAt`, `expireAt`, `manual`, `preserve`, `productImage`, `createdAt`, `updatedAt`, `productCategoryId`, `quantityId` FROM `products` AS `products` WHERE `products`.`productCategoryId` = '2';
[2021-12-14 12:19:47] [[32minfo[39m] Request status: [object Object] data [object SequelizeInstance:products],[object SequelizeInstance:products],[object SequelizeInstance:products],[object SequelizeInstance:products],[object SequelizeInstance:products],[object SequelizeInstance:products],[object SequelizeInstance:products],[object SequelizeInstance:products],[object SequelizeInstance:products],[object SequelizeInstance:products],[object SequelizeInstance:products]
[2021-12-14 12:19:53] [[32minfo[39m] Executing (default): SELECT `id`, `catName`, `catIcon` FROM `foodCategories` AS `foodCategories`;
[2021-12-14 12:19:53] [[32minfo[39m] Request status: [object Object] data [object SequelizeInstance:foodCategories],[object SequelizeInstance:foodCategories],[object SequelizeInstance:foodCategories],[object SequelizeInstance:foodCategories],[object SequelizeInstance:foodCategories]
[2021-12-14 12:19:54] [[32minfo[39m] Executing (default): SELECT `id`, `foodName`, `foodDescription`, `foodCalories`, `foodImage`, `createdAt`, `updatedAt`, `foodCategoryId` FROM `foods` AS `foods` WHERE `foods`.`foodCategoryId` = '2';
[2021-12-14 12:19:54] [[32minfo[39m] Request status: [object Object] data [object SequelizeInstance:foods],[object SequelizeInstance:foods],[object SequelizeInstance:foods],[object SequelizeInstance:foods],[object SequelizeInstance:foods]
[2021-12-14 12:19:56] [[32minfo[39m] Executing (default): SELECT `id`, `username`, `email`, `password`, `firstname`, `lastname`, `gender`, `phone`, `birthday`, `address`, `userAvatar`, `createdAt`, `updatedAt` FROM `users` AS `users` WHERE `users`.`id` = '1';
[2021-12-14 12:19:56] [[32minfo[39m] Request status: [object Object] data [object SequelizeInstance:users]
[2021-12-14 12:19:56] [[31merror[39m] Request status: [object Object] error Error: ENOENT: no such file or directory, open 'D:\git\CNPMM\BEnull'
[2021-12-14 12:19:56] [[32minfo[39m] Executing (default): SELECT `createdAt`, `updatedAt`, `userId`, `foodCategoryId` FROM `favoriteFoodCategories` AS `favoriteFoodCategories` WHERE `favoriteFoodCategories`.`userId` = '1';
[2021-12-14 12:19:56] [[32minfo[39m] Request status: [object Object] data [object SequelizeInstance:favoriteFoodCategories]
[2021-12-14 12:20:00] [[32minfo[39m] Executing (default): SELECT `id`, `username`, `email`, `password`, `firstname`, `lastname`, `gender`, `phone`, `birthday`, `address`, `userAvatar`, `createdAt`, `updatedAt` FROM `users` AS `users` WHERE `users`.`id` = '1';
[2021-12-14 12:20:00] [[32minfo[39m] Executing (default): SELECT `createdAt`, `updatedAt`, `userId`, `foodCategoryId` FROM `favoriteFoodCategories` AS `favoriteFoodCategories` WHERE `favoriteFoodCategories`.`userId` = '1';
[2021-12-14 12:20:00] [[32minfo[39m] Request status: [object Object] data [object SequelizeInstance:users]
[2021-12-14 12:20:00] [[31merror[39m] Request status: [object Object] error Error: ENOENT: no such file or directory, open 'D:\git\CNPMM\BEnull'
[2021-12-14 12:20:00] [[32minfo[39m] Request status: [object Object] data [object SequelizeInstance:favoriteFoodCategories]
[2021-12-14 12:20:01] [[32minfo[39m] Executing (default): SELECT `foods`.`id`, `foods`.`foodName`, `foods`.`foodDescription`, `foods`.`foodCalories`, `foods`.`foodImage`, `foods`.`createdAt`, `foods`.`updatedAt`, `foods`.`foodCategoryId`, `foodMaterials`.`id` AS `foodMaterials.id`, `foodMaterials`.`foodMaterialName` AS `foodMaterials.foodMaterialName`, `foodMaterials`.`quantityDescription` AS `foodMaterials.quantityDescription`, `foodMaterials`.`productId` AS `foodMaterials.productId`, `foodCookSteps`.`id` AS `foodCookSteps.id`, `foodCookSteps`.`stepNumber` AS `foodCookSteps.stepNumber`, `foodCookSteps`.`stepDescription` AS `foodCookSteps.stepDescription` FROM `foods` AS `foods` LEFT OUTER JOIN `foodMaterials` AS `foodMaterials` ON `foods`.`id` = `foodMaterials`.`foodId` LEFT OUTER JOIN `foodCookSteps` AS `foodCookSteps` ON `foods`.`id` = `foodCookSteps`.`foodId` WHERE `foods`.`id` = '6';
[2021-12-14 12:20:01] [[32minfo[39m] Request status: [object Object] data [object SequelizeInstance:foods]
[2021-12-14 12:20:03] [[32minfo[39m] Executing (default): SELECT `id`, `username`, `email`, `password`, `firstname`, `lastname`, `gender`, `phone`, `birthday`, `address`, `userAvatar`, `createdAt`, `updatedAt` FROM `users` AS `users` WHERE `users`.`id` = '1';
[2021-12-14 12:20:03] [[32minfo[39m] Executing (default): SELECT `createdAt`, `updatedAt`, `userId`, `foodCategoryId` FROM `favoriteFoodCategories` AS `favoriteFoodCategories` WHERE `favoriteFoodCategories`.`userId` = '1';
[2021-12-14 12:20:03] [[32minfo[39m] Request status: [object Object] data [object SequelizeInstance:users]
[2021-12-14 12:20:03] [[31merror[39m] Request status: [object Object] error Error: ENOENT: no such file or directory, open 'D:\git\CNPMM\BEnull'
[2021-12-14 12:20:03] [[32minfo[39m] Request status: [object Object] data [object SequelizeInstance:favoriteFoodCategories]
[2021-12-14 12:20:08] [[32minfo[39m] Executing (default): SELECT `id`, `username`, `email`, `password`, `firstname`, `lastname`, `gender`, `phone`, `birthday`, `address`, `userAvatar`, `createdAt`, `updatedAt` FROM `users` AS `users` WHERE `users`.`id` = '1';
[2021-12-14 12:20:08] [[32minfo[39m] Executing (default): SELECT `createdAt`, `updatedAt`, `userId`, `foodCategoryId` FROM `favoriteFoodCategories` AS `favoriteFoodCategories` WHERE `favoriteFoodCategories`.`userId` = '1';
[2021-12-14 12:20:08] [[32minfo[39m] Request status: [object Object] data [object SequelizeInstance:users]
[2021-12-14 12:20:08] [[31merror[39m] Request status: [object Object] error Error: ENOENT: no such file or directory, open 'D:\git\CNPMM\BEnull'
[2021-12-14 12:20:08] [[32minfo[39m] Request status: [object Object] data [object SequelizeInstance:favoriteFoodCategories]
[2021-12-14 12:20:09] [[32minfo[39m] Executing (default): SELECT `foods`.`id`, `foods`.`foodName`, `foods`.`foodDescription`, `foods`.`foodCalories`, `foods`.`foodImage`, `foods`.`createdAt`, `foods`.`updatedAt`, `foods`.`foodCategoryId`, `foodMaterials`.`id` AS `foodMaterials.id`, `foodMaterials`.`foodMaterialName` AS `foodMaterials.foodMaterialName`, `foodMaterials`.`quantityDescription` AS `foodMaterials.quantityDescription`, `foodMaterials`.`productId` AS `foodMaterials.productId`, `foodCookSteps`.`id` AS `foodCookSteps.id`, `foodCookSteps`.`stepNumber` AS `foodCookSteps.stepNumber`, `foodCookSteps`.`stepDescription` AS `foodCookSteps.stepDescription` FROM `foods` AS `foods` LEFT OUTER JOIN `foodMaterials` AS `foodMaterials` ON `foods`.`id` = `foodMaterials`.`foodId` LEFT OUTER JOIN `foodCookSteps` AS `foodCookSteps` ON `foods`.`id` = `foodCookSteps`.`foodId` WHERE `foods`.`id` = '10';
[2021-12-14 12:20:09] [[32minfo[39m] Request status: [object Object] data [object SequelizeInstance:foods]
[2021-12-14 12:20:15] [[32minfo[39m] Executing (default): SELECT `createdAt`, `updatedAt`, `userId`, `foodCategoryId` FROM `favoriteFoodCategories` AS `favoriteFoodCategories` WHERE `favoriteFoodCategories`.`userId` = '1';
[2021-12-14 12:20:15] [[32minfo[39m] Executing (default): SELECT `id`, `username`, `email`, `password`, `firstname`, `lastname`, `gender`, `phone`, `birthday`, `address`, `userAvatar`, `createdAt`, `updatedAt` FROM `users` AS `users` WHERE `users`.`id` = '1';
[2021-12-14 12:20:15] [[32minfo[39m] Request status: [object Object] data [object SequelizeInstance:favoriteFoodCategories]
[2021-12-14 12:20:15] [[32minfo[39m] Request status: [object Object] data [object SequelizeInstance:users]
[2021-12-14 12:20:15] [[31merror[39m] Request status: [object Object] error Error: ENOENT: no such file or directory, open 'D:\git\CNPMM\BEnull'
[2021-12-14 12:20:32] [[32minfo[39m] Executing (default): SELECT `id`, `username`, `email`, `password`, `firstname`, `lastname`, `gender`, `phone`, `birthday`, `address`, `userAvatar`, `createdAt`, `updatedAt` FROM `users` AS `users` WHERE `users`.`id` = '1';
[2021-12-14 12:20:32] [[32minfo[39m] Request status: [object Object] data [object SequelizeInstance:users]
[2021-12-14 12:20:32] [[31merror[39m] Request status: [object Object] error Error: ENOENT: no such file or directory, open 'D:\git\CNPMM\BEnull'
[2021-12-14 12:20:32] [[32minfo[39m] Executing (default): SELECT `createdAt`, `updatedAt`, `userId`, `foodCategoryId` FROM `favoriteFoodCategories` AS `favoriteFoodCategories` WHERE `favoriteFoodCategories`.`userId` = '1';
[2021-12-14 12:20:32] [[32minfo[39m] Executing (default): SELECT `id`, `username`, `email`, `password`, `firstname`, `lastname`, `gender`, `phone`, `birthday`, `address`, `userAvatar`, `createdAt`, `updatedAt` FROM `users` AS `users` WHERE `users`.`id` = '1';
[2021-12-14 12:20:32] [[32minfo[39m] Request status: [object Object] data [object SequelizeInstance:favoriteFoodCategories]
[2021-12-14 12:20:32] [[32minfo[39m] Request status: [object Object] data [object SequelizeInstance:users]
[2021-12-14 12:20:32] [[31merror[39m] Request status: [object Object] error Error: ENOENT: no such file or directory, open 'D:\git\CNPMM\BEnull'
[2021-12-14 12:20:34] [[32minfo[39m] Executing (default): SELECT `id`, `catName`, `catIcon` FROM `foodCategories` AS `foodCategories`;
[2021-12-14 12:20:34] [[32minfo[39m] Request status: [object Object] data [object SequelizeInstance:foodCategories],[object SequelizeInstance:foodCategories],[object SequelizeInstance:foodCategories],[object SequelizeInstance:foodCategories],[object SequelizeInstance:foodCategories]
[2021-12-14 12:20:35] [[32minfo[39m] Executing (default): SELECT `createdAt`, `updatedAt`, `userId`, `foodCategoryId` FROM `favoriteFoodCategories` AS `favoriteFoodCategories` WHERE `favoriteFoodCategories`.`userId` = '1';
[2021-12-14 12:20:35] [[32minfo[39m] Request status: [object Object] data [object SequelizeInstance:favoriteFoodCategories]
[2021-12-14 12:20:35] [[32minfo[39m] Request status: [object Object]
[2021-12-14 12:21:04] [[32minfo[39m] Executing (default): SELECT `id`, `username`, `email`, `password`, `firstname`, `lastname`, `gender`, `phone`, `birthday`, `address`, `userAvatar`, `createdAt`, `updatedAt` FROM `users` AS `users` WHERE `users`.`username` = 'phuctg';
[2021-12-14 12:21:04] [[32minfo[39m] Executing (default): SELECT `id`, `username`, `email`, `password`, `firstname`, `lastname`, `gender`, `phone`, `birthday`, `address`, `userAvatar`, `createdAt`, `updatedAt` FROM `users` AS `users` WHERE `users`.`id` = '1';
[2021-12-14 12:21:04] [[32minfo[39m] Request status: [object Object] data [object SequelizeInstance:users]
[2021-12-14 12:21:04] [[31merror[39m] Request status: [object Object] error Error: ENOENT: no such file or directory, open 'D:\git\CNPMM\BEnull'
[2021-12-14 12:21:04] [[32minfo[39m] Executing (default): SELECT `createdAt`, `updatedAt`, `userId`, `foodCategoryId` FROM `favoriteFoodCategories` AS `favoriteFoodCategories` WHERE `favoriteFoodCategories`.`userId` = '1';
[2021-12-14 12:21:04] [[32minfo[39m] Request status: [object Object] data [object SequelizeInstance:favoriteFoodCategories],[object SequelizeInstance:favoriteFoodCategories]
[2021-12-14 12:21:08] [[32minfo[39m] Executing (default): SELECT `id`, `username`, `email`, `password`, `firstname`, `lastname`, `gender`, `phone`, `birthday`, `address`, `userAvatar`, `createdAt`, `updatedAt` FROM `users` AS `users` WHERE `users`.`id` = '1';
[2021-12-14 12:21:08] [[32minfo[39m] Executing (default): SELECT `id`, `username`, `email`, `password`, `firstname`, `lastname`, `gender`, `phone`, `birthday`, `address`, `userAvatar`, `createdAt`, `updatedAt` FROM `users` AS `users` WHERE `users`.`id` = '1';
[2021-12-14 12:21:08] [[32minfo[39m] Request status: [object Object] data [object SequelizeInstance:users]
[2021-12-14 12:21:08] [[31merror[39m] Request status: [object Object] error Error: ENOENT: no such file or directory, open 'D:\git\CNPMM\BEnull'
[2021-12-14 12:21:08] [[32minfo[39m] Executing (default): SELECT `createdAt`, `updatedAt`, `userId`, `foodCategoryId` FROM `favoriteFoodCategories` AS `favoriteFoodCategories` WHERE `favoriteFoodCategories`.`userId` = '1';
[2021-12-14 12:21:08] [[32minfo[39m] Request status: [object Object] data [object SequelizeInstance:users]
[2021-12-14 12:21:08] [[31merror[39m] Request status: [object Object] error Error: ENOENT: no such file or directory, open 'D:\git\CNPMM\BEnull'
[2021-12-14 12:21:08] [[32minfo[39m] Request status: [object Object] data [object SequelizeInstance:favoriteFoodCategories],[object SequelizeInstance:favoriteFoodCategories]
[2021-12-14 12:21:09] [[32minfo[39m] Executing (default): SELECT `id`, `username`, `email`, `password`, `firstname`, `lastname`, `gender`, `phone`, `birthday`, `address`, `userAvatar`, `createdAt`, `updatedAt` FROM `users` AS `users` WHERE `users`.`id` = '1';
[2021-12-14 12:21:09] [[32minfo[39m] Executing (default): SELECT `createdAt`, `updatedAt`, `userId`, `foodCategoryId` FROM `favoriteFoodCategories` AS `favoriteFoodCategories` WHERE `favoriteFoodCategories`.`userId` = '1';
[2021-12-14 12:21:09] [[32minfo[39m] Request status: [object Object] data [object SequelizeInstance:users]
[2021-12-14 12:21:09] [[31merror[39m] Request status: [object Object] error Error: ENOENT: no such file or directory, open 'D:\git\CNPMM\BEnull'
[2021-12-14 12:21:09] [[32minfo[39m] Request status: [object Object] data [object SequelizeInstance:favoriteFoodCategories],[object SequelizeInstance:favoriteFoodCategories]
[2021-12-14 12:21:09] [[32minfo[39m] Executing (default): SELECT `carts`.*, `cartDetails`.`id` AS `cartDetails.id`, `cartDetails`.`quantity` AS `cartDetails.quantity`, `cartDetails`.`isBuy` AS `cartDetails.isBuy`, `cartDetails`.`isDeleted` AS `cartDetails.isDeleted`, `cartDetails`.`createdAt` AS `cartDetails.createdAt`, `cartDetails`.`updatedAt` AS `cartDetails.updatedAt`, `cartDetails`.`cartId` AS `cartDetails.cartId`, `cartDetails`.`productId` AS `cartDetails.productId`, `cartDetails->product`.`id` AS `cartDetails.product.id`, `cartDetails->product`.`proName` AS `cartDetails.product.proName`, `cartDetails->product`.`proDescription` AS `cartDetails.product.proDescription`, `cartDetails->product`.`quantityValue` AS `cartDetails.product.quantityValue`, `cartDetails->product`.`price` AS `cartDetails.product.price`, `cartDetails->product`.`brand` AS `cartDetails.product.brand`, `cartDetails->product`.`origin` AS `cartDetails.product.origin`, `cartDetails->product`.`productAt` AS `cartDetails.product.productAt`, `cartDetails->product`.`expireAt` AS `cartDetails.product.expireAt`, `cartDetails->product`.`manual` AS `cartDetails.product.manual`, `cartDetails->product`.`preserve` AS `cartDetails.product.preserve`, `cartDetails->product`.`productImage` AS `cartDetails.product.productImage`, `cartDetails->product`.`createdAt` AS `cartDetails.product.createdAt`, `cartDetails->product`.`updatedAt` AS `cartDetails.product.updatedAt`, `cartDetails->product`.`productCategoryId` AS `cartDetails.product.productCategoryId`, `cartDetails->product`.`quantityId` AS `cartDetails.product.quantityId` FROM (SELECT `carts`.`id`, `carts`.`createdAt`, `carts`.`updatedAt`, `carts`.`userId` FROM `carts` AS `carts` WHERE `carts`.`userId` = '1' AND ( SELECT `cartId` FROM `cartDetails` AS `cartDetails` WHERE ((`cartDetails`.`isBuy` = false AND `cartDetails`.`isDeleted` = false) AND `cartDetails`.`cartId` = `carts`.`id`) LIMIT 1 ) IS NOT NULL LIMIT 1) AS `carts` INNER JOIN `cartDetails` AS `cartDetails` ON `carts`.`id` = `cartDetails`.`cartId` AND `cartDetails`.`isBuy` = false AND `cartDetails`.`isDeleted` = false LEFT OUTER JOIN `products` AS `cartDetails->product` ON `cartDetails`.`productId` = `cartDetails->product`.`id`;
[2021-12-14 12:21:09] [[32minfo[39m] Executing (default): SELECT `id`, `username`, `email`, `password`, `firstname`, `lastname`, `gender`, `phone`, `birthday`, `address`, `userAvatar`, `createdAt`, `updatedAt` FROM `users` AS `users` WHERE `users`.`id` = '1';
[2021-12-14 12:21:09] [[32minfo[39m] Executing (default): SELECT `carts`.*, `cartDetails`.`id` AS `cartDetails.id`, `cartDetails`.`quantity` AS `cartDetails.quantity`, `cartDetails`.`isBuy` AS `cartDetails.isBuy`, `cartDetails`.`isDeleted` AS `cartDetails.isDeleted`, `cartDetails`.`createdAt` AS `cartDetails.createdAt`, `cartDetails`.`updatedAt` AS `cartDetails.updatedAt`, `cartDetails`.`cartId` AS `cartDetails.cartId`, `cartDetails`.`productId` AS `cartDetails.productId`, `cartDetails->product`.`id` AS `cartDetails.product.id`, `cartDetails->product`.`proName` AS `cartDetails.product.proName`, `cartDetails->product`.`proDescription` AS `cartDetails.product.proDescription`, `cartDetails->product`.`quantityValue` AS `cartDetails.product.quantityValue`, `cartDetails->product`.`price` AS `cartDetails.product.price`, `cartDetails->product`.`brand` AS `cartDetails.product.brand`, `cartDetails->product`.`origin` AS `cartDetails.product.origin`, `cartDetails->product`.`productAt` AS `cartDetails.product.productAt`, `cartDetails->product`.`expireAt` AS `cartDetails.product.expireAt`, `cartDetails->product`.`manual` AS `cartDetails.product.manual`, `cartDetails->product`.`preserve` AS `cartDetails.product.preserve`, `cartDetails->product`.`productImage` AS `cartDetails.product.productImage`, `cartDetails->product`.`createdAt` AS `cartDetails.product.createdAt`, `cartDetails->product`.`updatedAt` AS `cartDetails.product.updatedAt`, `cartDetails->product`.`productCategoryId` AS `cartDetails.product.productCategoryId`, `cartDetails->product`.`quantityId` AS `cartDetails.product.quantityId` FROM (SELECT `carts`.`id`, `carts`.`createdAt`, `carts`.`updatedAt`, `carts`.`userId` FROM `carts` AS `carts` WHERE `carts`.`userId` = '1' AND ( SELECT `cartId` FROM `cartDetails` AS `cartDetails` WHERE ((`cartDetails`.`isBuy` = false AND `cartDetails`.`isDeleted` = false) AND `cartDetails`.`cartId` = `carts`.`id`) LIMIT 1 ) IS NOT NULL LIMIT 1) AS `carts` INNER JOIN `cartDetails` AS `cartDetails` ON `carts`.`id` = `cartDetails`.`cartId` AND `cartDetails`.`isBuy` = false AND `cartDetails`.`isDeleted` = false LEFT OUTER JOIN `products` AS `cartDetails->product` ON `cartDetails`.`productId` = `cartDetails->product`.`id`;
[2021-12-14 12:21:09] [[32minfo[39m] Executing (default): SELECT `createdAt`, `updatedAt`, `userId`, `foodCategoryId` FROM `favoriteFoodCategories` AS `favoriteFoodCategories` WHERE `favoriteFoodCategories`.`userId` = '1';
[2021-12-14 12:21:09] [[32minfo[39m] Request status: [object Object] data [object SequelizeInstance:users]
[2021-12-14 12:21:09] [[31merror[39m] Request status: [object Object] error Error: ENOENT: no such file or directory, open 'D:\git\CNPMM\BEnull'
[2021-12-14 12:21:09] [[32minfo[39m] Request status: [object Object] data [object SequelizeInstance:favoriteFoodCategories],[object SequelizeInstance:favoriteFoodCategories]
[2021-12-14 12:21:09] [[32minfo[39m] Executing (default): SELECT `carts`.*, `cartDetails`.`id` AS `cartDetails.id`, `cartDetails`.`quantity` AS `cartDetails.quantity`, `cartDetails`.`isBuy` AS `cartDetails.isBuy`, `cartDetails`.`isDeleted` AS `cartDetails.isDeleted`, `cartDetails`.`createdAt` AS `cartDetails.createdAt`, `cartDetails`.`updatedAt` AS `cartDetails.updatedAt`, `cartDetails`.`cartId` AS `cartDetails.cartId`, `cartDetails`.`productId` AS `cartDetails.productId`, `cartDetails->product`.`id` AS `cartDetails.product.id`, `cartDetails->product`.`proName` AS `cartDetails.product.proName`, `cartDetails->product`.`proDescription` AS `cartDetails.product.proDescription`, `cartDetails->product`.`quantityValue` AS `cartDetails.product.quantityValue`, `cartDetails->product`.`price` AS `cartDetails.product.price`, `cartDetails->product`.`brand` AS `cartDetails.product.brand`, `cartDetails->product`.`origin` AS `cartDetails.product.origin`, `cartDetails->product`.`productAt` AS `cartDetails.product.productAt`, `cartDetails->product`.`expireAt` AS `cartDetails.product.expireAt`, `cartDetails->product`.`manual` AS `cartDetails.product.manual`, `cartDetails->product`.`preserve` AS `cartDetails.product.preserve`, `cartDetails->product`.`productImage` AS `cartDetails.product.productImage`, `cartDetails->product`.`createdAt` AS `cartDetails.product.createdAt`, `cartDetails->product`.`updatedAt` AS `cartDetails.product.updatedAt`, `cartDetails->product`.`productCategoryId` AS `cartDetails.product.productCategoryId`, `cartDetails->product`.`quantityId` AS `cartDetails.product.quantityId` FROM (SELECT `carts`.`id`, `carts`.`createdAt`, `carts`.`updatedAt`, `carts`.`userId` FROM `carts` AS `carts` WHERE `carts`.`userId` = '1' AND ( SELECT `cartId` FROM `cartDetails` AS `cartDetails` WHERE ((`cartDetails`.`isBuy` = false AND `cartDetails`.`isDeleted` = false) AND `cartDetails`.`cartId` = `carts`.`id`) LIMIT 1 ) IS NOT NULL LIMIT 1) AS `carts` INNER JOIN `cartDetails` AS `cartDetails` ON `carts`.`id` = `cartDetails`.`cartId` AND `cartDetails`.`isBuy` = false AND `cartDetails`.`isDeleted` = false LEFT OUTER JOIN `products` AS `cartDetails->product` ON `cartDetails`.`productId` = `cartDetails->product`.`id`;
[2021-12-14 12:21:09] [[32minfo[39m] Executing (default): SELECT `carts`.*, `cartDetails`.`id` AS `cartDetails.id`, `cartDetails`.`quantity` AS `cartDetails.quantity`, `cartDetails`.`isBuy` AS `cartDetails.isBuy`, `cartDetails`.`isDeleted` AS `cartDetails.isDeleted`, `cartDetails`.`createdAt` AS `cartDetails.createdAt`, `cartDetails`.`updatedAt` AS `cartDetails.updatedAt`, `cartDetails`.`cartId` AS `cartDetails.cartId`, `cartDetails`.`productId` AS `cartDetails.productId`, `cartDetails->product`.`id` AS `cartDetails.product.id`, `cartDetails->product`.`proName` AS `cartDetails.product.proName`, `cartDetails->product`.`proDescription` AS `cartDetails.product.proDescription`, `cartDetails->product`.`quantityValue` AS `cartDetails.product.quantityValue`, `cartDetails->product`.`price` AS `cartDetails.product.price`, `cartDetails->product`.`brand` AS `cartDetails.product.brand`, `cartDetails->product`.`origin` AS `cartDetails.product.origin`, `cartDetails->product`.`productAt` AS `cartDetails.product.productAt`, `cartDetails->product`.`expireAt` AS `cartDetails.product.expireAt`, `cartDetails->product`.`manual` AS `cartDetails.product.manual`, `cartDetails->product`.`preserve` AS `cartDetails.product.preserve`, `cartDetails->product`.`productImage` AS `cartDetails.product.productImage`, `cartDetails->product`.`createdAt` AS `cartDetails.product.createdAt`, `cartDetails->product`.`updatedAt` AS `cartDetails.product.updatedAt`, `cartDetails->product`.`productCategoryId` AS `cartDetails.product.productCategoryId`, `cartDetails->product`.`quantityId` AS `cartDetails.product.quantityId` FROM (SELECT `carts`.`id`, `carts`.`createdAt`, `carts`.`updatedAt`, `carts`.`userId` FROM `carts` AS `carts` WHERE `carts`.`userId` = '1' AND ( SELECT `cartId` FROM `cartDetails` AS `cartDetails` WHERE ((`cartDetails`.`isBuy` = false AND `cartDetails`.`isDeleted` = false) AND `cartDetails`.`cartId` = `carts`.`id`) LIMIT 1 ) IS NOT NULL LIMIT 1) AS `carts` INNER JOIN `cartDetails` AS `cartDetails` ON `carts`.`id` = `cartDetails`.`cartId` AND `cartDetails`.`isBuy` = false AND `cartDetails`.`isDeleted` = false LEFT OUTER JOIN `products` AS `cartDetails->product` ON `cartDetails`.`productId` = `cartDetails->product`.`id`;
[2021-12-14 12:21:10] [[32minfo[39m] Executing (default): SELECT `id`, `catName` FROM `productCategories` AS `productCategories`;
[2021-12-14 12:21:10] [[32minfo[39m] Executing (default): SELECT `carts`.*, `cartDetails`.`id` AS `cartDetails.id`, `cartDetails`.`quantity` AS `cartDetails.quantity`, `cartDetails`.`isBuy` AS `cartDetails.isBuy`, `cartDetails`.`isDeleted` AS `cartDetails.isDeleted`, `cartDetails`.`createdAt` AS `cartDetails.createdAt`, `cartDetails`.`updatedAt` AS `cartDetails.updatedAt`, `cartDetails`.`cartId` AS `cartDetails.cartId`, `cartDetails`.`productId` AS `cartDetails.productId`, `cartDetails->product`.`id` AS `cartDetails.product.id`, `cartDetails->product`.`proName` AS `cartDetails.product.proName`, `cartDetails->product`.`proDescription` AS `cartDetails.product.proDescription`, `cartDetails->product`.`quantityValue` AS `cartDetails.product.quantityValue`, `cartDetails->product`.`price` AS `cartDetails.product.price`, `cartDetails->product`.`brand` AS `cartDetails.product.brand`, `cartDetails->product`.`origin` AS `cartDetails.product.origin`, `cartDetails->product`.`productAt` AS `cartDetails.product.productAt`, `cartDetails->product`.`expireAt` AS `cartDetails.product.expireAt`, `cartDetails->product`.`manual` AS `cartDetails.product.manual`, `cartDetails->product`.`preserve` AS `cartDetails.product.preserve`, `cartDetails->product`.`productImage` AS `cartDetails.product.productImage`, `cartDetails->product`.`createdAt` AS `cartDetails.product.createdAt`, `cartDetails->product`.`updatedAt` AS `cartDetails.product.updatedAt`, `cartDetails->product`.`productCategoryId` AS `cartDetails.product.productCategoryId`, `cartDetails->product`.`quantityId` AS `cartDetails.product.quantityId` FROM (SELECT `carts`.`id`, `carts`.`createdAt`, `carts`.`updatedAt`, `carts`.`userId` FROM `carts` AS `carts` WHERE `carts`.`userId` = '1' AND ( SELECT `cartId` FROM `cartDetails` AS `cartDetails` WHERE ((`cartDetails`.`isBuy` = false AND `cartDetails`.`isDeleted` = false) AND `cartDetails`.`cartId` = `carts`.`id`) LIMIT 1 ) IS NOT NULL LIMIT 1) AS `carts` INNER JOIN `cartDetails` AS `cartDetails` ON `carts`.`id` = `cartDetails`.`cartId` AND `cartDetails`.`isBuy` = false AND `cartDetails`.`isDeleted` = false LEFT OUTER JOIN `products` AS `cartDetails->product` ON `cartDetails`.`productId` = `cartDetails->product`.`id`;
[2021-12-14 12:21:10] [[32minfo[39m] Request status: [object Object] data [object SequelizeInstance:productCategories],[object SequelizeInstance:productCategories],[object SequelizeInstance:productCategories],[object SequelizeInstance:productCategories],[object SequelizeInstance:productCategories]
[2021-12-14 12:21:10] [[32minfo[39m] Executing (default): SELECT `carts`.*, `cartDetails`.`id` AS `cartDetails.id`, `cartDetails`.`quantity` AS `cartDetails.quantity`, `cartDetails`.`isBuy` AS `cartDetails.isBuy`, `cartDetails`.`isDeleted` AS `cartDetails.isDeleted`, `cartDetails`.`createdAt` AS `cartDetails.createdAt`, `cartDetails`.`updatedAt` AS `cartDetails.updatedAt`, `cartDetails`.`cartId` AS `cartDetails.cartId`, `cartDetails`.`productId` AS `cartDetails.productId`, `cartDetails->product`.`id` AS `cartDetails.product.id`, `cartDetails->product`.`proName` AS `cartDetails.product.proName`, `cartDetails->product`.`proDescription` AS `cartDetails.product.proDescription`, `cartDetails->product`.`quantityValue` AS `cartDetails.product.quantityValue`, `cartDetails->product`.`price` AS `cartDetails.product.price`, `cartDetails->product`.`brand` AS `cartDetails.product.brand`, `cartDetails->product`.`origin` AS `cartDetails.product.origin`, `cartDetails->product`.`productAt` AS `cartDetails.product.productAt`, `cartDetails->product`.`expireAt` AS `cartDetails.product.expireAt`, `cartDetails->product`.`manual` AS `cartDetails.product.manual`, `cartDetails->product`.`preserve` AS `cartDetails.product.preserve`, `cartDetails->product`.`productImage` AS `cartDetails.product.productImage`, `cartDetails->product`.`createdAt` AS `cartDetails.product.createdAt`, `cartDetails->product`.`updatedAt` AS `cartDetails.product.updatedAt`, `cartDetails->product`.`productCategoryId` AS `cartDetails.product.productCategoryId`, `cartDetails->product`.`quantityId` AS `cartDetails.product.quantityId` FROM (SELECT `carts`.`id`, `carts`.`createdAt`, `carts`.`updatedAt`, `carts`.`userId` FROM `carts` AS `carts` WHERE `carts`.`userId` = '1' AND ( SELECT `cartId` FROM `cartDetails` AS `cartDetails` WHERE ((`cartDetails`.`isBuy` = false AND `cartDetails`.`isDeleted` = false) AND `cartDetails`.`cartId` = `carts`.`id`) LIMIT 1 ) IS NOT NULL LIMIT 1) AS `carts` INNER JOIN `cartDetails` AS `cartDetails` ON `carts`.`id` = `cartDetails`.`cartId` AND `cartDetails`.`isBuy` = false AND `cartDetails`.`isDeleted` = false LEFT OUTER JOIN `products` AS `cartDetails->product` ON `cartDetails`.`productId` = `cartDetails->product`.`id`;
[2021-12-14 12:21:10] [[32minfo[39m] Executing (default): SELECT `carts`.*, `cartDetails`.`id` AS `cartDetails.id`, `cartDetails`.`quantity` AS `cartDetails.quantity`, `cartDetails`.`isBuy` AS `cartDetails.isBuy`, `cartDetails`.`isDeleted` AS `cartDetails.isDeleted`, `cartDetails`.`createdAt` AS `cartDetails.createdAt`, `cartDetails`.`updatedAt` AS `cartDetails.updatedAt`, `cartDetails`.`cartId` AS `cartDetails.cartId`, `cartDetails`.`productId` AS `cartDetails.productId`, `cartDetails->product`.`id` AS `cartDetails.product.id`, `cartDetails->product`.`proName` AS `cartDetails.product.proName`, `cartDetails->product`.`proDescription` AS `cartDetails.product.proDescription`, `cartDetails->product`.`quantityValue` AS `cartDetails.product.quantityValue`, `cartDetails->product`.`price` AS `cartDetails.product.price`, `cartDetails->product`.`brand` AS `cartDetails.product.brand`, `cartDetails->product`.`origin` AS `cartDetails.product.origin`, `cartDetails->product`.`productAt` AS `cartDetails.product.productAt`, `cartDetails->product`.`expireAt` AS `cartDetails.product.expireAt`, `cartDetails->product`.`manual` AS `cartDetails.product.manual`, `cartDetails->product`.`preserve` AS `cartDetails.product.preserve`, `cartDetails->product`.`productImage` AS `cartDetails.product.productImage`, `cartDetails->product`.`createdAt` AS `cartDetails.product.createdAt`, `cartDetails->product`.`updatedAt` AS `cartDetails.product.updatedAt`, `cartDetails->product`.`productCategoryId` AS `cartDetails.product.productCategoryId`, `cartDetails->product`.`quantityId` AS `cartDetails.product.quantityId` FROM (SELECT `carts`.`id`, `carts`.`createdAt`, `carts`.`updatedAt`, `carts`.`userId` FROM `carts` AS `carts` WHERE `carts`.`userId` = '1' AND ( SELECT `cartId` FROM `cartDetails` AS `cartDetails` WHERE ((`cartDetails`.`isBuy` = false AND `cartDetails`.`isDeleted` = false) AND `cartDetails`.`cartId` = `carts`.`id`) LIMIT 1 ) IS NOT NULL LIMIT 1) AS `carts` INNER JOIN `cartDetails` AS `cartDetails` ON `carts`.`id` = `cartDetails`.`cartId` AND `cartDetails`.`isBuy` = false AND `cartDetails`.`isDeleted` = false LEFT OUTER JOIN `products` AS `cartDetails->product` ON `cartDetails`.`productId` = `cartDetails->product`.`id`;
[2021-12-14 12:21:10] [[32minfo[39m] Executing (default): SELECT `carts`.*, `cartDetails`.`id` AS `cartDetails.id`, `cartDetails`.`quantity` AS `cartDetails.quantity`, `cartDetails`.`isBuy` AS `cartDetails.isBuy`, `cartDetails`.`isDeleted` AS `cartDetails.isDeleted`, `cartDetails`.`createdAt` AS `cartDetails.createdAt`, `cartDetails`.`updatedAt` AS `cartDetails.updatedAt`, `cartDetails`.`cartId` AS `cartDetails.cartId`, `cartDetails`.`productId` AS `cartDetails.productId`, `cartDetails->product`.`id` AS `cartDetails.product.id`, `cartDetails->product`.`proName` AS `cartDetails.product.proName`, `cartDetails->product`.`proDescription` AS `cartDetails.product.proDescription`, `cartDetails->product`.`quantityValue` AS `cartDetails.product.quantityValue`, `cartDetails->product`.`price` AS `cartDetails.product.price`, `cartDetails->product`.`brand` AS `cartDetails.product.brand`, `cartDetails->product`.`origin` AS `cartDetails.product.origin`, `cartDetails->product`.`productAt` AS `cartDetails.product.productAt`, `cartDetails->product`.`expireAt` AS `cartDetails.product.expireAt`, `cartDetails->product`.`manual` AS `cartDetails.product.manual`, `cartDetails->product`.`preserve` AS `cartDetails.product.preserve`, `cartDetails->product`.`productImage` AS `cartDetails.product.productImage`, `cartDetails->product`.`createdAt` AS `cartDetails.product.createdAt`, `cartDetails->product`.`updatedAt` AS `cartDetails.product.updatedAt`, `cartDetails->product`.`productCategoryId` AS `cartDetails.product.productCategoryId`, `cartDetails->product`.`quantityId` AS `cartDetails.product.quantityId` FROM (SELECT `carts`.`id`, `carts`.`createdAt`, `carts`.`updatedAt`, `carts`.`userId` FROM `carts` AS `carts` WHERE `carts`.`userId` = '1' AND ( SELECT `cartId` FROM `cartDetails` AS `cartDetails` WHERE ((`cartDetails`.`isBuy` = false AND `cartDetails`.`isDeleted` = false) AND `cartDetails`.`cartId` = `carts`.`id`) LIMIT 1 ) IS NOT NULL LIMIT 1) AS `carts` INNER JOIN `cartDetails` AS `cartDetails` ON `carts`.`id` = `cartDetails`.`cartId` AND `cartDetails`.`isBuy` = false AND `cartDetails`.`isDeleted` = false LEFT OUTER JOIN `products` AS `cartDetails->product` ON `cartDetails`.`productId` = `cartDetails->product`.`id`;
[2021-12-14 12:21:10] [[32minfo[39m] Executing (default): SELECT `id`, `username`, `email`, `password`, `firstname`, `lastname`, `gender`, `phone`, `birthday`, `address`, `userAvatar`, `createdAt`, `updatedAt` FROM `users` AS `users` WHERE `users`.`id` = '1';
[2021-12-14 12:21:10] [[32minfo[39m] Request status: [object Object] data [object SequelizeInstance:users]
[2021-12-14 12:21:10] [[31merror[39m] Request status: [object Object] error Error: ENOENT: no such file or directory, open 'D:\git\CNPMM\BEnull'
[2021-12-14 12:21:10] [[32minfo[39m] Executing (default): SELECT `createdAt`, `updatedAt`, `userId`, `foodCategoryId` FROM `favoriteFoodCategories` AS `favoriteFoodCategories` WHERE `favoriteFoodCategories`.`userId` = '1';
[2021-12-14 12:21:10] [[32minfo[39m] Request status: [object Object] data [object SequelizeInstance:favoriteFoodCategories],[object SequelizeInstance:favoriteFoodCategories]
[2021-12-14 12:21:10] [[32minfo[39m] Executing (default): SELECT `carts`.*, `cartDetails`.`id` AS `cartDetails.id`, `cartDetails`.`quantity` AS `cartDetails.quantity`, `cartDetails`.`isBuy` AS `cartDetails.isBuy`, `cartDetails`.`isDeleted` AS `cartDetails.isDeleted`, `cartDetails`.`createdAt` AS `cartDetails.createdAt`, `cartDetails`.`updatedAt` AS `cartDetails.updatedAt`, `cartDetails`.`cartId` AS `cartDetails.cartId`, `cartDetails`.`productId` AS `cartDetails.productId`, `cartDetails->product`.`id` AS `cartDetails.product.id`, `cartDetails->product`.`proName` AS `cartDetails.product.proName`, `cartDetails->product`.`proDescription` AS `cartDetails.product.proDescription`, `cartDetails->product`.`quantityValue` AS `cartDetails.product.quantityValue`, `cartDetails->product`.`price` AS `cartDetails.product.price`, `cartDetails->product`.`brand` AS `cartDetails.product.brand`, `cartDetails->product`.`origin` AS `cartDetails.product.origin`, `cartDetails->product`.`productAt` AS `cartDetails.product.productAt`, `cartDetails->product`.`expireAt` AS `cartDetails.product.expireAt`, `cartDetails->product`.`manual` AS `cartDetails.product.manual`, `cartDetails->product`.`preserve` AS `cartDetails.product.preserve`, `cartDetails->product`.`productImage` AS `cartDetails.product.productImage`, `cartDetails->product`.`createdAt` AS `cartDetails.product.createdAt`, `cartDetails->product`.`updatedAt` AS `cartDetails.product.updatedAt`, `cartDetails->product`.`productCategoryId` AS `cartDetails.product.productCategoryId`, `cartDetails->product`.`quantityId` AS `cartDetails.product.quantityId` FROM (SELECT `carts`.`id`, `carts`.`createdAt`, `carts`.`updatedAt`, `carts`.`userId` FROM `carts` AS `carts` WHERE `carts`.`userId` = '1' AND ( SELECT `cartId` FROM `cartDetails` AS `cartDetails` WHERE ((`cartDetails`.`isBuy` = false AND `cartDetails`.`isDeleted` = false) AND `cartDetails`.`cartId` = `carts`.`id`) LIMIT 1 ) IS NOT NULL LIMIT 1) AS `carts` INNER JOIN `cartDetails` AS `cartDetails` ON `carts`.`id` = `cartDetails`.`cartId` AND `cartDetails`.`isBuy` = false AND `cartDetails`.`isDeleted` = false LEFT OUTER JOIN `products` AS `cartDetails->product` ON `cartDetails`.`productId` = `cartDetails->product`.`id`;
[2021-12-14 12:21:10] [[32minfo[39m] Executing (default): SELECT `carts`.*, `cartDetails`.`id` AS `cartDetails.id`, `cartDetails`.`quantity` AS `cartDetails.quantity`, `cartDetails`.`isBuy` AS `cartDetails.isBuy`, `cartDetails`.`isDeleted` AS `cartDetails.isDeleted`, `cartDetails`.`createdAt` AS `cartDetails.createdAt`, `cartDetails`.`updatedAt` AS `cartDetails.updatedAt`, `cartDetails`.`cartId` AS `cartDetails.cartId`, `cartDetails`.`productId` AS `cartDetails.productId`, `cartDetails->product`.`id` AS `cartDetails.product.id`, `cartDetails->product`.`proName` AS `cartDetails.product.proName`, `cartDetails->product`.`proDescription` AS `cartDetails.product.proDescription`, `cartDetails->product`.`quantityValue` AS `cartDetails.product.quantityValue`, `cartDetails->product`.`price` AS `cartDetails.product.price`, `cartDetails->product`.`brand` AS `cartDetails.product.brand`, `cartDetails->product`.`origin` AS `cartDetails.product.origin`, `cartDetails->product`.`productAt` AS `cartDetails.product.productAt`, `cartDetails->product`.`expireAt` AS `cartDetails.product.expireAt`, `cartDetails->product`.`manual` AS `cartDetails.product.manual`, `cartDetails->product`.`preserve` AS `cartDetails.product.preserve`, `cartDetails->product`.`productImage` AS `cartDetails.product.productImage`, `cartDetails->product`.`createdAt` AS `cartDetails.product.createdAt`, `cartDetails->product`.`updatedAt` AS `cartDetails.product.updatedAt`, `cartDetails->product`.`productCategoryId` AS `cartDetails.product.productCategoryId`, `cartDetails->product`.`quantityId` AS `cartDetails.product.quantityId` FROM (SELECT `carts`.`id`, `carts`.`createdAt`, `carts`.`updatedAt`, `carts`.`userId` FROM `carts` AS `carts` WHERE `carts`.`userId` = '1' AND ( SELECT `cartId` FROM `cartDetails` AS `cartDetails` WHERE ((`cartDetails`.`isBuy` = false AND `cartDetails`.`isDeleted` = false) AND `cartDetails`.`cartId` = `carts`.`id`) LIMIT 1 ) IS NOT NULL LIMIT 1) AS `carts` INNER JOIN `cartDetails` AS `cartDetails` ON `carts`.`id` = `cartDetails`.`cartId` AND `cartDetails`.`isBuy` = false AND `cartDetails`.`isDeleted` = false LEFT OUTER JOIN `products` AS `cartDetails->product` ON `cartDetails`.`productId` = `cartDetails->product`.`id`;
[2021-12-14 12:23:19] [[32minfo[39m] Server is running on port 8080
[2021-12-14 12:23:20] [[32minfo[39m] Executing (default): DROP TABLE IF EXISTS `user_roles`;
[2021-12-14 12:23:20] [[32minfo[39m] Executing (default): DROP TABLE IF EXISTS `marketNotes`;
[2021-12-14 12:23:20] [[32minfo[39m] Executing (default): DROP TABLE IF EXISTS `address-villages`;
[2021-12-14 12:23:20] [[32minfo[39m] Executing (default): DROP TABLE IF EXISTS `address-districts`;
[2021-12-14 12:23:20] [[32minfo[39m] Executing (default): DROP TABLE IF EXISTS `address-provinces`;
[2021-12-14 12:23:20] [[32minfo[39m] Executing (default): DROP TABLE IF EXISTS `favoriteFoodCategories`;
[2021-12-14 12:23:20] [[32minfo[39m] Executing (default): DROP TABLE IF EXISTS `orderDetails`;
[2021-12-14 12:23:20] [[32minfo[39m] Executing (default): DROP TABLE IF EXISTS `orders`;
[2021-12-14 12:23:20] [[32minfo[39m] Executing (default): DROP TABLE IF EXISTS `paymentMethods`;
[2021-12-14 12:23:20] [[32minfo[39m] Executing (default): DROP TABLE IF EXISTS `deliveryMethods`;
[2021-12-14 12:23:20] [[32minfo[39m] Executing (default): DROP TABLE IF EXISTS `cartDetails`;
[2021-12-14 12:23:20] [[32minfo[39m] Executing (default): DROP TABLE IF EXISTS `carts`;
[2021-12-14 12:23:20] [[32minfo[39m] Executing (default): DROP TABLE IF EXISTS `foodCookSteps`;
[2021-12-14 12:23:20] [[32minfo[39m] Executing (default): DROP TABLE IF EXISTS `foodMaterials`;
[2021-12-14 12:23:20] [[32minfo[39m] Executing (default): DROP TABLE IF EXISTS `products`;
[2021-12-14 12:23:20] [[32minfo[39m] Executing (default): DROP TABLE IF EXISTS `quantities`;
[2021-12-14 12:23:20] [[32minfo[39m] Executing (default): DROP TABLE IF EXISTS `productCategories`;
[2021-12-14 12:23:20] [[32minfo[39m] Executing (default): DROP TABLE IF EXISTS `foods`;
[2021-12-14 12:23:20] [[32minfo[39m] Executing (default): DROP TABLE IF EXISTS `foodCategories`;
[2021-12-14 12:23:20] [[32minfo[39m] Executing (default): DROP TABLE IF EXISTS `roles`;
[2021-12-14 12:23:20] [[32minfo[39m] Executing (default): DROP TABLE IF EXISTS `users`;
[2021-12-14 12:23:20] [[32minfo[39m] Executing (default): DROP TABLE IF EXISTS `users`;
[2021-12-14 12:23:20] [[32minfo[39m] Executing (default): CREATE TABLE IF NOT EXISTS `users` (`id` INTEGER NOT NULL auto_increment , `username` VARCHAR(255) UNIQUE, `email` VARCHAR(255) UNIQUE, `password` VARCHAR(255), `firstname` VARCHAR(255), `lastname` VARCHAR(255), `gender` VARCHAR(255), `phone` VARCHAR(255), `birthday` DATE, `address` VARCHAR(255), `userAvatar` VARCHAR(255), `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, PRIMARY KEY (`id`)) ENGINE=InnoDB;
[2021-12-14 12:23:20] [[32minfo[39m] Executing (default): SHOW INDEX FROM `users`
[2021-12-14 12:23:20] [[32minfo[39m] Executing (default): DROP TABLE IF EXISTS `roles`;
[2021-12-14 12:23:20] [[32minfo[39m] Executing (default): CREATE TABLE IF NOT EXISTS `roles` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255), `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, PRIMARY KEY (`id`)) ENGINE=InnoDB;
[2021-12-14 12:23:20] [[32minfo[39m] Executing (default): SHOW INDEX FROM `roles`
[2021-12-14 12:23:20] [[32minfo[39m] Executing (default): DROP TABLE IF EXISTS `foodCategories`;
[2021-12-14 12:23:20] [[32minfo[39m] Executing (default): CREATE TABLE IF NOT EXISTS `foodCategories` (`id` INTEGER NOT NULL auto_increment , `catName` VARCHAR(255), `catIcon` VARCHAR(255), `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, PRIMARY KEY (`id`)) ENGINE=InnoDB;
[2021-12-14 12:23:21] [[32minfo[39m] Executing (default): SHOW INDEX FROM `foodCategories`
[2021-12-14 12:23:21] [[32minfo[39m] Executing (default): DROP TABLE IF EXISTS `foods`;
[2021-12-14 12:23:21] [[32minfo[39m] Executing (default): CREATE TABLE IF NOT EXISTS `foods` (`id` INTEGER NOT NULL auto_increment , `foodName` VARCHAR(255), `foodDescription` VARCHAR(255), `foodCalories` FLOAT, `foodImage` VARCHAR(255), `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, `foodCategoryId` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`foodCategoryId`) REFERENCES `foodCategories` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;
[2021-12-14 12:23:21] [[32minfo[39m] Executing (default): SHOW INDEX FROM `foods`
[2021-12-14 12:23:21] [[32minfo[39m] Executing (default): ALTER TABLE `foods` ADD FULLTEXT INDEX `food_index` (`foodName`)
[2021-12-14 12:23:21] [[32minfo[39m] Executing (default): DROP TABLE IF EXISTS `productCategories`;
[2021-12-14 12:23:21] [[32minfo[39m] Executing (default): CREATE TABLE IF NOT EXISTS `productCategories` (`id` INTEGER NOT NULL auto_increment , `catName` VARCHAR(255), `catIcon` VARCHAR(255), `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, PRIMARY KEY (`id`)) ENGINE=InnoDB;
[2021-12-14 12:23:21] [[32minfo[39m] Executing (default): SHOW INDEX FROM `productCategories`
[2021-12-14 12:23:21] [[32minfo[39m] Executing (default): DROP TABLE IF EXISTS `quantities`;
[2021-12-14 12:23:21] [[32minfo[39m] Executing (default): CREATE TABLE IF NOT EXISTS `quantities` (`id` INTEGER NOT NULL auto_increment , `quantityName` VARCHAR(255), `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, PRIMARY KEY (`id`)) ENGINE=InnoDB;
[2021-12-14 12:23:21] [[32minfo[39m] Executing (default): SHOW INDEX FROM `quantities`
[2021-12-14 12:23:21] [[32minfo[39m] Executing (default): DROP TABLE IF EXISTS `products`;
[2021-12-14 12:23:21] [[32minfo[39m] Executing (default): CREATE TABLE IF NOT EXISTS `products` (`id` INTEGER NOT NULL auto_increment , `proName` VARCHAR(255), `proDescription` VARCHAR(255), `quantityValue` FLOAT, `price` FLOAT, `brand` VARCHAR(255), `origin` VARCHAR(255), `productAt` DATE, `expireAt` VARCHAR(255), `manual` VARCHAR(255), `preserve` VARCHAR(255), `productImage` VARCHAR(255), `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, `productCategoryId` INTEGER, `quantityId` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`productCategoryId`) REFERENCES `productCategories` (`id`) ON DELETE SET NULL ON UPDATE CASCADE, FOREIGN KEY (`quantityId`) REFERENCES `quantities` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;
[2021-12-14 12:23:21] [[32minfo[39m] Executing (default): SHOW INDEX FROM `products`
[2021-12-14 12:23:21] [[32minfo[39m] Executing (default): ALTER TABLE `products` ADD FULLTEXT INDEX `product_index` (`proName`)
[2021-12-14 12:23:22] [[32minfo[39m] Executing (default): DROP TABLE IF EXISTS `foodMaterials`;
[2021-12-14 12:23:22] [[32minfo[39m] Executing (default): CREATE TABLE IF NOT EXISTS `foodMaterials` (`id` INTEGER NOT NULL auto_increment , `foodMaterialName` VARCHAR(255), `quantityDescription` VARCHAR(255), `quantityValue` FLOAT, `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, `foodId` INTEGER, `productId` INTEGER, `quantityId` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`foodId`) REFERENCES `foods` (`id`) ON DELETE SET NULL ON UPDATE CASCADE, FOREIGN KEY (`productId`) REFERENCES `products` (`id`) ON DELETE SET NULL ON UPDATE CASCADE, FOREIGN KEY (`quantityId`) REFERENCES `quantities` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;
[2021-12-14 12:23:22] [[32minfo[39m] Executing (default): SHOW INDEX FROM `foodMaterials`
[2021-12-14 12:23:22] [[32minfo[39m] Executing (default): DROP TABLE IF EXISTS `foodCookSteps`;
[2021-12-14 12:23:22] [[32minfo[39m] Executing (default): CREATE TABLE IF NOT EXISTS `foodCookSteps` (`id` INTEGER NOT NULL auto_increment , `stepNumber` INTEGER, `stepDescription` VARCHAR(255), `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, `foodId` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`foodId`) REFERENCES `foods` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;
[2021-12-14 12:23:22] [[32minfo[39m] Executing (default): SHOW INDEX FROM `foodCookSteps`
[2021-12-14 12:23:22] [[32minfo[39m] Executing (default): DROP TABLE IF EXISTS `carts`;
[2021-12-14 12:23:22] [[32minfo[39m] Executing (default): CREATE TABLE IF NOT EXISTS `carts` (`id` INTEGER NOT NULL auto_increment , `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, `userId` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`userId`) REFERENCES `users` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;
[2021-12-14 12:23:22] [[32minfo[39m] Executing (default): SHOW INDEX FROM `carts`
[2021-12-14 12:23:22] [[32minfo[39m] Executing (default): DROP TABLE IF EXISTS `cartDetails`;
[2021-12-14 12:23:22] [[32minfo[39m] Executing (default): CREATE TABLE IF NOT EXISTS `cartDetails` (`id` INTEGER NOT NULL auto_increment , `quantity` INTEGER, `isBuy` TINYINT(1), `isDeleted` TINYINT(1), `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, `cartId` INTEGER, `productId` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`cartId`) REFERENCES `carts` (`id`) ON DELETE SET NULL ON UPDATE CASCADE, FOREIGN KEY (`productId`) REFERENCES `products` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;
[2021-12-14 12:23:22] [[32minfo[39m] Executing (default): SHOW INDEX FROM `cartDetails`
[2021-12-14 12:23:22] [[32minfo[39m] Executing (default): DROP TABLE IF EXISTS `deliveryMethods`;
[2021-12-14 12:23:22] [[32minfo[39m] Executing (default): CREATE TABLE IF NOT EXISTS `deliveryMethods` (`id` INTEGER NOT NULL auto_increment , `deliveryMethod` VARCHAR(255), `fee` FLOAT, `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, PRIMARY KEY (`id`)) ENGINE=InnoDB;
[2021-12-14 12:23:22] [[32minfo[39m] Executing (default): SHOW INDEX FROM `deliveryMethods`
[2021-12-14 12:23:22] [[32minfo[39m] Executing (default): DROP TABLE IF EXISTS `paymentMethods`;
[2021-12-14 12:23:22] [[32minfo[39m] Executing (default): CREATE TABLE IF NOT EXISTS `paymentMethods` (`id` INTEGER NOT NULL auto_increment , `paymentType` VARCHAR(255), `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, PRIMARY KEY (`id`)) ENGINE=InnoDB;
[2021-12-14 12:23:22] [[32minfo[39m] Executing (default): SHOW INDEX FROM `paymentMethods`
[2021-12-14 12:23:22] [[32minfo[39m] Executing (default): DROP TABLE IF EXISTS `orders`;
[2021-12-14 12:23:22] [[32minfo[39m] Executing (default): CREATE TABLE IF NOT EXISTS `orders` (`id` INTEGER NOT NULL auto_increment , `addressDelivery` VARCHAR(255), `deliveryAt` DATE, `orderStatus` TINYINT(1), `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, `userId` INTEGER, `deliveryMethodId` INTEGER, `shipperId` INTEGER, `paymentMethodId` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`userId`) REFERENCES `users` (`id`) ON DELETE SET NULL ON UPDATE CASCADE, FOREIGN KEY (`deliveryMethodId`) REFERENCES `deliveryMethods` (`id`) ON DELETE SET NULL ON UPDATE CASCADE, FOREIGN KEY (`shipperId`) REFERENCES `users` (`id`) ON DELETE SET NULL ON UPDATE CASCADE, FOREIGN KEY (`paymentMethodId`) REFERENCES `paymentMethods` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;
[2021-12-14 12:23:22] [[32minfo[39m] Executing (default): SHOW INDEX FROM `orders`
[2021-12-14 12:23:22] [[32minfo[39m] Executing (default): DROP TABLE IF EXISTS `orderDetails`;
[2021-12-14 12:23:22] [[32minfo[39m] Executing (default): CREATE TABLE IF NOT EXISTS `orderDetails` (`id` INTEGER NOT NULL auto_increment , `quantity` INTEGER, `price` FLOAT, `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, `orderId` INTEGER, `productId` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`orderId`) REFERENCES `orders` (`id`) ON DELETE SET NULL ON UPDATE CASCADE, FOREIGN KEY (`productId`) REFERENCES `products` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;
[2021-12-14 12:23:22] [[32minfo[39m] Executing (default): SHOW INDEX FROM `orderDetails`
[2021-12-14 12:23:22] [[32minfo[39m] Executing (default): DROP TABLE IF EXISTS `favoriteFoodCategories`;
[2021-12-14 12:23:22] [[32minfo[39m] Executing (default): CREATE TABLE IF NOT EXISTS `favoriteFoodCategories` (`createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, `userId` INTEGER , `foodCategoryId` INTEGER , PRIMARY KEY (`userId`, `foodCategoryId`), FOREIGN KEY (`userId`) REFERENCES `users` (`id`) ON DELETE CASCADE ON UPDATE CASCADE, FOREIGN KEY (`foodCategoryId`) REFERENCES `foodCategories` (`id`) ON DELETE CASCADE ON UPDATE CASCADE) ENGINE=InnoDB;
[2021-12-14 12:23:22] [[32minfo[39m] Executing (default): SHOW INDEX FROM `favoriteFoodCategories`
[2021-12-14 12:23:22] [[32minfo[39m] Executing (default): DROP TABLE IF EXISTS `address-provinces`;
[2021-12-14 12:23:22] [[32minfo[39m] Executing (default): CREATE TABLE IF NOT EXISTS `address-provinces` (`id` INTEGER NOT NULL auto_increment , `province` VARCHAR(255), `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, PRIMARY KEY (`id`)) ENGINE=InnoDB;
[2021-12-14 12:23:22] [[32minfo[39m] Executing (default): SHOW INDEX FROM `address-provinces`
[2021-12-14 12:23:22] [[32minfo[39m] Executing (default): DROP TABLE IF EXISTS `address-districts`;
[2021-12-14 12:23:22] [[32minfo[39m] Executing (default): CREATE TABLE IF NOT EXISTS `address-districts` (`id` INTEGER NOT NULL auto_increment , `district` VARCHAR(255), `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, `addressProvinceId` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`addressProvinceId`) REFERENCES `address-provinces` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;
[2021-12-14 12:23:23] [[32minfo[39m] Executing (default): SHOW INDEX FROM `address-districts`
[2021-12-14 12:23:23] [[32minfo[39m] Executing (default): DROP TABLE IF EXISTS `address-villages`;
[2021-12-14 12:23:23] [[32minfo[39m] Executing (default): CREATE TABLE IF NOT EXISTS `address-villages` (`id` INTEGER NOT NULL auto_increment , `village` VARCHAR(255), `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, `addressDistrictId` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`addressDistrictId`) REFERENCES `address-districts` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;
[2021-12-14 12:23:23] [[32minfo[39m] Executing (default): SHOW INDEX FROM `address-villages`
[2021-12-14 12:23:23] [[32minfo[39m] Executing (default): DROP TABLE IF EXISTS `marketNotes`;
[2021-12-14 12:23:23] [[32minfo[39m] Executing (default): CREATE TABLE IF NOT EXISTS `marketNotes` (`id` INTEGER NOT NULL auto_increment , `marketNoteText` VARCHAR(255), `remindDate` DATE, `isDone` TINYINT(1), `isDeleted` TINYINT(1), `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, `userId` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`userId`) REFERENCES `users` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;
[2021-12-14 12:23:23] [[32minfo[39m] Executing (default): SHOW INDEX FROM `marketNotes`
[2021-12-14 12:23:23] [[32minfo[39m] Executing (default): DROP TABLE IF EXISTS `user_roles`;
[2021-12-14 12:23:23] [[32minfo[39m] Executing (default): CREATE TABLE IF NOT EXISTS `user_roles` (`createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, `roleId` INTEGER , `userId` INTEGER , PRIMARY KEY (`roleId`, `userId`), FOREIGN KEY (`roleId`) REFERENCES `roles` (`id`) ON DELETE CASCADE ON UPDATE CASCADE, FOREIGN KEY (`userId`) REFERENCES `users` (`id`) ON DELETE CASCADE ON UPDATE CASCADE) ENGINE=InnoDB;
[2021-12-14 12:23:23] [[32minfo[39m] Executing (default): SHOW INDEX FROM `user_roles`
[2021-12-14 12:23:23] [[32minfo[39m] Dropped and Resync database
[2021-12-14 12:24:13] [[32minfo[39m] User phuctg2106 registered
[2021-12-14 12:24:25] [[32minfo[39m] Executing (default): SELECT `id`, `username`, `email`, `password`, `firstname`, `lastname`, `gender`, `phone`, `birthday`, `address`, `userAvatar`, `createdAt`, `updatedAt` FROM `users` AS `users` WHERE `users`.`username` = 'phuctg2106';
[2021-12-14 12:24:25] [[32minfo[39m] Executing (default): SELECT `id`, `username`, `email`, `password`, `firstname`, `lastname`, `gender`, `phone`, `birthday`, `address`, `userAvatar`, `createdAt`, `updatedAt` FROM `users` AS `users` WHERE `users`.`id` = '2';
[2021-12-14 12:24:25] [[32minfo[39m] Executing (default): SELECT `createdAt`, `updatedAt`, `userId`, `foodCategoryId` FROM `favoriteFoodCategories` AS `favoriteFoodCategories` WHERE `favoriteFoodCategories`.`userId` = '2';
[2021-12-14 12:24:25] [[32minfo[39m] Request status: [object Object] data [object SequelizeInstance:users]
[2021-12-14 12:24:25] [[32minfo[39m] Executing (default): SELECT `createdAt`, `updatedAt`, `userId`, `foodCategoryId` FROM `favoriteFoodCategories` AS `favoriteFoodCategories` WHERE `favoriteFoodCategories`.`userId` = 2;
[2021-12-14 12:24:25] [[32minfo[39m] Request status: [object Object] data 
[2021-12-14 12:24:27] [[32minfo[39m] Executing (default): SELECT `id`, `catName`, `catIcon` FROM `foodCategories` AS `foodCategories`;
[2021-12-14 12:24:27] [[32minfo[39m] Request status: [object Object] data [object SequelizeInstance:foodCategories],[object SequelizeInstance:foodCategories],[object SequelizeInstance:foodCategories],[object SequelizeInstance:foodCategories],[object SequelizeInstance:foodCategories]
[2021-12-14 12:24:27] [[32minfo[39m] Executing (default): SELECT `id`, `username`, `email`, `password`, `firstname`, `lastname`, `gender`, `phone`, `birthday`, `address`, `userAvatar`, `createdAt`, `updatedAt` FROM `users` AS `users` WHERE `users`.`id` = '2';
[2021-12-14 12:24:28] [[32minfo[39m] Executing (default): SELECT `createdAt`, `updatedAt`, `userId`, `foodCategoryId` FROM `favoriteFoodCategories` AS `favoriteFoodCategories` WHERE `favoriteFoodCategories`.`userId` = '2';
[2021-12-14 12:24:28] [[32minfo[39m] Request status: [object Object] data [object SequelizeInstance:users]
[2021-12-14 12:24:28] [[32minfo[39m] Executing (default): SELECT `createdAt`, `updatedAt`, `userId`, `foodCategoryId` FROM `favoriteFoodCategories` AS `favoriteFoodCategories` WHERE `favoriteFoodCategories`.`userId` = 2;
[2021-12-14 12:24:28] [[32minfo[39m] Request status: [object Object] data 
[2021-12-14 12:24:29] [[32minfo[39m] Executing (default): SELECT `createdAt`, `updatedAt`, `userId`, `foodCategoryId` FROM `favoriteFoodCategories` AS `favoriteFoodCategories` WHERE `favoriteFoodCategories`.`userId` = '2';
[2021-12-14 12:24:29] [[32minfo[39m] Request status: [object Object] data 
[2021-12-14 12:24:29] [[32minfo[39m] Request status: [object Object]
[2021-12-14 12:24:31] [[32minfo[39m] Executing (default): SELECT `id`, `username`, `email`, `password`, `firstname`, `lastname`, `gender`, `phone`, `birthday`, `address`, `userAvatar`, `createdAt`, `updatedAt` FROM `users` AS `users` WHERE `users`.`id` = '2';
[2021-12-14 12:24:31] [[32minfo[39m] Executing (default): SELECT `createdAt`, `updatedAt`, `userId`, `foodCategoryId` FROM `favoriteFoodCategories` AS `favoriteFoodCategories` WHERE `favoriteFoodCategories`.`userId` = '2';
[2021-12-14 12:24:31] [[32minfo[39m] Request status: [object Object] data [object SequelizeInstance:users]
[2021-12-14 12:24:31] [[32minfo[39m] Executing (default): SELECT `createdAt`, `updatedAt`, `userId`, `foodCategoryId` FROM `favoriteFoodCategories` AS `favoriteFoodCategories` WHERE `favoriteFoodCategories`.`userId` = 2;
[2021-12-14 12:24:31] [[32minfo[39m] Request status: [object Object] data [object SequelizeInstance:favoriteFoodCategories]
[2021-12-14 12:24:36] [[32minfo[39m] Executing (default): SELECT `id`, `catName` FROM `productCategories` AS `productCategories`;
[2021-12-14 12:24:36] [[32minfo[39m] Request status: [object Object] data [object SequelizeInstance:productCategories],[object SequelizeInstance:productCategories],[object SequelizeInstance:productCategories],[object SequelizeInstance:productCategories],[object SequelizeInstance:productCategories]
[2021-12-14 12:24:36] [[32minfo[39m] Executing (default): SELECT `id`, `username`, `email`, `password`, `firstname`, `lastname`, `gender`, `phone`, `birthday`, `address`, `userAvatar`, `createdAt`, `updatedAt` FROM `users` AS `users` WHERE `users`.`id` = '2';
[2021-12-14 12:24:36] [[32minfo[39m] Executing (default): SELECT `createdAt`, `updatedAt`, `userId`, `foodCategoryId` FROM `favoriteFoodCategories` AS `favoriteFoodCategories` WHERE `favoriteFoodCategories`.`userId` = '2';
[2021-12-14 12:24:36] [[32minfo[39m] Request status: [object Object] data [object SequelizeInstance:users]
[2021-12-14 12:24:36] [[32minfo[39m] Executing (default): SELECT `createdAt`, `updatedAt`, `userId`, `foodCategoryId` FROM `favoriteFoodCategories` AS `favoriteFoodCategories` WHERE `favoriteFoodCategories`.`userId` = 2;
[2021-12-14 12:24:36] [[32minfo[39m] Executing (default): SELECT `id`, `foodName`, `foodDescription`, `foodCalories`, `foodImage`, `createdAt`, `updatedAt`, `foodCategoryId` FROM `foods` AS `foods` WHERE `foods`.`foodCategoryId` = 2 ORDER BY rand() LIMIT 3;
[2021-12-14 12:24:36] [[32minfo[39m] Request status: [object Object] data [object SequelizeInstance:favoriteFoodCategories]
[2021-12-14 12:24:36] [[32minfo[39m] Request status: [object Object] Created!
[2021-12-14 12:24:36] [[32minfo[39m] Executing (default): SELECT `id`, `username`, `email`, `password`, `firstname`, `lastname`, `gender`, `phone`, `birthday`, `address`, `userAvatar`, `createdAt`, `updatedAt` FROM `users` AS `users` WHERE `users`.`id` = '2';
[2021-12-14 12:24:36] [[32minfo[39m] Executing (default): SELECT `createdAt`, `updatedAt`, `userId`, `foodCategoryId` FROM `favoriteFoodCategories` AS `favoriteFoodCategories` WHERE `favoriteFoodCategories`.`userId` = '2';
[2021-12-14 12:24:36] [[32minfo[39m] Executing (default): SELECT `id`, `foodName`, `foodDescription`, `foodCalories`, `foodImage`, `createdAt`, `updatedAt`, `foodCategoryId` FROM `foods` AS `foods` WHERE `foods`.`foodCategoryId` = 2 ORDER BY rand() LIMIT 3;
[2021-12-14 12:24:36] [[32minfo[39m] Request status: [object Object] data [object SequelizeInstance:users]
[2021-12-14 12:24:36] [[32minfo[39m] Executing (default): SELECT `createdAt`, `updatedAt`, `userId`, `foodCategoryId` FROM `favoriteFoodCategories` AS `favoriteFoodCategories` WHERE `favoriteFoodCategories`.`userId` = 2;
[2021-12-14 12:24:36] [[32minfo[39m] Request status: [object Object] data [object SequelizeInstance:favoriteFoodCategories]
[2021-12-14 12:24:36] [[32minfo[39m] Request status: [object Object] Created!
[2021-12-14 12:24:53] [[32minfo[39m] Executing (default): SELECT `createdAt`, `updatedAt`, `userId`, `foodCategoryId` FROM `favoriteFoodCategories` AS `favoriteFoodCategories` WHERE `favoriteFoodCategories`.`userId` = '2';
[2021-12-14 12:24:53] [[32minfo[39m] Executing (default): SELECT `id`, `foodName`, `foodDescription`, `foodCalories`, `foodImage`, `createdAt`, `updatedAt`, `foodCategoryId` FROM `foods` AS `foods` WHERE `foods`.`foodCategoryId` = 2 ORDER BY rand() LIMIT 3;
[2021-12-14 12:24:53] [[32minfo[39m] Executing (default): SELECT `id`, `username`, `email`, `password`, `firstname`, `lastname`, `gender`, `phone`, `birthday`, `address`, `userAvatar`, `createdAt`, `updatedAt` FROM `users` AS `users` WHERE `users`.`id` = '2';
[2021-12-14 12:24:53] [[32minfo[39m] Request status: [object Object] data [object SequelizeInstance:favoriteFoodCategories]
[2021-12-14 12:24:53] [[32minfo[39m] Request status: [object Object] Created!
[2021-12-14 12:24:53] [[32minfo[39m] Request status: [object Object] data [object SequelizeInstance:users]
[2021-12-14 12:24:53] [[32minfo[39m] Executing (default): SELECT `createdAt`, `updatedAt`, `userId`, `foodCategoryId` FROM `favoriteFoodCategories` AS `favoriteFoodCategories` WHERE `favoriteFoodCategories`.`userId` = 2;
[2021-12-14 12:24:54] [[32minfo[39m] Executing (default): SELECT `id`, `catName`, `catIcon` FROM `foodCategories` AS `foodCategories`;
[2021-12-14 12:24:54] [[32minfo[39m] Request status: [object Object] data [object SequelizeInstance:foodCategories],[object SequelizeInstance:foodCategories],[object SequelizeInstance:foodCategories],[object SequelizeInstance:foodCategories],[object SequelizeInstance:foodCategories]
[2021-12-14 12:24:57] [[32minfo[39m] Executing (default): SELECT `createdAt`, `updatedAt`, `userId`, `foodCategoryId` FROM `favoriteFoodCategories` AS `favoriteFoodCategories` WHERE `favoriteFoodCategories`.`userId` = '2';
[2021-12-14 12:24:57] [[32minfo[39m] Executing (default): SELECT `id`, `username`, `email`, `password`, `firstname`, `lastname`, `gender`, `phone`, `birthday`, `address`, `userAvatar`, `createdAt`, `updatedAt` FROM `users` AS `users` WHERE `users`.`id` = '2';
[2021-12-14 12:24:57] [[32minfo[39m] Executing (default): SELECT `id`, `foodName`, `foodDescription`, `foodCalories`, `foodImage`, `createdAt`, `updatedAt`, `foodCategoryId` FROM `foods` AS `foods` WHERE `foods`.`foodCategoryId` = 2 ORDER BY rand() LIMIT 3;
[2021-12-14 12:24:57] [[32minfo[39m] Request status: [object Object] data [object SequelizeInstance:favoriteFoodCategories]
[2021-12-14 12:24:57] [[32minfo[39m] Request status: [object Object] data [object SequelizeInstance:users]
[2021-12-14 12:24:57] [[32minfo[39m] Executing (default): SELECT `createdAt`, `updatedAt`, `userId`, `foodCategoryId` FROM `favoriteFoodCategories` AS `favoriteFoodCategories` WHERE `favoriteFoodCategories`.`userId` = 2;
[2021-12-14 12:24:57] [[32minfo[39m] Request status: [object Object] Created!
[2021-12-14 12:24:58] [[32minfo[39m] Executing (default): SELECT `id`, `username`, `email`, `password`, `firstname`, `lastname`, `gender`, `phone`, `birthday`, `address`, `userAvatar`, `createdAt`, `updatedAt` FROM `users` AS `users` WHERE `users`.`id` = '2';
[2021-12-14 12:24:58] [[32minfo[39m] Executing (default): SELECT `createdAt`, `updatedAt`, `userId`, `foodCategoryId` FROM `favoriteFoodCategories` AS `favoriteFoodCategories` WHERE `favoriteFoodCategories`.`userId` = '2';
[2021-12-14 12:24:58] [[32minfo[39m] Executing (default): SELECT `id`, `foodName`, `foodDescription`, `foodCalories`, `foodImage`, `createdAt`, `updatedAt`, `foodCategoryId` FROM `foods` AS `foods` WHERE `foods`.`foodCategoryId` = 2 ORDER BY rand() LIMIT 3;
[2021-12-14 12:24:58] [[32minfo[39m] Request status: [object Object] data [object SequelizeInstance:users]
[2021-12-14 12:24:58] [[32minfo[39m] Executing (default): SELECT `createdAt`, `updatedAt`, `userId`, `foodCategoryId` FROM `favoriteFoodCategories` AS `favoriteFoodCategories` WHERE `favoriteFoodCategories`.`userId` = 2;
[2021-12-14 12:24:58] [[32minfo[39m] Request status: [object Object] data [object SequelizeInstance:favoriteFoodCategories]
[2021-12-14 12:24:58] [[32minfo[39m] Request status: [object Object] Created!
[2021-12-14 12:24:59] [[32minfo[39m] Executing (default): SELECT `createdAt`, `updatedAt`, `userId`, `foodCategoryId` FROM `favoriteFoodCategories` AS `favoriteFoodCategories` WHERE `favoriteFoodCategories`.`userId` = '2';
[2021-12-14 12:24:59] [[32minfo[39m] Executing (default): SELECT `id`, `username`, `email`, `password`, `firstname`, `lastname`, `gender`, `phone`, `birthday`, `address`, `userAvatar`, `createdAt`, `updatedAt` FROM `users` AS `users` WHERE `users`.`id` = '2';
[2021-12-14 12:24:59] [[32minfo[39m] Executing (default): SELECT `id`, `foodName`, `foodDescription`, `foodCalories`, `foodImage`, `createdAt`, `updatedAt`, `foodCategoryId` FROM `foods` AS `foods` WHERE `foods`.`foodCategoryId` = 2 ORDER BY rand() LIMIT 3;
[2021-12-14 12:24:59] [[32minfo[39m] Request status: [object Object] data [object SequelizeInstance:favoriteFoodCategories]
[2021-12-14 12:24:59] [[32minfo[39m] Request status: [object Object] data [object SequelizeInstance:users]
[2021-12-14 12:24:59] [[32minfo[39m] Executing (default): SELECT `createdAt`, `updatedAt`, `userId`, `foodCategoryId` FROM `favoriteFoodCategories` AS `favoriteFoodCategories` WHERE `favoriteFoodCategories`.`userId` = 2;
[2021-12-14 12:24:59] [[32minfo[39m] Request status: [object Object] Created!
[2021-12-14 12:24:59] [[32minfo[39m] Executing (default): SELECT `createdAt`, `updatedAt`, `userId`, `foodCategoryId` FROM `favoriteFoodCategories` AS `favoriteFoodCategories` WHERE `favoriteFoodCategories`.`userId` = '2';
[2021-12-14 12:24:59] [[32minfo[39m] Executing (default): SELECT `id`, `foodName`, `foodDescription`, `foodCalories`, `foodImage`, `createdAt`, `updatedAt`, `foodCategoryId` FROM `foods` AS `foods` WHERE `foods`.`foodCategoryId` = 2 ORDER BY rand() LIMIT 3;
[2021-12-14 12:24:59] [[32minfo[39m] Executing (default): SELECT `id`, `username`, `email`, `password`, `firstname`, `lastname`, `gender`, `phone`, `birthday`, `address`, `userAvatar`, `createdAt`, `updatedAt` FROM `users` AS `users` WHERE `users`.`id` = '2';
[2021-12-14 12:24:59] [[32minfo[39m] Request status: [object Object] data [object SequelizeInstance:favoriteFoodCategories]
[2021-12-14 12:24:59] [[32minfo[39m] Request status: [object Object] Created!
[2021-12-14 12:24:59] [[32minfo[39m] Request status: [object Object] data [object SequelizeInstance:users]
[2021-12-14 12:24:59] [[32minfo[39m] Executing (default): SELECT `createdAt`, `updatedAt`, `userId`, `foodCategoryId` FROM `favoriteFoodCategories` AS `favoriteFoodCategories` WHERE `favoriteFoodCategories`.`userId` = 2;
[2021-12-14 12:25:00] [[32minfo[39m] Executing (default): SELECT `carts`.*, `cartDetails`.`id` AS `cartDetails.id`, `cartDetails`.`quantity` AS `cartDetails.quantity`, `cartDetails`.`isBuy` AS `cartDetails.isBuy`, `cartDetails`.`isDeleted` AS `cartDetails.isDeleted`, `cartDetails`.`createdAt` AS `cartDetails.createdAt`, `cartDetails`.`updatedAt` AS `cartDetails.updatedAt`, `cartDetails`.`cartId` AS `cartDetails.cartId`, `cartDetails`.`productId` AS `cartDetails.productId`, `cartDetails->product`.`id` AS `cartDetails.product.id`, `cartDetails->product`.`proName` AS `cartDetails.product.proName`, `cartDetails->product`.`proDescription` AS `cartDetails.product.proDescription`, `cartDetails->product`.`quantityValue` AS `cartDetails.product.quantityValue`, `cartDetails->product`.`price` AS `cartDetails.product.price`, `cartDetails->product`.`brand` AS `cartDetails.product.brand`, `cartDetails->product`.`origin` AS `cartDetails.product.origin`, `cartDetails->product`.`productAt` AS `cartDetails.product.productAt`, `cartDetails->product`.`expireAt` AS `cartDetails.product.expireAt`, `cartDetails->product`.`manual` AS `cartDetails.product.manual`, `cartDetails->product`.`preserve` AS `cartDetails.product.preserve`, `cartDetails->product`.`productImage` AS `cartDetails.product.productImage`, `cartDetails->product`.`createdAt` AS `cartDetails.product.createdAt`, `cartDetails->product`.`updatedAt` AS `cartDetails.product.updatedAt`, `cartDetails->product`.`productCategoryId` AS `cartDetails.product.productCategoryId`, `cartDetails->product`.`quantityId` AS `cartDetails.product.quantityId` FROM (SELECT `carts`.`id`, `carts`.`createdAt`, `carts`.`updatedAt`, `carts`.`userId` FROM `carts` AS `carts` WHERE `carts`.`userId` = '2' AND ( SELECT `cartId` FROM `cartDetails` AS `cartDetails` WHERE ((`cartDetails`.`isBuy` = false AND `cartDetails`.`isDeleted` = false) AND `cartDetails`.`cartId` = `carts`.`id`) LIMIT 1 ) IS NOT NULL LIMIT 1) AS `carts` INNER JOIN `cartDetails` AS `cartDetails` ON `carts`.`id` = `cartDetails`.`cartId` AND `cartDetails`.`isBuy` = false AND `cartDetails`.`isDeleted` = false LEFT OUTER JOIN `products` AS `cartDetails->product` ON `cartDetails`.`productId` = `cartDetails->product`.`id`;
[2021-12-14 12:25:00] [[32minfo[39m] Executing (default): SELECT `carts`.*, `cartDetails`.`id` AS `cartDetails.id`, `cartDetails`.`quantity` AS `cartDetails.quantity`, `cartDetails`.`isBuy` AS `cartDetails.isBuy`, `cartDetails`.`isDeleted` AS `cartDetails.isDeleted`, `cartDetails`.`createdAt` AS `cartDetails.createdAt`, `cartDetails`.`updatedAt` AS `cartDetails.updatedAt`, `cartDetails`.`cartId` AS `cartDetails.cartId`, `cartDetails`.`productId` AS `cartDetails.productId`, `cartDetails->product`.`id` AS `cartDetails.product.id`, `cartDetails->product`.`proName` AS `cartDetails.product.proName`, `cartDetails->product`.`proDescription` AS `cartDetails.product.proDescription`, `cartDetails->product`.`quantityValue` AS `cartDetails.product.quantityValue`, `cartDetails->product`.`price` AS `cartDetails.product.price`, `cartDetails->product`.`brand` AS `cartDetails.product.brand`, `cartDetails->product`.`origin` AS `cartDetails.product.origin`, `cartDetails->product`.`productAt` AS `cartDetails.product.productAt`, `cartDetails->product`.`expireAt` AS `cartDetails.product.expireAt`, `cartDetails->product`.`manual` AS `cartDetails.product.manual`, `cartDetails->product`.`preserve` AS `cartDetails.product.preserve`, `cartDetails->product`.`productImage` AS `cartDetails.product.productImage`, `cartDetails->product`.`createdAt` AS `cartDetails.product.createdAt`, `cartDetails->product`.`updatedAt` AS `cartDetails.product.updatedAt`, `cartDetails->product`.`productCategoryId` AS `cartDetails.product.productCategoryId`, `cartDetails->product`.`quantityId` AS `cartDetails.product.quantityId` FROM (SELECT `carts`.`id`, `carts`.`createdAt`, `carts`.`updatedAt`, `carts`.`userId` FROM `carts` AS `carts` WHERE `carts`.`userId` = '2' AND ( SELECT `cartId` FROM `cartDetails` AS `cartDetails` WHERE ((`cartDetails`.`isBuy` = false AND `cartDetails`.`isDeleted` = false) AND `cartDetails`.`cartId` = `carts`.`id`) LIMIT 1 ) IS NOT NULL LIMIT 1) AS `carts` INNER JOIN `cartDetails` AS `cartDetails` ON `carts`.`id` = `cartDetails`.`cartId` AND `cartDetails`.`isBuy` = false AND `cartDetails`.`isDeleted` = false LEFT OUTER JOIN `products` AS `cartDetails->product` ON `cartDetails`.`productId` = `cartDetails->product`.`id`;
[2021-12-14 12:25:00] [[32minfo[39m] Executing (default): SELECT `carts`.*, `cartDetails`.`id` AS `cartDetails.id`, `cartDetails`.`quantity` AS `cartDetails.quantity`, `cartDetails`.`isBuy` AS `cartDetails.isBuy`, `cartDetails`.`isDeleted` AS `cartDetails.isDeleted`, `cartDetails`.`createdAt` AS `cartDetails.createdAt`, `cartDetails`.`updatedAt` AS `cartDetails.updatedAt`, `cartDetails`.`cartId` AS `cartDetails.cartId`, `cartDetails`.`productId` AS `cartDetails.productId`, `cartDetails->product`.`id` AS `cartDetails.product.id`, `cartDetails->product`.`proName` AS `cartDetails.product.proName`, `cartDetails->product`.`proDescription` AS `cartDetails.product.proDescription`, `cartDetails->product`.`quantityValue` AS `cartDetails.product.quantityValue`, `cartDetails->product`.`price` AS `cartDetails.product.price`, `cartDetails->product`.`brand` AS `cartDetails.product.brand`, `cartDetails->product`.`origin` AS `cartDetails.product.origin`, `cartDetails->product`.`productAt` AS `cartDetails.product.productAt`, `cartDetails->product`.`expireAt` AS `cartDetails.product.expireAt`, `cartDetails->product`.`manual` AS `cartDetails.product.manual`, `cartDetails->product`.`preserve` AS `cartDetails.product.preserve`, `cartDetails->product`.`productImage` AS `cartDetails.product.productImage`, `cartDetails->product`.`createdAt` AS `cartDetails.product.createdAt`, `cartDetails->product`.`updatedAt` AS `cartDetails.product.updatedAt`, `cartDetails->product`.`productCategoryId` AS `cartDetails.product.productCategoryId`, `cartDetails->product`.`quantityId` AS `cartDetails.product.quantityId` FROM (SELECT `carts`.`id`, `carts`.`createdAt`, `carts`.`updatedAt`, `carts`.`userId` FROM `carts` AS `carts` WHERE `carts`.`userId` = '2' AND ( SELECT `cartId` FROM `cartDetails` AS `cartDetails` WHERE ((`cartDetails`.`isBuy` = false AND `cartDetails`.`isDeleted` = false) AND `cartDetails`.`cartId` = `carts`.`id`) LIMIT 1 ) IS NOT NULL LIMIT 1) AS `carts` INNER JOIN `cartDetails` AS `cartDetails` ON `carts`.`id` = `cartDetails`.`cartId` AND `cartDetails`.`isBuy` = false AND `cartDetails`.`isDeleted` = false LEFT OUTER JOIN `products` AS `cartDetails->product` ON `cartDetails`.`productId` = `cartDetails->product`.`id`;
[2021-12-14 12:25:00] [[32minfo[39m] Executing (default): SELECT `carts`.*, `cartDetails`.`id` AS `cartDetails.id`, `cartDetails`.`quantity` AS `cartDetails.quantity`, `cartDetails`.`isBuy` AS `cartDetails.isBuy`, `cartDetails`.`isDeleted` AS `cartDetails.isDeleted`, `cartDetails`.`createdAt` AS `cartDetails.createdAt`, `cartDetails`.`updatedAt` AS `cartDetails.updatedAt`, `cartDetails`.`cartId` AS `cartDetails.cartId`, `cartDetails`.`productId` AS `cartDetails.productId`, `cartDetails->product`.`id` AS `cartDetails.product.id`, `cartDetails->product`.`proName` AS `cartDetails.product.proName`, `cartDetails->product`.`proDescription` AS `cartDetails.product.proDescription`, `cartDetails->product`.`quantityValue` AS `cartDetails.product.quantityValue`, `cartDetails->product`.`price` AS `cartDetails.product.price`, `cartDetails->product`.`brand` AS `cartDetails.product.brand`, `cartDetails->product`.`origin` AS `cartDetails.product.origin`, `cartDetails->product`.`productAt` AS `cartDetails.product.productAt`, `cartDetails->product`.`expireAt` AS `cartDetails.product.expireAt`, `cartDetails->product`.`manual` AS `cartDetails.product.manual`, `cartDetails->product`.`preserve` AS `cartDetails.product.preserve`, `cartDetails->product`.`productImage` AS `cartDetails.product.productImage`, `cartDetails->product`.`createdAt` AS `cartDetails.product.createdAt`, `cartDetails->product`.`updatedAt` AS `cartDetails.product.updatedAt`, `cartDetails->product`.`productCategoryId` AS `cartDetails.product.productCategoryId`, `cartDetails->product`.`quantityId` AS `cartDetails.product.quantityId` FROM (SELECT `carts`.`id`, `carts`.`createdAt`, `carts`.`updatedAt`, `carts`.`userId` FROM `carts` AS `carts` WHERE `carts`.`userId` = '2' AND ( SELECT `cartId` FROM `cartDetails` AS `cartDetails` WHERE ((`cartDetails`.`isBuy` = false AND `cartDetails`.`isDeleted` = false) AND `cartDetails`.`cartId` = `carts`.`id`) LIMIT 1 ) IS NOT NULL LIMIT 1) AS `carts` INNER JOIN `cartDetails` AS `cartDetails` ON `carts`.`id` = `cartDetails`.`cartId` AND `cartDetails`.`isBuy` = false AND `cartDetails`.`isDeleted` = false LEFT OUTER JOIN `products` AS `cartDetails->product` ON `cartDetails`.`productId` = `cartDetails->product`.`id`;
[2021-12-14 12:25:28] [[32minfo[39m] Executing (default): SELECT `id`, `username`, `email`, `password`, `firstname`, `lastname`, `gender`, `phone`, `birthday`, `address`, `userAvatar`, `createdAt`, `updatedAt` FROM `users` AS `users` WHERE `users`.`id` = '2';
[2021-12-14 12:25:28] [[32minfo[39m] Request status: [object Object] data [object SequelizeInstance:users]
[2021-12-14 12:25:28] [[32minfo[39m] Executing (default): SELECT `createdAt`, `updatedAt`, `userId`, `foodCategoryId` FROM `favoriteFoodCategories` AS `favoriteFoodCategories` WHERE `favoriteFoodCategories`.`userId` = 2;
[2021-12-14 12:25:28] [[32minfo[39m] Executing (default): SELECT `carts`.*, `cartDetails`.`id` AS `cartDetails.id`, `cartDetails`.`quantity` AS `cartDetails.quantity`, `cartDetails`.`isBuy` AS `cartDetails.isBuy`, `cartDetails`.`isDeleted` AS `cartDetails.isDeleted`, `cartDetails`.`createdAt` AS `cartDetails.createdAt`, `cartDetails`.`updatedAt` AS `cartDetails.updatedAt`, `cartDetails`.`cartId` AS `cartDetails.cartId`, `cartDetails`.`productId` AS `cartDetails.productId`, `cartDetails->product`.`id` AS `cartDetails.product.id`, `cartDetails->product`.`proName` AS `cartDetails.product.proName`, `cartDetails->product`.`proDescription` AS `cartDetails.product.proDescription`, `cartDetails->product`.`quantityValue` AS `cartDetails.product.quantityValue`, `cartDetails->product`.`price` AS `cartDetails.product.price`, `cartDetails->product`.`brand` AS `cartDetails.product.brand`, `cartDetails->product`.`origin` AS `cartDetails.product.origin`, `cartDetails->product`.`productAt` AS `cartDetails.product.productAt`, `cartDetails->product`.`expireAt` AS `cartDetails.product.expireAt`, `cartDetails->product`.`manual` AS `cartDetails.product.manual`, `cartDetails->product`.`preserve` AS `cartDetails.product.preserve`, `cartDetails->product`.`productImage` AS `cartDetails.product.productImage`, `cartDetails->product`.`createdAt` AS `cartDetails.product.createdAt`, `cartDetails->product`.`updatedAt` AS `cartDetails.product.updatedAt`, `cartDetails->product`.`productCategoryId` AS `cartDetails.product.productCategoryId`, `cartDetails->product`.`quantityId` AS `cartDetails.product.quantityId` FROM (SELECT `carts`.`id`, `carts`.`createdAt`, `carts`.`updatedAt`, `carts`.`userId` FROM `carts` AS `carts` WHERE `carts`.`userId` = '2' AND ( SELECT `cartId` FROM `cartDetails` AS `cartDetails` WHERE ((`cartDetails`.`isBuy` = false AND `cartDetails`.`isDeleted` = false) AND `cartDetails`.`cartId` = `carts`.`id`) LIMIT 1 ) IS NOT NULL LIMIT 1) AS `carts` INNER JOIN `cartDetails` AS `cartDetails` ON `carts`.`id` = `cartDetails`.`cartId` AND `cartDetails`.`isBuy` = false AND `cartDetails`.`isDeleted` = false LEFT OUTER JOIN `products` AS `cartDetails->product` ON `cartDetails`.`productId` = `cartDetails->product`.`id`;
[2021-12-14 12:25:28] [[32minfo[39m] Executing (default): SELECT `carts`.*, `cartDetails`.`id` AS `cartDetails.id`, `cartDetails`.`quantity` AS `cartDetails.quantity`, `cartDetails`.`isBuy` AS `cartDetails.isBuy`, `cartDetails`.`isDeleted` AS `cartDetails.isDeleted`, `cartDetails`.`createdAt` AS `cartDetails.createdAt`, `cartDetails`.`updatedAt` AS `cartDetails.updatedAt`, `cartDetails`.`cartId` AS `cartDetails.cartId`, `cartDetails`.`productId` AS `cartDetails.productId`, `cartDetails->product`.`id` AS `cartDetails.product.id`, `cartDetails->product`.`proName` AS `cartDetails.product.proName`, `cartDetails->product`.`proDescription` AS `cartDetails.product.proDescription`, `cartDetails->product`.`quantityValue` AS `cartDetails.product.quantityValue`, `cartDetails->product`.`price` AS `cartDetails.product.price`, `cartDetails->product`.`brand` AS `cartDetails.product.brand`, `cartDetails->product`.`origin` AS `cartDetails.product.origin`, `cartDetails->product`.`productAt` AS `cartDetails.product.productAt`, `cartDetails->product`.`expireAt` AS `cartDetails.product.expireAt`, `cartDetails->product`.`manual` AS `cartDetails.product.manual`, `cartDetails->product`.`preserve` AS `cartDetails.product.preserve`, `cartDetails->product`.`productImage` AS `cartDetails.product.productImage`, `cartDetails->product`.`createdAt` AS `cartDetails.product.createdAt`, `cartDetails->product`.`updatedAt` AS `cartDetails.product.updatedAt`, `cartDetails->product`.`productCategoryId` AS `cartDetails.product.productCategoryId`, `cartDetails->product`.`quantityId` AS `cartDetails.product.quantityId` FROM (SELECT `carts`.`id`, `carts`.`createdAt`, `carts`.`updatedAt`, `carts`.`userId` FROM `carts` AS `carts` WHERE `carts`.`userId` = '2' AND ( SELECT `cartId` FROM `cartDetails` AS `cartDetails` WHERE ((`cartDetails`.`isBuy` = false AND `cartDetails`.`isDeleted` = false) AND `cartDetails`.`cartId` = `carts`.`id`) LIMIT 1 ) IS NOT NULL LIMIT 1) AS `carts` INNER JOIN `cartDetails` AS `cartDetails` ON `carts`.`id` = `cartDetails`.`cartId` AND `cartDetails`.`isBuy` = false AND `cartDetails`.`isDeleted` = false LEFT OUTER JOIN `products` AS `cartDetails->product` ON `cartDetails`.`productId` = `cartDetails->product`.`id`;
[2021-12-14 12:32:39] [[32minfo[39m] Executing (default): SELECT `id`, `username`, `email`, `password`, `firstname`, `lastname`, `gender`, `phone`, `birthday`, `address`, `userAvatar`, `createdAt`, `updatedAt` FROM `users` AS `users` WHERE `users`.`username` = 'phuctg2106';
[2021-12-14 12:32:45] [[32minfo[39m] Executing (default): SELECT `id`, `username`, `email`, `password`, `firstname`, `lastname`, `gender`, `phone`, `birthday`, `address`, `userAvatar`, `createdAt`, `updatedAt` FROM `users` AS `users` WHERE `users`.`username` = 'phuctg2106';
[2021-12-14 12:32:45] [[32minfo[39m] Executing (default): SELECT `id`, `username`, `email`, `password`, `firstname`, `lastname`, `gender`, `phone`, `birthday`, `address`, `userAvatar`, `createdAt`, `updatedAt` FROM `users` AS `users` WHERE `users`.`id` = '2';
[2021-12-14 12:32:45] [[32minfo[39m] Request status: [object Object] data [object SequelizeInstance:users]
[2021-12-14 12:32:45] [[32minfo[39m] Executing (default): SELECT `createdAt`, `updatedAt`, `userId`, `foodCategoryId` FROM `favoriteFoodCategories` AS `favoriteFoodCategories` WHERE `favoriteFoodCategories`.`userId` = 2;
[2021-12-14 12:32:45] [[32minfo[39m] Executing (default): SELECT `createdAt`, `updatedAt`, `userId`, `foodCategoryId` FROM `favoriteFoodCategories` AS `favoriteFoodCategories` WHERE `favoriteFoodCategories`.`userId` = '2';
[2021-12-14 12:32:45] [[32minfo[39m] Request status: [object Object] data [object SequelizeInstance:favoriteFoodCategories]
[2021-12-14 12:32:49] [[32minfo[39m] Executing (default): SELECT `id`, `catName` FROM `productCategories` AS `productCategories`;
[2021-12-14 12:32:49] [[32minfo[39m] Request status: [object Object] data [object SequelizeInstance:productCategories],[object SequelizeInstance:productCategories],[object SequelizeInstance:productCategories],[object SequelizeInstance:productCategories],[object SequelizeInstance:productCategories]
[2021-12-14 12:32:49] [[32minfo[39m] Executing (default): SELECT `createdAt`, `updatedAt`, `userId`, `foodCategoryId` FROM `favoriteFoodCategories` AS `favoriteFoodCategories` WHERE `favoriteFoodCategories`.`userId` = '2';
[2021-12-14 12:32:49] [[32minfo[39m] Executing (default): SELECT `id`, `foodName`, `foodDescription`, `foodCalories`, `foodImage`, `createdAt`, `updatedAt`, `foodCategoryId` FROM `foods` AS `foods` WHERE `foods`.`foodCategoryId` = 2 ORDER BY rand() LIMIT 3;
[2021-12-14 12:32:49] [[32minfo[39m] Executing (default): SELECT `id`, `username`, `email`, `password`, `firstname`, `lastname`, `gender`, `phone`, `birthday`, `address`, `userAvatar`, `createdAt`, `updatedAt` FROM `users` AS `users` WHERE `users`.`id` = '2';
[2021-12-14 12:32:49] [[32minfo[39m] Request status: [object Object] Created!
[2021-12-14 12:32:49] [[32minfo[39m] Request status: [object Object] data [object SequelizeInstance:users]
[2021-12-14 12:32:49] [[32minfo[39m] Executing (default): SELECT `createdAt`, `updatedAt`, `userId`, `foodCategoryId` FROM `favoriteFoodCategories` AS `favoriteFoodCategories` WHERE `favoriteFoodCategories`.`userId` = 2;
[2021-12-14 12:32:49] [[32minfo[39m] Request status: [object Object] data [object SequelizeInstance:favoriteFoodCategories]
[2021-12-14 12:32:49] [[32minfo[39m] Executing (default): SELECT `id`, `username`, `email`, `password`, `firstname`, `lastname`, `gender`, `phone`, `birthday`, `address`, `userAvatar`, `createdAt`, `updatedAt` FROM `users` AS `users` WHERE `users`.`id` = '2';
[2021-12-14 12:32:49] [[32minfo[39m] Executing (default): SELECT `createdAt`, `updatedAt`, `userId`, `foodCategoryId` FROM `favoriteFoodCategories` AS `favoriteFoodCategories` WHERE `favoriteFoodCategories`.`userId` = '2';
[2021-12-14 12:32:49] [[32minfo[39m] Request status: [object Object] data [object SequelizeInstance:users]
[2021-12-14 12:32:49] [[32minfo[39m] Executing (default): SELECT `createdAt`, `updatedAt`, `userId`, `foodCategoryId` FROM `favoriteFoodCategories` AS `favoriteFoodCategories` WHERE `favoriteFoodCategories`.`userId` = 2;
[2021-12-14 12:32:49] [[32minfo[39m] Request status: [object Object] data [object SequelizeInstance:favoriteFoodCategories]
[2021-12-14 12:32:49] [[32minfo[39m] Executing (default): SELECT `id`, `foodName`, `foodDescription`, `foodCalories`, `foodImage`, `createdAt`, `updatedAt`, `foodCategoryId` FROM `foods` AS `foods` WHERE `foods`.`foodCategoryId` = 2 ORDER BY rand() LIMIT 3;
[2021-12-14 12:32:49] [[32minfo[39m] Request status: [object Object] Created!
[2021-12-14 12:32:51] [[32minfo[39m] Executing (default): SELECT `id`, `username`, `email`, `password`, `firstname`, `lastname`, `gender`, `phone`, `birthday`, `address`, `userAvatar`, `createdAt`, `updatedAt` FROM `users` AS `users` WHERE `users`.`id` = '2';
[2021-12-14 12:32:51] [[32minfo[39m] Request status: [object Object] data [object SequelizeInstance:users]
[2021-12-14 12:32:51] [[32minfo[39m] Executing (default): SELECT `createdAt`, `updatedAt`, `userId`, `foodCategoryId` FROM `favoriteFoodCategories` AS `favoriteFoodCategories` WHERE `favoriteFoodCategories`.`userId` = 2;
[2021-12-14 12:32:51] [[32minfo[39m] Executing (default): SELECT `id`, `username`, `email`, `password`, `firstname`, `lastname`, `gender`, `phone`, `birthday`, `address`, `userAvatar`, `createdAt`, `updatedAt` FROM `users` AS `users` WHERE `users`.`id` = '2';
[2021-12-14 12:32:51] [[32minfo[39m] Executing (default): SELECT `createdAt`, `updatedAt`, `userId`, `foodCategoryId` FROM `favoriteFoodCategories` AS `favoriteFoodCategories` WHERE `favoriteFoodCategories`.`userId` = '2';
[2021-12-14 12:32:51] [[32minfo[39m] Executing (default): SELECT `id`, `foodName`, `foodDescription`, `foodCalories`, `foodImage`, `createdAt`, `updatedAt`, `foodCategoryId` FROM `foods` AS `foods` WHERE `foods`.`foodCategoryId` = 2 ORDER BY rand() LIMIT 3;
[2021-12-14 12:32:51] [[32minfo[39m] Request status: [object Object] data [object SequelizeInstance:users]
[2021-12-14 12:32:51] [[32minfo[39m] Executing (default): SELECT `createdAt`, `updatedAt`, `userId`, `foodCategoryId` FROM `favoriteFoodCategories` AS `favoriteFoodCategories` WHERE `favoriteFoodCategories`.`userId` = 2;
[2021-12-14 12:32:51] [[32minfo[39m] Request status: [object Object] Created!
[2021-12-14 12:32:51] [[32minfo[39m] Request status: [object Object] data [object SequelizeInstance:favoriteFoodCategories]
[2021-12-14 12:35:55] [[32minfo[39m] Executing (default): SELECT `id`, `username`, `email`, `password`, `firstname`, `lastname`, `gender`, `phone`, `birthday`, `address`, `userAvatar`, `createdAt`, `updatedAt` FROM `users` AS `users` WHERE `users`.`id` = '2';
[2021-12-14 12:35:55] [[32minfo[39m] Request status: [object Object] data [object SequelizeInstance:users]
[2021-12-14 12:35:55] [[32minfo[39m] Executing (default): SELECT `createdAt`, `updatedAt`, `userId`, `foodCategoryId` FROM `favoriteFoodCategories` AS `favoriteFoodCategories` WHERE `favoriteFoodCategories`.`userId` = 2;
[2021-12-14 12:36:30] [[32minfo[39m] Executing (default): SELECT `id`, `username`, `email`, `password`, `firstname`, `lastname`, `gender`, `phone`, `birthday`, `address`, `userAvatar`, `createdAt`, `updatedAt` FROM `users` AS `users` WHERE `users`.`id` = '2';
[2021-12-14 12:36:30] [[32minfo[39m] Request status: [object Object] data [object SequelizeInstance:users]
[2021-12-14 12:36:30] [[32minfo[39m] Executing (default): SELECT `createdAt`, `updatedAt`, `userId`, `foodCategoryId` FROM `favoriteFoodCategories` AS `favoriteFoodCategories` WHERE `favoriteFoodCategories`.`userId` = 2;
[2021-12-14 12:36:33] [[32minfo[39m] Executing (default): SELECT `id`, `username`, `email`, `password`, `firstname`, `lastname`, `gender`, `phone`, `birthday`, `address`, `userAvatar`, `createdAt`, `updatedAt` FROM `users` AS `users` WHERE `users`.`id` = '2';
[2021-12-14 12:36:34] [[32minfo[39m] Request status: [object Object] data [object SequelizeInstance:users]
[2021-12-14 12:36:34] [[32minfo[39m] Executing (default): SELECT `createdAt`, `updatedAt`, `userId`, `foodCategoryId` FROM `favoriteFoodCategories` AS `favoriteFoodCategories` WHERE `favoriteFoodCategories`.`userId` = 2;
[2021-12-14 12:36:41] [[32minfo[39m] Executing (default): SELECT `id`, `username`, `email`, `password`, `firstname`, `lastname`, `gender`, `phone`, `birthday`, `address`, `userAvatar`, `createdAt`, `updatedAt` FROM `users` AS `users` WHERE `users`.`id` = '2';
[2021-12-14 12:36:41] [[32minfo[39m] Request status: [object Object] data [object SequelizeInstance:users]
[2021-12-14 12:36:41] [[32minfo[39m] Executing (default): SELECT `createdAt`, `updatedAt`, `userId`, `foodCategoryId` FROM `favoriteFoodCategories` AS `favoriteFoodCategories` WHERE `favoriteFoodCategories`.`userId` = 2;
[2021-12-14 12:36:56] [[32minfo[39m] Executing (default): SELECT `carts`.*, `cartDetails`.`id` AS `cartDetails.id`, `cartDetails`.`quantity` AS `cartDetails.quantity`, `cartDetails`.`isBuy` AS `cartDetails.isBuy`, `cartDetails`.`isDeleted` AS `cartDetails.isDeleted`, `cartDetails`.`createdAt` AS `cartDetails.createdAt`, `cartDetails`.`updatedAt` AS `cartDetails.updatedAt`, `cartDetails`.`cartId` AS `cartDetails.cartId`, `cartDetails`.`productId` AS `cartDetails.productId`, `cartDetails->product`.`id` AS `cartDetails.product.id`, `cartDetails->product`.`proName` AS `cartDetails.product.proName`, `cartDetails->product`.`proDescription` AS `cartDetails.product.proDescription`, `cartDetails->product`.`quantityValue` AS `cartDetails.product.quantityValue`, `cartDetails->product`.`price` AS `cartDetails.product.price`, `cartDetails->product`.`brand` AS `cartDetails.product.brand`, `cartDetails->product`.`origin` AS `cartDetails.product.origin`, `cartDetails->product`.`productAt` AS `cartDetails.product.productAt`, `cartDetails->product`.`expireAt` AS `cartDetails.product.expireAt`, `cartDetails->product`.`manual` AS `cartDetails.product.manual`, `cartDetails->product`.`preserve` AS `cartDetails.product.preserve`, `cartDetails->product`.`productImage` AS `cartDetails.product.productImage`, `cartDetails->product`.`createdAt` AS `cartDetails.product.createdAt`, `cartDetails->product`.`updatedAt` AS `cartDetails.product.updatedAt`, `cartDetails->product`.`productCategoryId` AS `cartDetails.product.productCategoryId`, `cartDetails->product`.`quantityId` AS `cartDetails.product.quantityId` FROM (SELECT `carts`.`id`, `carts`.`createdAt`, `carts`.`updatedAt`, `carts`.`userId` FROM `carts` AS `carts` WHERE `carts`.`userId` = '2' AND ( SELECT `cartId` FROM `cartDetails` AS `cartDetails` WHERE ((`cartDetails`.`isBuy` = false AND `cartDetails`.`isDeleted` = false) AND `cartDetails`.`cartId` = `carts`.`id`) LIMIT 1 ) IS NOT NULL LIMIT 1) AS `carts` INNER JOIN `cartDetails` AS `cartDetails` ON `carts`.`id` = `cartDetails`.`cartId` AND `cartDetails`.`isBuy` = false AND `cartDetails`.`isDeleted` = false LEFT OUTER JOIN `products` AS `cartDetails->product` ON `cartDetails`.`productId` = `cartDetails->product`.`id`;
[2021-12-14 12:36:56] [[32minfo[39m] Executing (default): SELECT `carts`.*, `cartDetails`.`id` AS `cartDetails.id`, `cartDetails`.`quantity` AS `cartDetails.quantity`, `cartDetails`.`isBuy` AS `cartDetails.isBuy`, `cartDetails`.`isDeleted` AS `cartDetails.isDeleted`, `cartDetails`.`createdAt` AS `cartDetails.createdAt`, `cartDetails`.`updatedAt` AS `cartDetails.updatedAt`, `cartDetails`.`cartId` AS `cartDetails.cartId`, `cartDetails`.`productId` AS `cartDetails.productId`, `cartDetails->product`.`id` AS `cartDetails.product.id`, `cartDetails->product`.`proName` AS `cartDetails.product.proName`, `cartDetails->product`.`proDescription` AS `cartDetails.product.proDescription`, `cartDetails->product`.`quantityValue` AS `cartDetails.product.quantityValue`, `cartDetails->product`.`price` AS `cartDetails.product.price`, `cartDetails->product`.`brand` AS `cartDetails.product.brand`, `cartDetails->product`.`origin` AS `cartDetails.product.origin`, `cartDetails->product`.`productAt` AS `cartDetails.product.productAt`, `cartDetails->product`.`expireAt` AS `cartDetails.product.expireAt`, `cartDetails->product`.`manual` AS `cartDetails.product.manual`, `cartDetails->product`.`preserve` AS `cartDetails.product.preserve`, `cartDetails->product`.`productImage` AS `cartDetails.product.productImage`, `cartDetails->product`.`createdAt` AS `cartDetails.product.createdAt`, `cartDetails->product`.`updatedAt` AS `cartDetails.product.updatedAt`, `cartDetails->product`.`productCategoryId` AS `cartDetails.product.productCategoryId`, `cartDetails->product`.`quantityId` AS `cartDetails.product.quantityId` FROM (SELECT `carts`.`id`, `carts`.`createdAt`, `carts`.`updatedAt`, `carts`.`userId` FROM `carts` AS `carts` WHERE `carts`.`userId` = '2' AND ( SELECT `cartId` FROM `cartDetails` AS `cartDetails` WHERE ((`cartDetails`.`isBuy` = false AND `cartDetails`.`isDeleted` = false) AND `cartDetails`.`cartId` = `carts`.`id`) LIMIT 1 ) IS NOT NULL LIMIT 1) AS `carts` INNER JOIN `cartDetails` AS `cartDetails` ON `carts`.`id` = `cartDetails`.`cartId` AND `cartDetails`.`isBuy` = false AND `cartDetails`.`isDeleted` = false LEFT OUTER JOIN `products` AS `cartDetails->product` ON `cartDetails`.`productId` = `cartDetails->product`.`id`;
[2021-12-14 12:36:56] [[32minfo[39m] Executing (default): SELECT `carts`.*, `cartDetails`.`id` AS `cartDetails.id`, `cartDetails`.`quantity` AS `cartDetails.quantity`, `cartDetails`.`isBuy` AS `cartDetails.isBuy`, `cartDetails`.`isDeleted` AS `cartDetails.isDeleted`, `cartDetails`.`createdAt` AS `cartDetails.createdAt`, `cartDetails`.`updatedAt` AS `cartDetails.updatedAt`, `cartDetails`.`cartId` AS `cartDetails.cartId`, `cartDetails`.`productId` AS `cartDetails.productId`, `cartDetails->product`.`id` AS `cartDetails.product.id`, `cartDetails->product`.`proName` AS `cartDetails.product.proName`, `cartDetails->product`.`proDescription` AS `cartDetails.product.proDescription`, `cartDetails->product`.`quantityValue` AS `cartDetails.product.quantityValue`, `cartDetails->product`.`price` AS `cartDetails.product.price`, `cartDetails->product`.`brand` AS `cartDetails.product.brand`, `cartDetails->product`.`origin` AS `cartDetails.product.origin`, `cartDetails->product`.`productAt` AS `cartDetails.product.productAt`, `cartDetails->product`.`expireAt` AS `cartDetails.product.expireAt`, `cartDetails->product`.`manual` AS `cartDetails.product.manual`, `cartDetails->product`.`preserve` AS `cartDetails.product.preserve`, `cartDetails->product`.`productImage` AS `cartDetails.product.productImage`, `cartDetails->product`.`createdAt` AS `cartDetails.product.createdAt`, `cartDetails->product`.`updatedAt` AS `cartDetails.product.updatedAt`, `cartDetails->product`.`productCategoryId` AS `cartDetails.product.productCategoryId`, `cartDetails->product`.`quantityId` AS `cartDetails.product.quantityId` FROM (SELECT `carts`.`id`, `carts`.`createdAt`, `carts`.`updatedAt`, `carts`.`userId` FROM `carts` AS `carts` WHERE `carts`.`userId` = '2' AND ( SELECT `cartId` FROM `cartDetails` AS `cartDetails` WHERE ((`cartDetails`.`isBuy` = false AND `cartDetails`.`isDeleted` = false) AND `cartDetails`.`cartId` = `carts`.`id`) LIMIT 1 ) IS NOT NULL LIMIT 1) AS `carts` INNER JOIN `cartDetails` AS `cartDetails` ON `carts`.`id` = `cartDetails`.`cartId` AND `cartDetails`.`isBuy` = false AND `cartDetails`.`isDeleted` = false LEFT OUTER JOIN `products` AS `cartDetails->product` ON `cartDetails`.`productId` = `cartDetails->product`.`id`;
[2021-12-14 12:36:56] [[32minfo[39m] Executing (default): SELECT `carts`.*, `cartDetails`.`id` AS `cartDetails.id`, `cartDetails`.`quantity` AS `cartDetails.quantity`, `cartDetails`.`isBuy` AS `cartDetails.isBuy`, `cartDetails`.`isDeleted` AS `cartDetails.isDeleted`, `cartDetails`.`createdAt` AS `cartDetails.createdAt`, `cartDetails`.`updatedAt` AS `cartDetails.updatedAt`, `cartDetails`.`cartId` AS `cartDetails.cartId`, `cartDetails`.`productId` AS `cartDetails.productId`, `cartDetails->product`.`id` AS `cartDetails.product.id`, `cartDetails->product`.`proName` AS `cartDetails.product.proName`, `cartDetails->product`.`proDescription` AS `cartDetails.product.proDescription`, `cartDetails->product`.`quantityValue` AS `cartDetails.product.quantityValue`, `cartDetails->product`.`price` AS `cartDetails.product.price`, `cartDetails->product`.`brand` AS `cartDetails.product.brand`, `cartDetails->product`.`origin` AS `cartDetails.product.origin`, `cartDetails->product`.`productAt` AS `cartDetails.product.productAt`, `cartDetails->product`.`expireAt` AS `cartDetails.product.expireAt`, `cartDetails->product`.`manual` AS `cartDetails.product.manual`, `cartDetails->product`.`preserve` AS `cartDetails.product.preserve`, `cartDetails->product`.`productImage` AS `cartDetails.product.productImage`, `cartDetails->product`.`createdAt` AS `cartDetails.product.createdAt`, `cartDetails->product`.`updatedAt` AS `cartDetails.product.updatedAt`, `cartDetails->product`.`productCategoryId` AS `cartDetails.product.productCategoryId`, `cartDetails->product`.`quantityId` AS `cartDetails.product.quantityId` FROM (SELECT `carts`.`id`, `carts`.`createdAt`, `carts`.`updatedAt`, `carts`.`userId` FROM `carts` AS `carts` WHERE `carts`.`userId` = '2' AND ( SELECT `cartId` FROM `cartDetails` AS `cartDetails` WHERE ((`cartDetails`.`isBuy` = false AND `cartDetails`.`isDeleted` = false) AND `cartDetails`.`cartId` = `carts`.`id`) LIMIT 1 ) IS NOT NULL LIMIT 1) AS `carts` INNER JOIN `cartDetails` AS `cartDetails` ON `carts`.`id` = `cartDetails`.`cartId` AND `cartDetails`.`isBuy` = false AND `cartDetails`.`isDeleted` = false LEFT OUTER JOIN `products` AS `cartDetails->product` ON `cartDetails`.`productId` = `cartDetails->product`.`id`;
[2021-12-14 12:36:57] [[32minfo[39m] Executing (default): SELECT `carts`.*, `cartDetails`.`id` AS `cartDetails.id`, `cartDetails`.`quantity` AS `cartDetails.quantity`, `cartDetails`.`isBuy` AS `cartDetails.isBuy`, `cartDetails`.`isDeleted` AS `cartDetails.isDeleted`, `cartDetails`.`createdAt` AS `cartDetails.createdAt`, `cartDetails`.`updatedAt` AS `cartDetails.updatedAt`, `cartDetails`.`cartId` AS `cartDetails.cartId`, `cartDetails`.`productId` AS `cartDetails.productId`, `cartDetails->product`.`id` AS `cartDetails.product.id`, `cartDetails->product`.`proName` AS `cartDetails.product.proName`, `cartDetails->product`.`proDescription` AS `cartDetails.product.proDescription`, `cartDetails->product`.`quantityValue` AS `cartDetails.product.quantityValue`, `cartDetails->product`.`price` AS `cartDetails.product.price`, `cartDetails->product`.`brand` AS `cartDetails.product.brand`, `cartDetails->product`.`origin` AS `cartDetails.product.origin`, `cartDetails->product`.`productAt` AS `cartDetails.product.productAt`, `cartDetails->product`.`expireAt` AS `cartDetails.product.expireAt`, `cartDetails->product`.`manual` AS `cartDetails.product.manual`, `cartDetails->product`.`preserve` AS `cartDetails.product.preserve`, `cartDetails->product`.`productImage` AS `cartDetails.product.productImage`, `cartDetails->product`.`createdAt` AS `cartDetails.product.createdAt`, `cartDetails->product`.`updatedAt` AS `cartDetails.product.updatedAt`, `cartDetails->product`.`productCategoryId` AS `cartDetails.product.productCategoryId`, `cartDetails->product`.`quantityId` AS `cartDetails.product.quantityId` FROM (SELECT `carts`.`id`, `carts`.`createdAt`, `carts`.`updatedAt`, `carts`.`userId` FROM `carts` AS `carts` WHERE `carts`.`userId` = '2' AND ( SELECT `cartId` FROM `cartDetails` AS `cartDetails` WHERE ((`cartDetails`.`isBuy` = false AND `cartDetails`.`isDeleted` = false) AND `cartDetails`.`cartId` = `carts`.`id`) LIMIT 1 ) IS NOT NULL LIMIT 1) AS `carts` INNER JOIN `cartDetails` AS `cartDetails` ON `carts`.`id` = `cartDetails`.`cartId` AND `cartDetails`.`isBuy` = false AND `cartDetails`.`isDeleted` = false LEFT OUTER JOIN `products` AS `cartDetails->product` ON `cartDetails`.`productId` = `cartDetails->product`.`id`;
[2021-12-14 12:36:57] [[32minfo[39m] Executing (default): SELECT `carts`.*, `cartDetails`.`id` AS `cartDetails.id`, `cartDetails`.`quantity` AS `cartDetails.quantity`, `cartDetails`.`isBuy` AS `cartDetails.isBuy`, `cartDetails`.`isDeleted` AS `cartDetails.isDeleted`, `cartDetails`.`createdAt` AS `cartDetails.createdAt`, `cartDetails`.`updatedAt` AS `cartDetails.updatedAt`, `cartDetails`.`cartId` AS `cartDetails.cartId`, `cartDetails`.`productId` AS `cartDetails.productId`, `cartDetails->product`.`id` AS `cartDetails.product.id`, `cartDetails->product`.`proName` AS `cartDetails.product.proName`, `cartDetails->product`.`proDescription` AS `cartDetails.product.proDescription`, `cartDetails->product`.`quantityValue` AS `cartDetails.product.quantityValue`, `cartDetails->product`.`price` AS `cartDetails.product.price`, `cartDetails->product`.`brand` AS `cartDetails.product.brand`, `cartDetails->product`.`origin` AS `cartDetails.product.origin`, `cartDetails->product`.`productAt` AS `cartDetails.product.productAt`, `cartDetails->product`.`expireAt` AS `cartDetails.product.expireAt`, `cartDetails->product`.`manual` AS `cartDetails.product.manual`, `cartDetails->product`.`preserve` AS `cartDetails.product.preserve`, `cartDetails->product`.`productImage` AS `cartDetails.product.productImage`, `cartDetails->product`.`createdAt` AS `cartDetails.product.createdAt`, `cartDetails->product`.`updatedAt` AS `cartDetails.product.updatedAt`, `cartDetails->product`.`productCategoryId` AS `cartDetails.product.productCategoryId`, `cartDetails->product`.`quantityId` AS `cartDetails.product.quantityId` FROM (SELECT `carts`.`id`, `carts`.`createdAt`, `carts`.`updatedAt`, `carts`.`userId` FROM `carts` AS `carts` WHERE `carts`.`userId` = '2' AND ( SELECT `cartId` FROM `cartDetails` AS `cartDetails` WHERE ((`cartDetails`.`isBuy` = false AND `cartDetails`.`isDeleted` = false) AND `cartDetails`.`cartId` = `carts`.`id`) LIMIT 1 ) IS NOT NULL LIMIT 1) AS `carts` INNER JOIN `cartDetails` AS `cartDetails` ON `carts`.`id` = `cartDetails`.`cartId` AND `cartDetails`.`isBuy` = false AND `cartDetails`.`isDeleted` = false LEFT OUTER JOIN `products` AS `cartDetails->product` ON `cartDetails`.`productId` = `cartDetails->product`.`id`;
[2021-12-14 12:38:02] [[32minfo[39m] Executing (default): SELECT `id`, `username`, `email`, `password`, `firstname`, `lastname`, `gender`, `phone`, `birthday`, `address`, `userAvatar`, `createdAt`, `updatedAt` FROM `users` AS `users` WHERE `users`.`id` = '2';
[2021-12-14 12:38:02] [[32minfo[39m] Request status: [object Object] data [object SequelizeInstance:users]
[2021-12-14 12:38:02] [[32minfo[39m] Executing (default): SELECT `createdAt`, `updatedAt`, `userId`, `foodCategoryId` FROM `favoriteFoodCategories` AS `favoriteFoodCategories` WHERE `favoriteFoodCategories`.`userId` = 2;
[2021-12-14 12:56:24] [[32minfo[39m] Executing (default): SELECT `id`, `username`, `email`, `password`, `firstname`, `lastname`, `gender`, `phone`, `birthday`, `address`, `userAvatar`, `createdAt`, `updatedAt` FROM `users` AS `users` WHERE `users`.`username` = 'phuctg2106';
[2021-12-14 12:56:24] [[32minfo[39m] Executing (default): SELECT `createdAt`, `updatedAt`, `userId`, `foodCategoryId` FROM `favoriteFoodCategories` AS `favoriteFoodCategories` WHERE `favoriteFoodCategories`.`userId` = '2';
[2021-12-14 12:56:24] [[32minfo[39m] Executing (default): SELECT `id`, `username`, `email`, `password`, `firstname`, `lastname`, `gender`, `phone`, `birthday`, `address`, `userAvatar`, `createdAt`, `updatedAt` FROM `users` AS `users` WHERE `users`.`id` = '2';
[2021-12-14 12:56:24] [[32minfo[39m] Request status: [object Object] data [object SequelizeInstance:favoriteFoodCategories]
[2021-12-14 12:56:24] [[32minfo[39m] Request status: [object Object] data [object SequelizeInstance:users]
[2021-12-14 12:56:24] [[32minfo[39m] Executing (default): SELECT `createdAt`, `updatedAt`, `userId`, `foodCategoryId` FROM `favoriteFoodCategories` AS `favoriteFoodCategories` WHERE `favoriteFoodCategories`.`userId` = 2;
[2021-12-14 12:56:27] [[32minfo[39m] Executing (default): SELECT `id`, `username`, `email`, `password`, `firstname`, `lastname`, `gender`, `phone`, `birthday`, `address`, `userAvatar`, `createdAt`, `updatedAt` FROM `users` AS `users` WHERE `users`.`id` = '2';
[2021-12-14 12:56:27] [[32minfo[39m] Request status: [object Object] data [object SequelizeInstance:users]
[2021-12-14 12:56:27] [[32minfo[39m] Executing (default): SELECT `createdAt`, `updatedAt`, `userId`, `foodCategoryId` FROM `favoriteFoodCategories` AS `favoriteFoodCategories` WHERE `favoriteFoodCategories`.`userId` = 2;
[2021-12-14 12:56:27] [[32minfo[39m] Executing (default): SELECT `id`, `username`, `email`, `password`, `firstname`, `lastname`, `gender`, `phone`, `birthday`, `address`, `userAvatar`, `createdAt`, `updatedAt` FROM `users` AS `users` WHERE `users`.`id` = '2';
[2021-12-14 12:56:27] [[32minfo[39m] Request status: [object Object] data [object SequelizeInstance:users]
[2021-12-14 12:56:27] [[32minfo[39m] Executing (default): SELECT `createdAt`, `updatedAt`, `userId`, `foodCategoryId` FROM `favoriteFoodCategories` AS `favoriteFoodCategories` WHERE `favoriteFoodCategories`.`userId` = 2;
[2021-12-14 12:56:27] [[32minfo[39m] Executing (default): SELECT `createdAt`, `updatedAt`, `userId`, `foodCategoryId` FROM `favoriteFoodCategories` AS `favoriteFoodCategories` WHERE `favoriteFoodCategories`.`userId` = '2';
[2021-12-14 12:56:27] [[32minfo[39m] Request status: [object Object] data [object SequelizeInstance:favoriteFoodCategories]
[2021-12-14 12:56:27] [[32minfo[39m] Executing (default): SELECT `id`, `foodName`, `foodDescription`, `foodCalories`, `foodImage`, `createdAt`, `updatedAt`, `foodCategoryId` FROM `foods` AS `foods` WHERE `foods`.`foodCategoryId` = 2 ORDER BY rand() LIMIT 3;
[2021-12-14 12:56:27] [[32minfo[39m] Request status: [object Object] Created!
[2021-12-14 12:56:47] [[32minfo[39m] Executing (default): SELECT `id`, `username`, `email`, `password`, `firstname`, `lastname`, `gender`, `phone`, `birthday`, `address`, `userAvatar`, `createdAt`, `updatedAt` FROM `users` AS `users` WHERE `users`.`username` = 'phuctg2106';
[2021-12-14 12:56:47] [[32minfo[39m] Executing (default): SELECT `createdAt`, `updatedAt`, `userId`, `foodCategoryId` FROM `favoriteFoodCategories` AS `favoriteFoodCategories` WHERE `favoriteFoodCategories`.`userId` = '2';
[2021-12-14 12:56:47] [[32minfo[39m] Request status: [object Object] data [object SequelizeInstance:favoriteFoodCategories]
[2021-12-14 12:56:47] [[32minfo[39m] Executing (default): SELECT `id`, `username`, `email`, `password`, `firstname`, `lastname`, `gender`, `phone`, `birthday`, `address`, `userAvatar`, `createdAt`, `updatedAt` FROM `users` AS `users` WHERE `users`.`id` = '2';
[2021-12-14 12:56:47] [[32minfo[39m] Request status: [object Object] data [object SequelizeInstance:users]
[2021-12-14 12:56:47] [[32minfo[39m] Executing (default): SELECT `createdAt`, `updatedAt`, `userId`, `foodCategoryId` FROM `favoriteFoodCategories` AS `favoriteFoodCategories` WHERE `favoriteFoodCategories`.`userId` = 2;
[2021-12-14 12:57:33] [[32minfo[39m] Executing (default): SELECT `id`, `username`, `email`, `password`, `firstname`, `lastname`, `gender`, `phone`, `birthday`, `address`, `userAvatar`, `createdAt`, `updatedAt` FROM `users` AS `users` WHERE `users`.`id` = '2';
[2021-12-14 12:57:33] [[32minfo[39m] Executing (default): SELECT `id`, `username`, `email`, `password`, `firstname`, `lastname`, `gender`, `phone`, `birthday`, `address`, `userAvatar`, `createdAt`, `updatedAt` FROM `users` AS `users` WHERE `users`.`id` = '2';
[2021-12-14 12:57:33] [[32minfo[39m] Request status: [object Object] data [object SequelizeInstance:users]
[2021-12-14 12:57:33] [[32minfo[39m] Executing (default): SELECT `createdAt`, `updatedAt`, `userId`, `foodCategoryId` FROM `favoriteFoodCategories` AS `favoriteFoodCategories` WHERE `favoriteFoodCategories`.`userId` = 2;
[2021-12-14 12:57:33] [[32minfo[39m] Request status: [object Object] data [object SequelizeInstance:users]
[2021-12-14 12:57:33] [[32minfo[39m] Executing (default): SELECT `createdAt`, `updatedAt`, `userId`, `foodCategoryId` FROM `favoriteFoodCategories` AS `favoriteFoodCategories` WHERE `favoriteFoodCategories`.`userId` = 2;
[2021-12-14 12:57:33] [[32minfo[39m] Executing (default): SELECT `createdAt`, `updatedAt`, `userId`, `foodCategoryId` FROM `favoriteFoodCategories` AS `favoriteFoodCategories` WHERE `favoriteFoodCategories`.`userId` = '2';
[2021-12-14 12:57:33] [[32minfo[39m] Request status: [object Object] data [object SequelizeInstance:favoriteFoodCategories]
[2021-12-14 12:57:33] [[32minfo[39m] Executing (default): SELECT `id`, `foodName`, `foodDescription`, `foodCalories`, `foodImage`, `createdAt`, `updatedAt`, `foodCategoryId` FROM `foods` AS `foods` WHERE `foods`.`foodCategoryId` = 2 ORDER BY rand() LIMIT 3;
[2021-12-14 12:57:33] [[32minfo[39m] Request status: [object Object] Created!
[2021-12-14 12:57:49] [[32minfo[39m] Executing (default): SELECT `id`, `username`, `email`, `password`, `firstname`, `lastname`, `gender`, `phone`, `birthday`, `address`, `userAvatar`, `createdAt`, `updatedAt` FROM `users` AS `users` WHERE `users`.`username` = 'phuctg2106';
[2021-12-14 12:57:49] [[32minfo[39m] Executing (default): SELECT `id`, `username`, `email`, `password`, `firstname`, `lastname`, `gender`, `phone`, `birthday`, `address`, `userAvatar`, `createdAt`, `updatedAt` FROM `users` AS `users` WHERE `users`.`id` = '2';
[2021-12-14 12:57:50] [[32minfo[39m] Request status: [object Object] data [object SequelizeInstance:users]
[2021-12-14 12:57:50] [[32minfo[39m] Executing (default): SELECT `createdAt`, `updatedAt`, `userId`, `foodCategoryId` FROM `favoriteFoodCategories` AS `favoriteFoodCategories` WHERE `favoriteFoodCategories`.`userId` = 2;
[2021-12-14 12:57:50] [[32minfo[39m] Executing (default): SELECT `createdAt`, `updatedAt`, `userId`, `foodCategoryId` FROM `favoriteFoodCategories` AS `favoriteFoodCategories` WHERE `favoriteFoodCategories`.`userId` = '2';
[2021-12-14 12:57:50] [[32minfo[39m] Request status: [object Object] data [object SequelizeInstance:favoriteFoodCategories]
[2021-12-14 12:57:51] [[32minfo[39m] Executing (default): SELECT `id`, `username`, `email`, `password`, `firstname`, `lastname`, `gender`, `phone`, `birthday`, `address`, `userAvatar`, `createdAt`, `updatedAt` FROM `users` AS `users` WHERE `users`.`id` = '2';
[2021-12-14 12:57:52] [[32minfo[39m] Request status: [object Object] data [object SequelizeInstance:users]
[2021-12-14 12:57:52] [[32minfo[39m] Executing (default): SELECT `createdAt`, `updatedAt`, `userId`, `foodCategoryId` FROM `favoriteFoodCategories` AS `favoriteFoodCategories` WHERE `favoriteFoodCategories`.`userId` = 2;
[2021-12-14 12:57:52] [[32minfo[39m] Executing (default): SELECT `id`, `username`, `email`, `password`, `firstname`, `lastname`, `gender`, `phone`, `birthday`, `address`, `userAvatar`, `createdAt`, `updatedAt` FROM `users` AS `users` WHERE `users`.`id` = '2';
[2021-12-14 12:57:52] [[32minfo[39m] Request status: [object Object] data [object SequelizeInstance:users]
[2021-12-14 12:57:52] [[32minfo[39m] Executing (default): SELECT `createdAt`, `updatedAt`, `userId`, `foodCategoryId` FROM `favoriteFoodCategories` AS `favoriteFoodCategories` WHERE `favoriteFoodCategories`.`userId` = 2;
[2021-12-14 12:57:52] [[32minfo[39m] Executing (default): SELECT `createdAt`, `updatedAt`, `userId`, `foodCategoryId` FROM `favoriteFoodCategories` AS `favoriteFoodCategories` WHERE `favoriteFoodCategories`.`userId` = '2';
[2021-12-14 12:57:52] [[32minfo[39m] Request status: [object Object] data [object SequelizeInstance:favoriteFoodCategories]
[2021-12-14 12:57:52] [[32minfo[39m] Executing (default): SELECT `id`, `foodName`, `foodDescription`, `foodCalories`, `foodImage`, `createdAt`, `updatedAt`, `foodCategoryId` FROM `foods` AS `foods` WHERE `foods`.`foodCategoryId` = 2 ORDER BY rand() LIMIT 3;
[2021-12-14 12:57:52] [[32minfo[39m] Request status: [object Object] Created!
[2021-12-14 13:09:49] [[32minfo[39m] Executing (default): SELECT `id`, `name`, `createdAt`, `updatedAt` FROM `roles` AS `roles` WHERE (`roles`.`name` = 'user');
[2021-12-14 13:09:49] [[32minfo[39m] User baotg is registered
[2021-12-14 13:09:51] [[32minfo[39m] Executing (default): SELECT `id`, `username`, `email`, `password`, `firstname`, `lastname`, `gender`, `phone`, `birthday`, `address`, `userAvatar`, `createdAt`, `updatedAt` FROM `users` AS `users` WHERE `users`.`username` = 'baotg';
[2021-12-14 13:10:58] [[32minfo[39m] Request status: [object Object] Success!
[2021-12-14 13:11:06] [[32minfo[39m] Executing (default): SELECT `orders`.`id`, `orders`.`addressDelivery`, `orders`.`deliveryAt`, `orders`.`orderStatus`, `orders`.`createdAt`, `orders`.`updatedAt`, `orders`.`userId`, `orders`.`deliveryMethodId`, `orders`.`shipperId`, `orders`.`paymentMethodId`, `deliveryMethod`.`id` AS `deliveryMethod.id`, `deliveryMethod`.`deliveryMethod` AS `deliveryMethod.deliveryMethod`, `deliveryMethod`.`fee` AS `deliveryMethod.fee`, `paymentMethod`.`id` AS `paymentMethod.id`, `paymentMethod`.`paymentType` AS `paymentMethod.paymentType`, `orderDetails`.`id` AS `orderDetails.id`, `orderDetails`.`quantity` AS `orderDetails.quantity`, `orderDetails`.`price` AS `orderDetails.price`, `orderDetails->product`.`id` AS `orderDetails.product.id`, `orderDetails->product`.`proName` AS `orderDetails.product.proName`, `orderDetails->product`.`quantityValue` AS `orderDetails.product.quantityValue`, `orderDetails->product`.`quantityId` AS `orderDetails.product.quantityId` FROM `orders` AS `orders` LEFT OUTER JOIN `deliveryMethods` AS `deliveryMethod` ON `orders`.`deliveryMethodId` = `deliveryMethod`.`id` LEFT OUTER JOIN `paymentMethods` AS `paymentMethod` ON `orders`.`paymentMethodId` = `paymentMethod`.`id` LEFT OUTER JOIN `orderDetails` AS `orderDetails` ON `orders`.`id` = `orderDetails`.`orderId` LEFT OUTER JOIN `products` AS `orderDetails->product` ON `orderDetails`.`productId` = `orderDetails->product`.`id` WHERE `orders`.`userId` = '2';
[2021-12-14 13:11:06] [[32minfo[39m] Request status: [object Object] data [object SequelizeInstance:orders]
[2021-12-14 13:12:56] [[32minfo[39m] Executing (default): SELECT `id`, `username`, `email`, `password`, `firstname`, `lastname`, `gender`, `phone`, `birthday`, `address`, `userAvatar`, `createdAt`, `updatedAt` FROM `users` AS `users` WHERE `users`.`username` = 'phuctg2106';
[2021-12-14 13:12:56] [[32minfo[39m] Executing (default): SELECT `id`, `username`, `email`, `password`, `firstname`, `lastname`, `gender`, `phone`, `birthday`, `address`, `userAvatar`, `createdAt`, `updatedAt` FROM `users` AS `users` WHERE `users`.`id` = '2';
[2021-12-14 13:12:56] [[32minfo[39m] Request status: [object Object] data [object SequelizeInstance:users]
[2021-12-14 13:12:56] [[32minfo[39m] Executing (default): SELECT `createdAt`, `updatedAt`, `userId`, `foodCategoryId` FROM `favoriteFoodCategories` AS `favoriteFoodCategories` WHERE `favoriteFoodCategories`.`userId` = 2;
[2021-12-14 13:12:56] [[32minfo[39m] Executing (default): SELECT `createdAt`, `updatedAt`, `userId`, `foodCategoryId` FROM `favoriteFoodCategories` AS `favoriteFoodCategories` WHERE `favoriteFoodCategories`.`userId` = '2';
[2021-12-14 13:12:56] [[32minfo[39m] Request status: [object Object] data [object SequelizeInstance:favoriteFoodCategories]
[2021-12-14 13:12:58] [[32minfo[39m] Executing (default): SELECT `id`, `username`, `email`, `password`, `firstname`, `lastname`, `gender`, `phone`, `birthday`, `address`, `userAvatar`, `createdAt`, `updatedAt` FROM `users` AS `users` WHERE `users`.`id` = '2';
[2021-12-14 13:12:58] [[32minfo[39m] Request status: [object Object] data [object SequelizeInstance:users]
[2021-12-14 13:12:58] [[32minfo[39m] Executing (default): SELECT `createdAt`, `updatedAt`, `userId`, `foodCategoryId` FROM `favoriteFoodCategories` AS `favoriteFoodCategories` WHERE `favoriteFoodCategories`.`userId` = 2;
[2021-12-14 13:12:58] [[32minfo[39m] Executing (default): SELECT `id`, `username`, `email`, `password`, `firstname`, `lastname`, `gender`, `phone`, `birthday`, `address`, `userAvatar`, `createdAt`, `updatedAt` FROM `users` AS `users` WHERE `users`.`id` = '2';
[2021-12-14 13:12:58] [[32minfo[39m] Request status: [object Object] data [object SequelizeInstance:users]
[2021-12-14 13:12:58] [[32minfo[39m] Executing (default): SELECT `createdAt`, `updatedAt`, `userId`, `foodCategoryId` FROM `favoriteFoodCategories` AS `favoriteFoodCategories` WHERE `favoriteFoodCategories`.`userId` = 2;
[2021-12-14 13:12:58] [[32minfo[39m] Executing (default): SELECT `createdAt`, `updatedAt`, `userId`, `foodCategoryId` FROM `favoriteFoodCategories` AS `favoriteFoodCategories` WHERE `favoriteFoodCategories`.`userId` = '2';
[2021-12-14 13:12:58] [[32minfo[39m] Request status: [object Object] data [object SequelizeInstance:favoriteFoodCategories]
[2021-12-14 13:12:58] [[32minfo[39m] Executing (default): SELECT `id`, `foodName`, `foodDescription`, `foodCalories`, `foodImage`, `createdAt`, `updatedAt`, `foodCategoryId` FROM `foods` AS `foods` WHERE `foods`.`foodCategoryId` = 2 ORDER BY rand() LIMIT 3;
[2021-12-14 13:12:58] [[32minfo[39m] Request status: [object Object] Created!
[2021-12-14 13:13:45] [[32minfo[39m] Executing (default): SELECT `id`, `username`, `email`, `password`, `firstname`, `lastname`, `gender`, `phone`, `birthday`, `address`, `userAvatar`, `createdAt`, `updatedAt` FROM `users` AS `users` WHERE `users`.`username` = 'phuctg2106';
[2021-12-14 13:13:45] [[32minfo[39m] Executing (default): SELECT `id`, `username`, `email`, `password`, `firstname`, `lastname`, `gender`, `phone`, `birthday`, `address`, `userAvatar`, `createdAt`, `updatedAt` FROM `users` AS `users` WHERE `users`.`id` = '2';
[2021-12-14 13:13:45] [[32minfo[39m] Executing (default): SELECT `createdAt`, `updatedAt`, `userId`, `foodCategoryId` FROM `favoriteFoodCategories` AS `favoriteFoodCategories` WHERE `favoriteFoodCategories`.`userId` = '2';
[2021-12-14 13:13:45] [[32minfo[39m] Request status: [object Object] data [object SequelizeInstance:users]
[2021-12-14 13:13:45] [[32minfo[39m] Executing (default): SELECT `createdAt`, `updatedAt`, `userId`, `foodCategoryId` FROM `favoriteFoodCategories` AS `favoriteFoodCategories` WHERE `favoriteFoodCategories`.`userId` = 2;
[2021-12-14 13:13:45] [[32minfo[39m] Request status: [object Object] data [object SequelizeInstance:favoriteFoodCategories]
[2021-12-14 13:13:47] [[32minfo[39m] Executing (default): SELECT `id`, `username`, `email`, `password`, `firstname`, `lastname`, `gender`, `phone`, `birthday`, `address`, `userAvatar`, `createdAt`, `updatedAt` FROM `users` AS `users` WHERE `users`.`id` = '2';
[2021-12-14 13:13:47] [[32minfo[39m] Executing (default): SELECT `createdAt`, `updatedAt`, `userId`, `foodCategoryId` FROM `favoriteFoodCategories` AS `favoriteFoodCategories` WHERE `favoriteFoodCategories`.`userId` = '2';
[2021-12-14 13:13:47] [[32minfo[39m] Executing (default): SELECT `id`, `username`, `email`, `password`, `firstname`, `lastname`, `gender`, `phone`, `birthday`, `address`, `userAvatar`, `createdAt`, `updatedAt` FROM `users` AS `users` WHERE `users`.`id` = '2';
[2021-12-14 13:13:47] [[32minfo[39m] Request status: [object Object] data [object SequelizeInstance:users]
[2021-12-14 13:13:47] [[32minfo[39m] Executing (default): SELECT `createdAt`, `updatedAt`, `userId`, `foodCategoryId` FROM `favoriteFoodCategories` AS `favoriteFoodCategories` WHERE `favoriteFoodCategories`.`userId` = 2;
[2021-12-14 13:13:47] [[32minfo[39m] Request status: [object Object] data [object SequelizeInstance:favoriteFoodCategories]
[2021-12-14 13:13:47] [[32minfo[39m] Executing (default): SELECT `id`, `foodName`, `foodDescription`, `foodCalories`, `foodImage`, `createdAt`, `updatedAt`, `foodCategoryId` FROM `foods` AS `foods` WHERE `foods`.`foodCategoryId` = 2 ORDER BY rand() LIMIT 3;
[2021-12-14 13:13:47] [[32minfo[39m] Request status: [object Object] data [object SequelizeInstance:users]
[2021-12-14 13:13:47] [[32minfo[39m] Executing (default): SELECT `createdAt`, `updatedAt`, `userId`, `foodCategoryId` FROM `favoriteFoodCategories` AS `favoriteFoodCategories` WHERE `favoriteFoodCategories`.`userId` = 2;
[2021-12-14 13:13:47] [[32minfo[39m] Request status: [object Object] Created!
[2021-12-14 13:14:23] [[32minfo[39m] Executing (default): SELECT `id`, `username`, `email`, `password`, `firstname`, `lastname`, `gender`, `phone`, `birthday`, `address`, `userAvatar`, `createdAt`, `updatedAt` FROM `users` AS `users` WHERE `users`.`username` = 'phuctg2106';
[2021-12-14 13:14:24] [[32minfo[39m] Executing (default): SELECT `id`, `username`, `email`, `password`, `firstname`, `lastname`, `gender`, `phone`, `birthday`, `address`, `userAvatar`, `createdAt`, `updatedAt` FROM `users` AS `users` WHERE `users`.`id` = '2';
[2021-12-14 13:14:24] [[32minfo[39m] Request status: [object Object] data [object SequelizeInstance:users]
[2021-12-14 13:14:24] [[32minfo[39m] Executing (default): SELECT `createdAt`, `updatedAt`, `userId`, `foodCategoryId` FROM `favoriteFoodCategories` AS `favoriteFoodCategories` WHERE `favoriteFoodCategories`.`userId` = 2;
[2021-12-14 13:14:24] [[32minfo[39m] Executing (default): SELECT `createdAt`, `updatedAt`, `userId`, `foodCategoryId` FROM `favoriteFoodCategories` AS `favoriteFoodCategories` WHERE `favoriteFoodCategories`.`userId` = '2';
[2021-12-14 13:14:24] [[32minfo[39m] Request status: [object Object] data [object SequelizeInstance:favoriteFoodCategories]
[2021-12-14 13:14:25] [[32minfo[39m] Executing (default): SELECT `id`, `username`, `email`, `password`, `firstname`, `lastname`, `gender`, `phone`, `birthday`, `address`, `userAvatar`, `createdAt`, `updatedAt` FROM `users` AS `users` WHERE `users`.`id` = '2';
[2021-12-14 13:14:25] [[32minfo[39m] Executing (default): SELECT `id`, `username`, `email`, `password`, `firstname`, `lastname`, `gender`, `phone`, `birthday`, `address`, `userAvatar`, `createdAt`, `updatedAt` FROM `users` AS `users` WHERE `users`.`id` = '2';
[2021-12-14 13:14:25] [[32minfo[39m] Request status: [object Object] data [object SequelizeInstance:users]
[2021-12-14 13:14:25] [[32minfo[39m] Executing (default): SELECT `createdAt`, `updatedAt`, `userId`, `foodCategoryId` FROM `favoriteFoodCategories` AS `favoriteFoodCategories` WHERE `favoriteFoodCategories`.`userId` = 2;
[2021-12-14 13:14:25] [[32minfo[39m] Request status: [object Object] data [object SequelizeInstance:users]
[2021-12-14 13:14:25] [[32minfo[39m] Executing (default): SELECT `createdAt`, `updatedAt`, `userId`, `foodCategoryId` FROM `favoriteFoodCategories` AS `favoriteFoodCategories` WHERE `favoriteFoodCategories`.`userId` = 2;
[2021-12-14 13:14:25] [[32minfo[39m] Executing (default): SELECT `id`, `foodName`, `foodDescription`, `foodCalories`, `foodImage`, `createdAt`, `updatedAt`, `foodCategoryId` FROM `foods` AS `foods` WHERE `foods`.`foodCategoryId` = 2 ORDER BY rand() LIMIT 3;
[2021-12-14 13:14:26] [[32minfo[39m] Executing (default): SELECT `createdAt`, `updatedAt`, `userId`, `foodCategoryId` FROM `favoriteFoodCategories` AS `favoriteFoodCategories` WHERE `favoriteFoodCategories`.`userId` = '2';
[2021-12-14 13:14:26] [[32minfo[39m] Request status: [object Object] Created!
[2021-12-14 13:14:26] [[32minfo[39m] Request status: [object Object] data [object SequelizeInstance:favoriteFoodCategories]
[2021-12-14 13:19:00] [[32minfo[39m] Executing (default): SELECT `id`, `username`, `email`, `password`, `firstname`, `lastname`, `gender`, `phone`, `birthday`, `address`, `userAvatar`, `createdAt`, `updatedAt` FROM `users` AS `users` WHERE `users`.`username` = 'phuctg2106';
[2021-12-14 13:19:01] [[32minfo[39m] Executing (default): SELECT `id`, `username`, `email`, `password`, `firstname`, `lastname`, `gender`, `phone`, `birthday`, `address`, `userAvatar`, `createdAt`, `updatedAt` FROM `users` AS `users` WHERE `users`.`id` = '2';
[2021-12-14 13:19:01] [[32minfo[39m] Request status: [object Object] data [object SequelizeInstance:users]
[2021-12-14 13:19:01] [[32minfo[39m] Executing (default): SELECT `createdAt`, `updatedAt`, `userId`, `foodCategoryId` FROM `favoriteFoodCategories` AS `favoriteFoodCategories` WHERE `favoriteFoodCategories`.`userId` = 2;
[2021-12-14 13:19:01] [[32minfo[39m] Executing (default): SELECT `createdAt`, `updatedAt`, `userId`, `foodCategoryId` FROM `favoriteFoodCategories` AS `favoriteFoodCategories` WHERE `favoriteFoodCategories`.`userId` = '2';
[2021-12-14 13:19:01] [[32minfo[39m] Request status: [object Object] data [object SequelizeInstance:favoriteFoodCategories]
[2021-12-14 13:19:03] [[32minfo[39m] Executing (default): SELECT `id`, `username`, `email`, `password`, `firstname`, `lastname`, `gender`, `phone`, `birthday`, `address`, `userAvatar`, `createdAt`, `updatedAt` FROM `users` AS `users` WHERE `users`.`id` = '2';
[2021-12-14 13:19:03] [[32minfo[39m] Request status: [object Object] data [object SequelizeInstance:users]
[2021-12-14 13:19:03] [[32minfo[39m] Executing (default): SELECT `createdAt`, `updatedAt`, `userId`, `foodCategoryId` FROM `favoriteFoodCategories` AS `favoriteFoodCategories` WHERE `favoriteFoodCategories`.`userId` = 2;
[2021-12-14 13:19:03] [[32minfo[39m] Executing (default): SELECT `id`, `username`, `email`, `password`, `firstname`, `lastname`, `gender`, `phone`, `birthday`, `address`, `userAvatar`, `createdAt`, `updatedAt` FROM `users` AS `users` WHERE `users`.`id` = '2';
[2021-12-14 13:19:03] [[32minfo[39m] Executing (default): SELECT `createdAt`, `updatedAt`, `userId`, `foodCategoryId` FROM `favoriteFoodCategories` AS `favoriteFoodCategories` WHERE `favoriteFoodCategories`.`userId` = '2';
[2021-12-14 13:19:03] [[32minfo[39m] Request status: [object Object] data [object SequelizeInstance:users]
[2021-12-14 13:19:03] [[32minfo[39m] Executing (default): SELECT `createdAt`, `updatedAt`, `userId`, `foodCategoryId` FROM `favoriteFoodCategories` AS `favoriteFoodCategories` WHERE `favoriteFoodCategories`.`userId` = 2;
[2021-12-14 13:19:03] [[32minfo[39m] Request status: [object Object] data [object SequelizeInstance:favoriteFoodCategories]
[2021-12-14 13:19:03] [[32minfo[39m] Executing (default): SELECT `id`, `foodName`, `foodDescription`, `foodCalories`, `foodImage`, `createdAt`, `updatedAt`, `foodCategoryId` FROM `foods` AS `foods` WHERE `foods`.`foodCategoryId` = 2 ORDER BY rand() LIMIT 3;
[2021-12-14 13:19:03] [[32minfo[39m] Request status: [object Object] Created!
[2021-12-14 13:21:47] [[32minfo[39m] Executing (default): SELECT `id`, `username`, `email`, `password`, `firstname`, `lastname`, `gender`, `phone`, `birthday`, `address`, `userAvatar`, `createdAt`, `updatedAt` FROM `users` AS `users` WHERE `users`.`username` = 'phuctg2106';
[2021-12-14 13:21:48] [[32minfo[39m] Executing (default): SELECT `id`, `username`, `email`, `password`, `firstname`, `lastname`, `gender`, `phone`, `birthday`, `address`, `userAvatar`, `createdAt`, `updatedAt` FROM `users` AS `users` WHERE `users`.`id` = '2';
[2021-12-14 13:21:48] [[32minfo[39m] Executing (default): SELECT `createdAt`, `updatedAt`, `userId`, `foodCategoryId` FROM `favoriteFoodCategories` AS `favoriteFoodCategories` WHERE `favoriteFoodCategories`.`userId` = '2';
[2021-12-14 13:21:48] [[32minfo[39m] Request status: [object Object] data [object SequelizeInstance:users]
[2021-12-14 13:21:48] [[32minfo[39m] Executing (default): SELECT `createdAt`, `updatedAt`, `userId`, `foodCategoryId` FROM `favoriteFoodCategories` AS `favoriteFoodCategories` WHERE `favoriteFoodCategories`.`userId` = 2;
[2021-12-14 13:21:48] [[32minfo[39m] Request status: [object Object] data [object SequelizeInstance:favoriteFoodCategories]
[2021-12-14 13:21:50] [[32minfo[39m] Executing (default): SELECT `id`, `username`, `email`, `password`, `firstname`, `lastname`, `gender`, `phone`, `birthday`, `address`, `userAvatar`, `createdAt`, `updatedAt` FROM `users` AS `users` WHERE `users`.`id` = '2';
[2021-12-14 13:21:50] [[32minfo[39m] Request status: [object Object] data [object SequelizeInstance:users]
[2021-12-14 13:21:50] [[32minfo[39m] Executing (default): SELECT `createdAt`, `updatedAt`, `userId`, `foodCategoryId` FROM `favoriteFoodCategories` AS `favoriteFoodCategories` WHERE `favoriteFoodCategories`.`userId` = 2;
[2021-12-14 13:21:50] [[32minfo[39m] Executing (default): SELECT `id`, `username`, `email`, `password`, `firstname`, `lastname`, `gender`, `phone`, `birthday`, `address`, `userAvatar`, `createdAt`, `updatedAt` FROM `users` AS `users` WHERE `users`.`id` = '2';
[2021-12-14 13:21:50] [[32minfo[39m] Executing (default): SELECT `createdAt`, `updatedAt`, `userId`, `foodCategoryId` FROM `favoriteFoodCategories` AS `favoriteFoodCategories` WHERE `favoriteFoodCategories`.`userId` = '2';
[2021-12-14 13:21:50] [[32minfo[39m] Executing (default): SELECT `id`, `foodName`, `foodDescription`, `foodCalories`, `foodImage`, `createdAt`, `updatedAt`, `foodCategoryId` FROM `foods` AS `foods` WHERE `foods`.`foodCategoryId` = 2 ORDER BY rand() LIMIT 3;
[2021-12-14 13:21:50] [[32minfo[39m] Request status: [object Object] data [object SequelizeInstance:favoriteFoodCategories]
[2021-12-14 13:21:50] [[32minfo[39m] Request status: [object Object] data [object SequelizeInstance:users]
[2021-12-14 13:21:50] [[32minfo[39m] Executing (default): SELECT `createdAt`, `updatedAt`, `userId`, `foodCategoryId` FROM `favoriteFoodCategories` AS `favoriteFoodCategories` WHERE `favoriteFoodCategories`.`userId` = 2;
[2021-12-14 13:21:50] [[32minfo[39m] Request status: [object Object] Created!
[2021-12-14 13:22:28] [[32minfo[39m] Executing (default): SELECT `id`, `username`, `email`, `password`, `firstname`, `lastname`, `gender`, `phone`, `birthday`, `address`, `userAvatar`, `createdAt`, `updatedAt` FROM `users` AS `users` WHERE `users`.`username` = 'phuctg2106';
[2021-12-14 13:22:28] [[32minfo[39m] Executing (default): SELECT `id`, `username`, `email`, `password`, `firstname`, `lastname`, `gender`, `phone`, `birthday`, `address`, `userAvatar`, `createdAt`, `updatedAt` FROM `users` AS `users` WHERE `users`.`id` = '2';
[2021-12-14 13:22:28] [[32minfo[39m] Executing (default): SELECT `createdAt`, `updatedAt`, `userId`, `foodCategoryId` FROM `favoriteFoodCategories` AS `favoriteFoodCategories` WHERE `favoriteFoodCategories`.`userId` = '2';
[2021-12-14 13:22:28] [[32minfo[39m] Request status: [object Object] data [object SequelizeInstance:users]
[2021-12-14 13:22:28] [[32minfo[39m] Executing (default): SELECT `createdAt`, `updatedAt`, `userId`, `foodCategoryId` FROM `favoriteFoodCategories` AS `favoriteFoodCategories` WHERE `favoriteFoodCategories`.`userId` = 2;
[2021-12-14 13:22:28] [[32minfo[39m] Request status: [object Object] data [object SequelizeInstance:favoriteFoodCategories]
[2021-12-14 13:22:33] [[32minfo[39m] Executing (default): SELECT `id`, `username`, `email`, `password`, `firstname`, `lastname`, `gender`, `phone`, `birthday`, `address`, `userAvatar`, `createdAt`, `updatedAt` FROM `users` AS `users` WHERE `users`.`id` = '2';
[2021-12-14 13:22:33] [[32minfo[39m] Request status: [object Object] data [object SequelizeInstance:users]
[2021-12-14 13:22:33] [[32minfo[39m] Executing (default): SELECT `createdAt`, `updatedAt`, `userId`, `foodCategoryId` FROM `favoriteFoodCategories` AS `favoriteFoodCategories` WHERE `favoriteFoodCategories`.`userId` = 2;
[2021-12-14 13:22:33] [[32minfo[39m] Executing (default): SELECT `id`, `username`, `email`, `password`, `firstname`, `lastname`, `gender`, `phone`, `birthday`, `address`, `userAvatar`, `createdAt`, `updatedAt` FROM `users` AS `users` WHERE `users`.`id` = '2';
[2021-12-14 13:22:33] [[32minfo[39m] Request status: [object Object] data [object SequelizeInstance:users]
[2021-12-14 13:22:33] [[32minfo[39m] Executing (default): SELECT `createdAt`, `updatedAt`, `userId`, `foodCategoryId` FROM `favoriteFoodCategories` AS `favoriteFoodCategories` WHERE `favoriteFoodCategories`.`userId` = 2;
[2021-12-14 13:22:33] [[32minfo[39m] Executing (default): SELECT `id`, `foodName`, `foodDescription`, `foodCalories`, `foodImage`, `createdAt`, `updatedAt`, `foodCategoryId` FROM `foods` AS `foods` WHERE `foods`.`foodCategoryId` = 2 ORDER BY rand() LIMIT 3;
[2021-12-14 13:22:33] [[32minfo[39m] Executing (default): SELECT `createdAt`, `updatedAt`, `userId`, `foodCategoryId` FROM `favoriteFoodCategories` AS `favoriteFoodCategories` WHERE `favoriteFoodCategories`.`userId` = '2';
[2021-12-14 13:22:33] [[32minfo[39m] Request status: [object Object] Created!
[2021-12-14 13:22:33] [[32minfo[39m] Request status: [object Object] data [object SequelizeInstance:favoriteFoodCategories]
[2021-12-14 13:22:35] [[32minfo[39m] Executing (default): SELECT `id`, `username`, `email`, `password`, `firstname`, `lastname`, `gender`, `phone`, `birthday`, `address`, `userAvatar`, `createdAt`, `updatedAt` FROM `users` AS `users` WHERE `users`.`id` = '2';
[2021-12-14 13:22:35] [[32minfo[39m] Executing (default): SELECT `id`, `foodName`, `foodDescription`, `foodCalories`, `foodImage`, `createdAt`, `updatedAt`, `foodCategoryId` FROM `foods` AS `foods` WHERE `foods`.`foodCategoryId` = 2 ORDER BY rand() LIMIT 3;
[2021-12-14 13:22:35] [[32minfo[39m] Executing (default): SELECT `createdAt`, `updatedAt`, `userId`, `foodCategoryId` FROM `favoriteFoodCategories` AS `favoriteFoodCategories` WHERE `favoriteFoodCategories`.`userId` = '2';
[2021-12-14 13:22:35] [[32minfo[39m] Request status: [object Object] data [object SequelizeInstance:users]
[2021-12-14 13:22:35] [[32minfo[39m] Executing (default): SELECT `createdAt`, `updatedAt`, `userId`, `foodCategoryId` FROM `favoriteFoodCategories` AS `favoriteFoodCategories` WHERE `favoriteFoodCategories`.`userId` = 2;
[2021-12-14 13:22:35] [[32minfo[39m] Request status: [object Object] Created!
[2021-12-14 13:22:35] [[32minfo[39m] Request status: [object Object] data [object SequelizeInstance:favoriteFoodCategories]
[2021-12-14 13:22:36] [[32minfo[39m] Executing (default): SELECT `id`, `username`, `email`, `password`, `firstname`, `lastname`, `gender`, `phone`, `birthday`, `address`, `userAvatar`, `createdAt`, `updatedAt` FROM `users` AS `users` WHERE `users`.`id` = '2';
[2021-12-14 13:22:36] [[32minfo[39m] Executing (default): SELECT `createdAt`, `updatedAt`, `userId`, `foodCategoryId` FROM `favoriteFoodCategories` AS `favoriteFoodCategories` WHERE `favoriteFoodCategories`.`userId` = '2';
[2021-12-14 13:22:36] [[32minfo[39m] Executing (default): SELECT `id`, `foodName`, `foodDescription`, `foodCalories`, `foodImage`, `createdAt`, `updatedAt`, `foodCategoryId` FROM `foods` AS `foods` WHERE `foods`.`foodCategoryId` = 2 ORDER BY rand() LIMIT 3;
[2021-12-14 13:22:36] [[32minfo[39m] Request status: [object Object] data [object SequelizeInstance:users]
[2021-12-14 13:22:36] [[32minfo[39m] Executing (default): SELECT `createdAt`, `updatedAt`, `userId`, `foodCategoryId` FROM `favoriteFoodCategories` AS `favoriteFoodCategories` WHERE `favoriteFoodCategories`.`userId` = 2;
[2021-12-14 13:22:36] [[32minfo[39m] Request status: [object Object] data [object SequelizeInstance:favoriteFoodCategories]
[2021-12-14 13:22:36] [[32minfo[39m] Request status: [object Object] Created!
[2021-12-14 13:23:45] [[32minfo[39m] Executing (default): SELECT `id`, `username`, `email`, `password`, `firstname`, `lastname`, `gender`, `phone`, `birthday`, `address`, `userAvatar`, `createdAt`, `updatedAt` FROM `users` AS `users` WHERE `users`.`username` = 'phuctg2106';
[2021-12-14 13:23:45] [[32minfo[39m] Executing (default): SELECT `id`, `username`, `email`, `password`, `firstname`, `lastname`, `gender`, `phone`, `birthday`, `address`, `userAvatar`, `createdAt`, `updatedAt` FROM `users` AS `users` WHERE `users`.`id` = '2';
[2021-12-14 13:23:45] [[32minfo[39m] Executing (default): SELECT `createdAt`, `updatedAt`, `userId`, `foodCategoryId` FROM `favoriteFoodCategories` AS `favoriteFoodCategories` WHERE `favoriteFoodCategories`.`userId` = '2';
[2021-12-14 13:23:45] [[32minfo[39m] Request status: [object Object] data [object SequelizeInstance:users]
[2021-12-14 13:23:45] [[32minfo[39m] Executing (default): SELECT `createdAt`, `updatedAt`, `userId`, `foodCategoryId` FROM `favoriteFoodCategories` AS `favoriteFoodCategories` WHERE `favoriteFoodCategories`.`userId` = 2;
[2021-12-14 13:23:45] [[32minfo[39m] Request status: [object Object] data [object SequelizeInstance:favoriteFoodCategories]
[2021-12-14 13:23:46] [[32minfo[39m] Executing (default): SELECT `id`, `username`, `email`, `password`, `firstname`, `lastname`, `gender`, `phone`, `birthday`, `address`, `userAvatar`, `createdAt`, `updatedAt` FROM `users` AS `users` WHERE `users`.`id` = '2';
[2021-12-14 13:23:46] [[32minfo[39m] Request status: [object Object] data [object SequelizeInstance:users]
[2021-12-14 13:23:46] [[32minfo[39m] Executing (default): SELECT `createdAt`, `updatedAt`, `userId`, `foodCategoryId` FROM `favoriteFoodCategories` AS `favoriteFoodCategories` WHERE `favoriteFoodCategories`.`userId` = 2;
[2021-12-14 13:23:46] [[32minfo[39m] Executing (default): SELECT `id`, `username`, `email`, `password`, `firstname`, `lastname`, `gender`, `phone`, `birthday`, `address`, `userAvatar`, `createdAt`, `updatedAt` FROM `users` AS `users` WHERE `users`.`id` = '2';
[2021-12-14 13:23:46] [[32minfo[39m] Executing (default): SELECT `id`, `foodName`, `foodDescription`, `foodCalories`, `foodImage`, `createdAt`, `updatedAt`, `foodCategoryId` FROM `foods` AS `foods` WHERE `foods`.`foodCategoryId` = 2 ORDER BY rand() LIMIT 3;
[2021-12-14 13:23:46] [[32minfo[39m] Request status: [object Object] data [object SequelizeInstance:users]
[2021-12-14 13:23:46] [[32minfo[39m] Executing (default): SELECT `createdAt`, `updatedAt`, `userId`, `foodCategoryId` FROM `favoriteFoodCategories` AS `favoriteFoodCategories` WHERE `favoriteFoodCategories`.`userId` = 2;
[2021-12-14 13:23:46] [[32minfo[39m] Request status: [object Object] Created!
[2021-12-14 13:23:46] [[32minfo[39m] Executing (default): SELECT `createdAt`, `updatedAt`, `userId`, `foodCategoryId` FROM `favoriteFoodCategories` AS `favoriteFoodCategories` WHERE `favoriteFoodCategories`.`userId` = '2';
[2021-12-14 13:23:46] [[32minfo[39m] Request status: [object Object] data [object SequelizeInstance:favoriteFoodCategories]
[2021-12-14 13:24:33] [[32minfo[39m] Executing (default): SELECT `id`, `username`, `email`, `password`, `firstname`, `lastname`, `gender`, `phone`, `birthday`, `address`, `userAvatar`, `createdAt`, `updatedAt` FROM `users` AS `users` WHERE `users`.`username` = 'phuctg2106';
[2021-12-14 13:24:33] [[32minfo[39m] Executing (default): SELECT `id`, `username`, `email`, `password`, `firstname`, `lastname`, `gender`, `phone`, `birthday`, `address`, `userAvatar`, `createdAt`, `updatedAt` FROM `users` AS `users` WHERE `users`.`id` = '2';
[2021-12-14 13:24:33] [[32minfo[39m] Request status: [object Object] data [object SequelizeInstance:users]
[2021-12-14 13:24:33] [[32minfo[39m] Executing (default): SELECT `createdAt`, `updatedAt`, `userId`, `foodCategoryId` FROM `favoriteFoodCategories` AS `favoriteFoodCategories` WHERE `favoriteFoodCategories`.`userId` = 2;
[2021-12-14 13:24:33] [[32minfo[39m] Executing (default): SELECT `createdAt`, `updatedAt`, `userId`, `foodCategoryId` FROM `favoriteFoodCategories` AS `favoriteFoodCategories` WHERE `favoriteFoodCategories`.`userId` = '2';
[2021-12-14 13:24:33] [[32minfo[39m] Request status: [object Object] data [object SequelizeInstance:favoriteFoodCategories]
[2021-12-14 13:24:35] [[32minfo[39m] Executing (default): SELECT `id`, `username`, `email`, `password`, `firstname`, `lastname`, `gender`, `phone`, `birthday`, `address`, `userAvatar`, `createdAt`, `updatedAt` FROM `users` AS `users` WHERE `users`.`id` = '2';
[2021-12-14 13:24:35] [[32minfo[39m] Request status: [object Object] data [object SequelizeInstance:users]
[2021-12-14 13:24:35] [[32minfo[39m] Executing (default): SELECT `createdAt`, `updatedAt`, `userId`, `foodCategoryId` FROM `favoriteFoodCategories` AS `favoriteFoodCategories` WHERE `favoriteFoodCategories`.`userId` = 2;
[2021-12-14 13:24:35] [[32minfo[39m] Executing (default): SELECT `id`, `username`, `email`, `password`, `firstname`, `lastname`, `gender`, `phone`, `birthday`, `address`, `userAvatar`, `createdAt`, `updatedAt` FROM `users` AS `users` WHERE `users`.`id` = '2';
[2021-12-14 13:24:35] [[32minfo[39m] Executing (default): SELECT `id`, `foodName`, `foodDescription`, `foodCalories`, `foodImage`, `createdAt`, `updatedAt`, `foodCategoryId` FROM `foods` AS `foods` WHERE `foods`.`foodCategoryId` = 2 ORDER BY rand() LIMIT 3;
[2021-12-14 13:24:35] [[32minfo[39m] Executing (default): SELECT `createdAt`, `updatedAt`, `userId`, `foodCategoryId` FROM `favoriteFoodCategories` AS `favoriteFoodCategories` WHERE `favoriteFoodCategories`.`userId` = '2';
[2021-12-14 13:24:35] [[32minfo[39m] Request status: [object Object] Created!
[2021-12-14 13:24:35] [[32minfo[39m] Request status: [object Object] data [object SequelizeInstance:favoriteFoodCategories]
[2021-12-14 13:24:35] [[32minfo[39m] Request status: [object Object] data [object SequelizeInstance:users]
[2021-12-14 13:24:35] [[32minfo[39m] Executing (default): SELECT `createdAt`, `updatedAt`, `userId`, `foodCategoryId` FROM `favoriteFoodCategories` AS `favoriteFoodCategories` WHERE `favoriteFoodCategories`.`userId` = 2;
[2021-12-14 13:25:20] [[32minfo[39m] Executing (default): SELECT `id`, `username`, `email`, `password`, `firstname`, `lastname`, `gender`, `phone`, `birthday`, `address`, `userAvatar`, `createdAt`, `updatedAt` FROM `users` AS `users` WHERE `users`.`username` = 'phuctg2106';
[2021-12-14 13:25:20] [[32minfo[39m] Executing (default): SELECT `id`, `username`, `email`, `password`, `firstname`, `lastname`, `gender`, `phone`, `birthday`, `address`, `userAvatar`, `createdAt`, `updatedAt` FROM `users` AS `users` WHERE `users`.`id` = '2';
[2021-12-14 13:25:20] [[32minfo[39m] Executing (default): SELECT `createdAt`, `updatedAt`, `userId`, `foodCategoryId` FROM `favoriteFoodCategories` AS `favoriteFoodCategories` WHERE `favoriteFoodCategories`.`userId` = '2';
[2021-12-14 13:25:20] [[32minfo[39m] Request status: [object Object] data [object SequelizeInstance:users]
[2021-12-14 13:25:20] [[32minfo[39m] Executing (default): SELECT `createdAt`, `updatedAt`, `userId`, `foodCategoryId` FROM `favoriteFoodCategories` AS `favoriteFoodCategories` WHERE `favoriteFoodCategories`.`userId` = 2;
[2021-12-14 13:25:20] [[32minfo[39m] Request status: [object Object] data [object SequelizeInstance:favoriteFoodCategories]
[2021-12-14 13:25:22] [[32minfo[39m] Executing (default): SELECT `id`, `username`, `email`, `password`, `firstname`, `lastname`, `gender`, `phone`, `birthday`, `address`, `userAvatar`, `createdAt`, `updatedAt` FROM `users` AS `users` WHERE `users`.`id` = '2';
[2021-12-14 13:25:22] [[32minfo[39m] Request status: [object Object] data [object SequelizeInstance:users]
[2021-12-14 13:25:22] [[32minfo[39m] Executing (default): SELECT `createdAt`, `updatedAt`, `userId`, `foodCategoryId` FROM `favoriteFoodCategories` AS `favoriteFoodCategories` WHERE `favoriteFoodCategories`.`userId` = 2;
[2021-12-14 13:25:22] [[32minfo[39m] Executing (default): SELECT `id`, `username`, `email`, `password`, `firstname`, `lastname`, `gender`, `phone`, `birthday`, `address`, `userAvatar`, `createdAt`, `updatedAt` FROM `users` AS `users` WHERE `users`.`id` = '2';
[2021-12-14 13:25:22] [[32minfo[39m] Request status: [object Object] data [object SequelizeInstance:users]
[2021-12-14 13:25:22] [[32minfo[39m] Executing (default): SELECT `createdAt`, `updatedAt`, `userId`, `foodCategoryId` FROM `favoriteFoodCategories` AS `favoriteFoodCategories` WHERE `favoriteFoodCategories`.`userId` = 2;
[2021-12-14 13:25:22] [[32minfo[39m] Executing (default): SELECT `id`, `foodName`, `foodDescription`, `foodCalories`, `foodImage`, `createdAt`, `updatedAt`, `foodCategoryId` FROM `foods` AS `foods` WHERE `foods`.`foodCategoryId` = 2 ORDER BY rand() LIMIT 3;
[2021-12-14 13:25:22] [[32minfo[39m] Executing (default): SELECT `createdAt`, `updatedAt`, `userId`, `foodCategoryId` FROM `favoriteFoodCategories` AS `favoriteFoodCategories` WHERE `favoriteFoodCategories`.`userId` = '2';
[2021-12-14 13:25:22] [[32minfo[39m] Request status: [object Object] Created!
[2021-12-14 13:25:22] [[32minfo[39m] Request status: [object Object] data [object SequelizeInstance:favoriteFoodCategories]
[2021-12-14 13:26:28] [[32minfo[39m] Executing (default): SELECT `id`, `username`, `email`, `password`, `firstname`, `lastname`, `gender`, `phone`, `birthday`, `address`, `userAvatar`, `createdAt`, `updatedAt` FROM `users` AS `users` WHERE `users`.`username` = 'phuctg2106';
[2021-12-14 13:26:28] [[32minfo[39m] Executing (default): SELECT `id`, `username`, `email`, `password`, `firstname`, `lastname`, `gender`, `phone`, `birthday`, `address`, `userAvatar`, `createdAt`, `updatedAt` FROM `users` AS `users` WHERE `users`.`id` = '2';
[2021-12-14 13:26:28] [[32minfo[39m] Executing (default): SELECT `createdAt`, `updatedAt`, `userId`, `foodCategoryId` FROM `favoriteFoodCategories` AS `favoriteFoodCategories` WHERE `favoriteFoodCategories`.`userId` = '2';
[2021-12-14 13:26:28] [[32minfo[39m] Request status: [object Object] data [object SequelizeInstance:users]
[2021-12-14 13:26:28] [[32minfo[39m] Executing (default): SELECT `createdAt`, `updatedAt`, `userId`, `foodCategoryId` FROM `favoriteFoodCategories` AS `favoriteFoodCategories` WHERE `favoriteFoodCategories`.`userId` = 2;
[2021-12-14 13:26:28] [[32minfo[39m] Request status: [object Object] data [object SequelizeInstance:favoriteFoodCategories]
[2021-12-14 13:26:30] [[32minfo[39m] Executing (default): SELECT `id`, `username`, `email`, `password`, `firstname`, `lastname`, `gender`, `phone`, `birthday`, `address`, `userAvatar`, `createdAt`, `updatedAt` FROM `users` AS `users` WHERE `users`.`id` = '2';
[2021-12-14 13:26:30] [[32minfo[39m] Request status: [object Object] data [object SequelizeInstance:users]
[2021-12-14 13:26:30] [[32minfo[39m] Executing (default): SELECT `createdAt`, `updatedAt`, `userId`, `foodCategoryId` FROM `favoriteFoodCategories` AS `favoriteFoodCategories` WHERE `favoriteFoodCategories`.`userId` = 2;
[2021-12-14 13:26:30] [[32minfo[39m] Executing (default): SELECT `id`, `username`, `email`, `password`, `firstname`, `lastname`, `gender`, `phone`, `birthday`, `address`, `userAvatar`, `createdAt`, `updatedAt` FROM `users` AS `users` WHERE `users`.`id` = '2';
[2021-12-14 13:26:30] [[32minfo[39m] Executing (default): SELECT `createdAt`, `updatedAt`, `userId`, `foodCategoryId` FROM `favoriteFoodCategories` AS `favoriteFoodCategories` WHERE `favoriteFoodCategories`.`userId` = '2';
[2021-12-14 13:26:30] [[32minfo[39m] Executing (default): SELECT `id`, `foodName`, `foodDescription`, `foodCalories`, `foodImage`, `createdAt`, `updatedAt`, `foodCategoryId` FROM `foods` AS `foods` WHERE `foods`.`foodCategoryId` = 2 ORDER BY rand() LIMIT 3;
[2021-12-14 13:26:30] [[32minfo[39m] Request status: [object Object] data [object SequelizeInstance:users]
[2021-12-14 13:26:30] [[32minfo[39m] Executing (default): SELECT `createdAt`, `updatedAt`, `userId`, `foodCategoryId` FROM `favoriteFoodCategories` AS `favoriteFoodCategories` WHERE `favoriteFoodCategories`.`userId` = 2;
[2021-12-14 13:26:30] [[32minfo[39m] Request status: [object Object] Created!
[2021-12-14 13:26:30] [[32minfo[39m] Request status: [object Object] data [object SequelizeInstance:favoriteFoodCategories]
[2021-12-14 13:26:52] [[32minfo[39m] Executing (default): SELECT `id`, `username`, `email`, `password`, `firstname`, `lastname`, `gender`, `phone`, `birthday`, `address`, `userAvatar`, `createdAt`, `updatedAt` FROM `users` AS `users` WHERE `users`.`username` = 'phuctg2106';
[2021-12-14 13:26:52] [[32minfo[39m] Executing (default): SELECT `id`, `username`, `email`, `password`, `firstname`, `lastname`, `gender`, `phone`, `birthday`, `address`, `userAvatar`, `createdAt`, `updatedAt` FROM `users` AS `users` WHERE `users`.`id` = '2';
[2021-12-14 13:26:52] [[32minfo[39m] Executing (default): SELECT `createdAt`, `updatedAt`, `userId`, `foodCategoryId` FROM `favoriteFoodCategories` AS `favoriteFoodCategories` WHERE `favoriteFoodCategories`.`userId` = '2';
[2021-12-14 13:26:52] [[32minfo[39m] Request status: [object Object] data [object SequelizeInstance:users]
[2021-12-14 13:26:52] [[32minfo[39m] Executing (default): SELECT `createdAt`, `updatedAt`, `userId`, `foodCategoryId` FROM `favoriteFoodCategories` AS `favoriteFoodCategories` WHERE `favoriteFoodCategories`.`userId` = 2;
[2021-12-14 13:26:52] [[32minfo[39m] Request status: [object Object] data [object SequelizeInstance:favoriteFoodCategories]
[2021-12-14 13:26:54] [[32minfo[39m] Executing (default): SELECT `id`, `username`, `email`, `password`, `firstname`, `lastname`, `gender`, `phone`, `birthday`, `address`, `userAvatar`, `createdAt`, `updatedAt` FROM `users` AS `users` WHERE `users`.`id` = '2';
[2021-12-14 13:26:54] [[32minfo[39m] Request status: [object Object] data [object SequelizeInstance:users]
[2021-12-14 13:26:54] [[32minfo[39m] Executing (default): SELECT `createdAt`, `updatedAt`, `userId`, `foodCategoryId` FROM `favoriteFoodCategories` AS `favoriteFoodCategories` WHERE `favoriteFoodCategories`.`userId` = 2;
[2021-12-14 13:26:54] [[32minfo[39m] Executing (default): SELECT `id`, `username`, `email`, `password`, `firstname`, `lastname`, `gender`, `phone`, `birthday`, `address`, `userAvatar`, `createdAt`, `updatedAt` FROM `users` AS `users` WHERE `users`.`id` = '2';
[2021-12-14 13:26:54] [[32minfo[39m] Executing (default): SELECT `createdAt`, `updatedAt`, `userId`, `foodCategoryId` FROM `favoriteFoodCategories` AS `favoriteFoodCategories` WHERE `favoriteFoodCategories`.`userId` = '2';
[2021-12-14 13:26:54] [[32minfo[39m] Executing (default): SELECT `id`, `foodName`, `foodDescription`, `foodCalories`, `foodImage`, `createdAt`, `updatedAt`, `foodCategoryId` FROM `foods` AS `foods` WHERE `foods`.`foodCategoryId` = 2 ORDER BY rand() LIMIT 3;
[2021-12-14 13:26:54] [[32minfo[39m] Request status: [object Object] data [object SequelizeInstance:favoriteFoodCategories]
[2021-12-14 13:26:54] [[32minfo[39m] Request status: [object Object] data [object SequelizeInstance:users]
[2021-12-14 13:26:54] [[32minfo[39m] Executing (default): SELECT `createdAt`, `updatedAt`, `userId`, `foodCategoryId` FROM `favoriteFoodCategories` AS `favoriteFoodCategories` WHERE `favoriteFoodCategories`.`userId` = 2;
[2021-12-14 13:26:54] [[32minfo[39m] Request status: [object Object] Created!
[2021-12-14 13:27:39] [[32minfo[39m] Executing (default): SELECT `id`, `username`, `email`, `password`, `firstname`, `lastname`, `gender`, `phone`, `birthday`, `address`, `userAvatar`, `createdAt`, `updatedAt` FROM `users` AS `users` WHERE `users`.`username` = 'phuctg2106';
[2021-12-14 13:27:39] [[32minfo[39m] Executing (default): SELECT `id`, `username`, `email`, `password`, `firstname`, `lastname`, `gender`, `phone`, `birthday`, `address`, `userAvatar`, `createdAt`, `updatedAt` FROM `users` AS `users` WHERE `users`.`id` = '2';
[2021-12-14 13:27:39] [[32minfo[39m] Executing (default): SELECT `createdAt`, `updatedAt`, `userId`, `foodCategoryId` FROM `favoriteFoodCategories` AS `favoriteFoodCategories` WHERE `favoriteFoodCategories`.`userId` = '2';
[2021-12-14 13:27:39] [[32minfo[39m] Request status: [object Object] data [object SequelizeInstance:favoriteFoodCategories]
[2021-12-14 13:27:39] [[32minfo[39m] Request status: [object Object] data [object SequelizeInstance:users]
[2021-12-14 13:27:39] [[32minfo[39m] Executing (default): SELECT `createdAt`, `updatedAt`, `userId`, `foodCategoryId` FROM `favoriteFoodCategories` AS `favoriteFoodCategories` WHERE `favoriteFoodCategories`.`userId` = 2;
[2021-12-14 13:27:41] [[32minfo[39m] Executing (default): SELECT `id`, `username`, `email`, `password`, `firstname`, `lastname`, `gender`, `phone`, `birthday`, `address`, `userAvatar`, `createdAt`, `updatedAt` FROM `users` AS `users` WHERE `users`.`id` = '2';
[2021-12-14 13:27:41] [[32minfo[39m] Request status: [object Object] data [object SequelizeInstance:users]
[2021-12-14 13:27:41] [[32minfo[39m] Executing (default): SELECT `createdAt`, `updatedAt`, `userId`, `foodCategoryId` FROM `favoriteFoodCategories` AS `favoriteFoodCategories` WHERE `favoriteFoodCategories`.`userId` = 2;
[2021-12-14 13:27:41] [[32minfo[39m] Executing (default): SELECT `id`, `username`, `email`, `password`, `firstname`, `lastname`, `gender`, `phone`, `birthday`, `address`, `userAvatar`, `createdAt`, `updatedAt` FROM `users` AS `users` WHERE `users`.`id` = '2';
[2021-12-14 13:27:41] [[32minfo[39m] Executing (default): SELECT `id`, `foodName`, `foodDescription`, `foodCalories`, `foodImage`, `createdAt`, `updatedAt`, `foodCategoryId` FROM `foods` AS `foods` WHERE `foods`.`foodCategoryId` = 2 ORDER BY rand() LIMIT 3;
[2021-12-14 13:27:41] [[32minfo[39m] Request status: [object Object] data [object SequelizeInstance:users]
[2021-12-14 13:27:41] [[32minfo[39m] Executing (default): SELECT `createdAt`, `updatedAt`, `userId`, `foodCategoryId` FROM `favoriteFoodCategories` AS `favoriteFoodCategories` WHERE `favoriteFoodCategories`.`userId` = 2;
[2021-12-14 13:27:41] [[32minfo[39m] Executing (default): SELECT `createdAt`, `updatedAt`, `userId`, `foodCategoryId` FROM `favoriteFoodCategories` AS `favoriteFoodCategories` WHERE `favoriteFoodCategories`.`userId` = '2';
[2021-12-14 13:27:41] [[32minfo[39m] Request status: [object Object] Created!
[2021-12-14 13:27:41] [[32minfo[39m] Request status: [object Object] data [object SequelizeInstance:favoriteFoodCategories]
[2021-12-14 13:28:01] [[32minfo[39m] Executing (default): SELECT `id`, `foodName`, `foodDescription`, `foodCalories`, `foodImage`, `createdAt`, `updatedAt`, `foodCategoryId` FROM `foods` AS `foods` WHERE `foods`.`foodCategoryId` = 2 ORDER BY rand() LIMIT 3;
[2021-12-14 13:28:01] [[32minfo[39m] Executing (default): SELECT `id`, `username`, `email`, `password`, `firstname`, `lastname`, `gender`, `phone`, `birthday`, `address`, `userAvatar`, `createdAt`, `updatedAt` FROM `users` AS `users` WHERE `users`.`id` = '2';
[2021-12-14 13:28:01] [[32minfo[39m] Executing (default): SELECT `createdAt`, `updatedAt`, `userId`, `foodCategoryId` FROM `favoriteFoodCategories` AS `favoriteFoodCategories` WHERE `favoriteFoodCategories`.`userId` = '2';
[2021-12-14 13:28:01] [[32minfo[39m] Request status: [object Object] Created!
[2021-12-14 13:28:01] [[32minfo[39m] Request status: [object Object] data [object SequelizeInstance:users]
[2021-12-14 13:28:01] [[32minfo[39m] Executing (default): SELECT `createdAt`, `updatedAt`, `userId`, `foodCategoryId` FROM `favoriteFoodCategories` AS `favoriteFoodCategories` WHERE `favoriteFoodCategories`.`userId` = 2;
[2021-12-14 13:28:01] [[32minfo[39m] Request status: [object Object] data [object SequelizeInstance:favoriteFoodCategories]
[2021-12-14 13:28:04] [[32minfo[39m] Executing (default): SELECT `id`, `username`, `email`, `password`, `firstname`, `lastname`, `gender`, `phone`, `birthday`, `address`, `userAvatar`, `createdAt`, `updatedAt` FROM `users` AS `users` WHERE `users`.`id` = '2';
[2021-12-14 13:28:04] [[32minfo[39m] Request status: [object Object] data [object SequelizeInstance:users]
[2021-12-14 13:28:04] [[32minfo[39m] Executing (default): SELECT `createdAt`, `updatedAt`, `userId`, `foodCategoryId` FROM `favoriteFoodCategories` AS `favoriteFoodCategories` WHERE `favoriteFoodCategories`.`userId` = 2;
[2021-12-14 13:28:04] [[32minfo[39m] Executing (default): SELECT `createdAt`, `updatedAt`, `userId`, `foodCategoryId` FROM `favoriteFoodCategories` AS `favoriteFoodCategories` WHERE `favoriteFoodCategories`.`userId` = '2';
[2021-12-14 13:28:04] [[32minfo[39m] Executing (default): SELECT `id`, `foodName`, `foodDescription`, `foodCalories`, `foodImage`, `createdAt`, `updatedAt`, `foodCategoryId` FROM `foods` AS `foods` WHERE `foods`.`foodCategoryId` = 2 ORDER BY rand() LIMIT 3;
[2021-12-14 13:28:04] [[32minfo[39m] Request status: [object Object] data [object SequelizeInstance:favoriteFoodCategories]
[2021-12-14 13:28:04] [[32minfo[39m] Request status: [object Object] Created!
[2021-12-14 13:39:50] [[32minfo[39m] Server is running on port 8080
[2021-12-14 13:39:50] [[32minfo[39m] Executing (default): DROP TABLE IF EXISTS `user_roles`;
[2021-12-14 13:39:50] [[32minfo[39m] Executing (default): DROP TABLE IF EXISTS `marketNotes`;
[2021-12-14 13:39:50] [[32minfo[39m] Executing (default): DROP TABLE IF EXISTS `address-villages`;
[2021-12-14 13:39:50] [[32minfo[39m] Executing (default): DROP TABLE IF EXISTS `address-districts`;
[2021-12-14 13:39:50] [[32minfo[39m] Executing (default): DROP TABLE IF EXISTS `address-provinces`;
[2021-12-14 13:39:50] [[32minfo[39m] Executing (default): DROP TABLE IF EXISTS `favoriteFoodCategories`;
[2021-12-14 13:39:50] [[32minfo[39m] Executing (default): DROP TABLE IF EXISTS `orderDetails`;
[2021-12-14 13:39:50] [[32minfo[39m] Executing (default): DROP TABLE IF EXISTS `orders`;
[2021-12-14 13:39:51] [[32minfo[39m] Executing (default): DROP TABLE IF EXISTS `paymentMethods`;
[2021-12-14 13:39:51] [[32minfo[39m] Executing (default): DROP TABLE IF EXISTS `deliveryMethods`;
[2021-12-14 13:39:51] [[32minfo[39m] Executing (default): DROP TABLE IF EXISTS `cartDetails`;
[2021-12-14 13:39:51] [[32minfo[39m] Executing (default): DROP TABLE IF EXISTS `carts`;
[2021-12-14 13:39:51] [[32minfo[39m] Executing (default): DROP TABLE IF EXISTS `foodCookSteps`;
[2021-12-14 13:39:51] [[32minfo[39m] Executing (default): DROP TABLE IF EXISTS `foodMaterials`;
[2021-12-14 13:39:51] [[32minfo[39m] Executing (default): DROP TABLE IF EXISTS `products`;
[2021-12-14 13:39:51] [[32minfo[39m] Executing (default): DROP TABLE IF EXISTS `quantities`;
[2021-12-14 13:39:51] [[32minfo[39m] Executing (default): DROP TABLE IF EXISTS `productCategories`;
[2021-12-14 13:39:51] [[32minfo[39m] Executing (default): DROP TABLE IF EXISTS `foods`;
[2021-12-14 13:39:51] [[32minfo[39m] Executing (default): DROP TABLE IF EXISTS `foodCategories`;
[2021-12-14 13:39:51] [[32minfo[39m] Executing (default): DROP TABLE IF EXISTS `roles`;
[2021-12-14 13:39:51] [[32minfo[39m] Executing (default): DROP TABLE IF EXISTS `users`;
[2021-12-14 13:39:51] [[32minfo[39m] Executing (default): DROP TABLE IF EXISTS `users`;
[2021-12-14 13:39:51] [[32minfo[39m] Executing (default): CREATE TABLE IF NOT EXISTS `users` (`id` INTEGER NOT NULL auto_increment , `username` VARCHAR(255) UNIQUE, `email` VARCHAR(255) UNIQUE, `password` VARCHAR(255), `firstname` VARCHAR(255), `lastname` VARCHAR(255), `gender` VARCHAR(255), `phone` VARCHAR(255), `birthday` DATE, `address` VARCHAR(255), `userAvatar` VARCHAR(255), `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, PRIMARY KEY (`id`)) ENGINE=InnoDB;
[2021-12-14 13:39:52] [[32minfo[39m] Executing (default): SHOW INDEX FROM `users`
[2021-12-14 13:39:52] [[32minfo[39m] Executing (default): DROP TABLE IF EXISTS `roles`;
[2021-12-14 13:39:52] [[32minfo[39m] Executing (default): CREATE TABLE IF NOT EXISTS `roles` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255), `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, PRIMARY KEY (`id`)) ENGINE=InnoDB;
[2021-12-14 13:39:52] [[32minfo[39m] Executing (default): SHOW INDEX FROM `roles`
[2021-12-14 13:39:52] [[32minfo[39m] Executing (default): DROP TABLE IF EXISTS `foodCategories`;
[2021-12-14 13:39:52] [[32minfo[39m] Executing (default): CREATE TABLE IF NOT EXISTS `foodCategories` (`id` INTEGER NOT NULL auto_increment , `catName` VARCHAR(255), `catIcon` VARCHAR(255), `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, PRIMARY KEY (`id`)) ENGINE=InnoDB;
[2021-12-14 13:39:52] [[32minfo[39m] Executing (default): SHOW INDEX FROM `foodCategories`
[2021-12-14 13:39:52] [[32minfo[39m] Executing (default): DROP TABLE IF EXISTS `foods`;
[2021-12-14 13:39:52] [[32minfo[39m] Executing (default): CREATE TABLE IF NOT EXISTS `foods` (`id` INTEGER NOT NULL auto_increment , `foodName` VARCHAR(255), `foodDescription` VARCHAR(255), `foodCalories` FLOAT, `foodImage` VARCHAR(255), `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, `foodCategoryId` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`foodCategoryId`) REFERENCES `foodCategories` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;
[2021-12-14 13:39:52] [[32minfo[39m] Executing (default): SHOW INDEX FROM `foods`
[2021-12-14 13:39:52] [[32minfo[39m] Executing (default): ALTER TABLE `foods` ADD FULLTEXT INDEX `food_index` (`foodName`)
[2021-12-14 13:39:53] [[32minfo[39m] Executing (default): DROP TABLE IF EXISTS `productCategories`;
[2021-12-14 13:39:53] [[32minfo[39m] Executing (default): CREATE TABLE IF NOT EXISTS `productCategories` (`id` INTEGER NOT NULL auto_increment , `catName` VARCHAR(255), `catIcon` VARCHAR(255), `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, PRIMARY KEY (`id`)) ENGINE=InnoDB;
[2021-12-14 13:39:53] [[32minfo[39m] Executing (default): SHOW INDEX FROM `productCategories`
[2021-12-14 13:39:53] [[32minfo[39m] Executing (default): DROP TABLE IF EXISTS `quantities`;
[2021-12-14 13:39:53] [[32minfo[39m] Executing (default): CREATE TABLE IF NOT EXISTS `quantities` (`id` INTEGER NOT NULL auto_increment , `quantityName` VARCHAR(255), `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, PRIMARY KEY (`id`)) ENGINE=InnoDB;
[2021-12-14 13:39:53] [[32minfo[39m] Executing (default): SHOW INDEX FROM `quantities`
[2021-12-14 13:39:53] [[32minfo[39m] Executing (default): DROP TABLE IF EXISTS `products`;
[2021-12-14 13:39:53] [[32minfo[39m] Executing (default): CREATE TABLE IF NOT EXISTS `products` (`id` INTEGER NOT NULL auto_increment , `proName` VARCHAR(255), `proDescription` VARCHAR(255), `quantityValue` FLOAT, `price` FLOAT, `brand` VARCHAR(255), `origin` VARCHAR(255), `productAt` DATE, `expireAt` VARCHAR(255), `manual` VARCHAR(255), `preserve` VARCHAR(255), `productImage` VARCHAR(255), `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, `productCategoryId` INTEGER, `quantityId` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`productCategoryId`) REFERENCES `productCategories` (`id`) ON DELETE SET NULL ON UPDATE CASCADE, FOREIGN KEY (`quantityId`) REFERENCES `quantities` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;
[2021-12-14 13:39:53] [[32minfo[39m] Executing (default): SHOW INDEX FROM `products`
[2021-12-14 13:39:53] [[32minfo[39m] Executing (default): ALTER TABLE `products` ADD FULLTEXT INDEX `product_index` (`proName`)
[2021-12-14 13:39:54] [[32minfo[39m] Executing (default): DROP TABLE IF EXISTS `foodMaterials`;
[2021-12-14 13:39:54] [[32minfo[39m] Executing (default): CREATE TABLE IF NOT EXISTS `foodMaterials` (`id` INTEGER NOT NULL auto_increment , `foodMaterialName` VARCHAR(255), `quantityDescription` VARCHAR(255), `quantityValue` FLOAT, `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, `foodId` INTEGER, `productId` INTEGER, `quantityId` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`foodId`) REFERENCES `foods` (`id`) ON DELETE SET NULL ON UPDATE CASCADE, FOREIGN KEY (`productId`) REFERENCES `products` (`id`) ON DELETE SET NULL ON UPDATE CASCADE, FOREIGN KEY (`quantityId`) REFERENCES `quantities` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;
[2021-12-14 13:39:54] [[32minfo[39m] Executing (default): SHOW INDEX FROM `foodMaterials`
[2021-12-14 13:39:54] [[32minfo[39m] Executing (default): DROP TABLE IF EXISTS `foodCookSteps`;
[2021-12-14 13:39:54] [[32minfo[39m] Executing (default): CREATE TABLE IF NOT EXISTS `foodCookSteps` (`id` INTEGER NOT NULL auto_increment , `stepNumber` INTEGER, `stepDescription` VARCHAR(255), `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, `foodId` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`foodId`) REFERENCES `foods` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;
[2021-12-14 13:39:54] [[32minfo[39m] Executing (default): SHOW INDEX FROM `foodCookSteps`
[2021-12-14 13:39:54] [[32minfo[39m] Executing (default): DROP TABLE IF EXISTS `carts`;
[2021-12-14 13:39:54] [[32minfo[39m] Executing (default): CREATE TABLE IF NOT EXISTS `carts` (`id` INTEGER NOT NULL auto_increment , `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, `userId` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`userId`) REFERENCES `users` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;
[2021-12-14 13:39:54] [[32minfo[39m] Executing (default): SHOW INDEX FROM `carts`
[2021-12-14 13:39:54] [[32minfo[39m] Executing (default): DROP TABLE IF EXISTS `cartDetails`;
[2021-12-14 13:39:54] [[32minfo[39m] Executing (default): CREATE TABLE IF NOT EXISTS `cartDetails` (`id` INTEGER NOT NULL auto_increment , `quantity` INTEGER, `isBuy` TINYINT(1), `isDeleted` TINYINT(1), `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, `cartId` INTEGER, `productId` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`cartId`) REFERENCES `carts` (`id`) ON DELETE SET NULL ON UPDATE CASCADE, FOREIGN KEY (`productId`) REFERENCES `products` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;
[2021-12-14 13:39:54] [[32minfo[39m] Executing (default): SHOW INDEX FROM `cartDetails`
[2021-12-14 13:39:54] [[32minfo[39m] Executing (default): DROP TABLE IF EXISTS `deliveryMethods`;
[2021-12-14 13:39:54] [[32minfo[39m] Executing (default): CREATE TABLE IF NOT EXISTS `deliveryMethods` (`id` INTEGER NOT NULL auto_increment , `deliveryMethod` VARCHAR(255), `fee` FLOAT, `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, PRIMARY KEY (`id`)) ENGINE=InnoDB;
[2021-12-14 13:39:54] [[32minfo[39m] Executing (default): SHOW INDEX FROM `deliveryMethods`
[2021-12-14 13:39:54] [[32minfo[39m] Executing (default): DROP TABLE IF EXISTS `paymentMethods`;
[2021-12-14 13:39:54] [[32minfo[39m] Executing (default): CREATE TABLE IF NOT EXISTS `paymentMethods` (`id` INTEGER NOT NULL auto_increment , `paymentType` VARCHAR(255), `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, PRIMARY KEY (`id`)) ENGINE=InnoDB;
[2021-12-14 13:39:55] [[32minfo[39m] Executing (default): SHOW INDEX FROM `paymentMethods`
[2021-12-14 13:39:55] [[32minfo[39m] Executing (default): DROP TABLE IF EXISTS `orders`;
[2021-12-14 13:39:55] [[32minfo[39m] Executing (default): CREATE TABLE IF NOT EXISTS `orders` (`id` INTEGER NOT NULL auto_increment , `addressDelivery` VARCHAR(255), `deliveryAt` DATE, `orderStatus` TINYINT(1), `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, `userId` INTEGER, `deliveryMethodId` INTEGER, `shipperId` INTEGER, `paymentMethodId` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`userId`) REFERENCES `users` (`id`) ON DELETE SET NULL ON UPDATE CASCADE, FOREIGN KEY (`deliveryMethodId`) REFERENCES `deliveryMethods` (`id`) ON DELETE SET NULL ON UPDATE CASCADE, FOREIGN KEY (`shipperId`) REFERENCES `users` (`id`) ON DELETE SET NULL ON UPDATE CASCADE, FOREIGN KEY (`paymentMethodId`) REFERENCES `paymentMethods` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;
[2021-12-14 13:39:55] [[32minfo[39m] Executing (default): SHOW INDEX FROM `orders`
[2021-12-14 13:39:55] [[32minfo[39m] Executing (default): DROP TABLE IF EXISTS `orderDetails`;
[2021-12-14 13:39:55] [[32minfo[39m] Executing (default): CREATE TABLE IF NOT EXISTS `orderDetails` (`id` INTEGER NOT NULL auto_increment , `quantity` INTEGER, `price` FLOAT, `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, `orderId` INTEGER, `productId` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`orderId`) REFERENCES `orders` (`id`) ON DELETE SET NULL ON UPDATE CASCADE, FOREIGN KEY (`productId`) REFERENCES `products` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;
[2021-12-14 13:39:55] [[32minfo[39m] Executing (default): SHOW INDEX FROM `orderDetails`
[2021-12-14 13:39:55] [[32minfo[39m] Executing (default): DROP TABLE IF EXISTS `favoriteFoodCategories`;
[2021-12-14 13:39:55] [[32minfo[39m] Executing (default): CREATE TABLE IF NOT EXISTS `favoriteFoodCategories` (`createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, `userId` INTEGER , `foodCategoryId` INTEGER , PRIMARY KEY (`userId`, `foodCategoryId`), FOREIGN KEY (`userId`) REFERENCES `users` (`id`) ON DELETE CASCADE ON UPDATE CASCADE, FOREIGN KEY (`foodCategoryId`) REFERENCES `foodCategories` (`id`) ON DELETE CASCADE ON UPDATE CASCADE) ENGINE=InnoDB;
[2021-12-14 13:39:55] [[32minfo[39m] Executing (default): SHOW INDEX FROM `favoriteFoodCategories`
[2021-12-14 13:39:55] [[32minfo[39m] Executing (default): DROP TABLE IF EXISTS `address-provinces`;
[2021-12-14 13:39:55] [[32minfo[39m] Executing (default): CREATE TABLE IF NOT EXISTS `address-provinces` (`id` INTEGER NOT NULL auto_increment , `province` VARCHAR(255), `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, PRIMARY KEY (`id`)) ENGINE=InnoDB;
[2021-12-14 13:39:55] [[32minfo[39m] Executing (default): SHOW INDEX FROM `address-provinces`
[2021-12-14 13:39:55] [[32minfo[39m] Executing (default): DROP TABLE IF EXISTS `address-districts`;
[2021-12-14 13:39:55] [[32minfo[39m] Executing (default): CREATE TABLE IF NOT EXISTS `address-districts` (`id` INTEGER NOT NULL auto_increment , `district` VARCHAR(255), `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, `addressProvinceId` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`addressProvinceId`) REFERENCES `address-provinces` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;
[2021-12-14 13:39:55] [[32minfo[39m] Executing (default): SHOW INDEX FROM `address-districts`
[2021-12-14 13:39:55] [[32minfo[39m] Executing (default): DROP TABLE IF EXISTS `address-villages`;
[2021-12-14 13:39:55] [[32minfo[39m] Executing (default): CREATE TABLE IF NOT EXISTS `address-villages` (`id` INTEGER NOT NULL auto_increment , `village` VARCHAR(255), `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, `addressDistrictId` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`addressDistrictId`) REFERENCES `address-districts` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;
[2021-12-14 13:39:55] [[32minfo[39m] Executing (default): SHOW INDEX FROM `address-villages`
[2021-12-14 13:39:55] [[32minfo[39m] Executing (default): DROP TABLE IF EXISTS `marketNotes`;
[2021-12-14 13:39:55] [[32minfo[39m] Executing (default): CREATE TABLE IF NOT EXISTS `marketNotes` (`id` INTEGER NOT NULL auto_increment , `marketNoteText` VARCHAR(255), `remindDate` DATE, `isDone` TINYINT(1), `isDeleted` TINYINT(1), `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, `userId` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`userId`) REFERENCES `users` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;
[2021-12-14 13:39:55] [[32minfo[39m] Executing (default): SHOW INDEX FROM `marketNotes`
[2021-12-14 13:39:55] [[32minfo[39m] Executing (default): DROP TABLE IF EXISTS `user_roles`;
[2021-12-14 13:39:55] [[32minfo[39m] Executing (default): CREATE TABLE IF NOT EXISTS `user_roles` (`createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, `roleId` INTEGER , `userId` INTEGER , PRIMARY KEY (`roleId`, `userId`), FOREIGN KEY (`roleId`) REFERENCES `roles` (`id`) ON DELETE CASCADE ON UPDATE CASCADE, FOREIGN KEY (`userId`) REFERENCES `users` (`id`) ON DELETE CASCADE ON UPDATE CASCADE) ENGINE=InnoDB;
[2021-12-14 13:39:55] [[32minfo[39m] Executing (default): SHOW INDEX FROM `user_roles`
[2021-12-14 13:39:55] [[32minfo[39m] Dropped and Resync database
[2021-12-14 13:41:46] [[32minfo[39m] Executing (default): SELECT `id`, `username`, `email`, `password`, `firstname`, `lastname`, `gender`, `phone`, `birthday`, `address`, `userAvatar`, `createdAt`, `updatedAt` FROM `users` AS `users` WHERE `users`.`username` = 'phuctg2106';
[2021-12-14 13:41:50] [[32minfo[39m] Executing (default): SELECT `id`, `username`, `email`, `password`, `firstname`, `lastname`, `gender`, `phone`, `birthday`, `address`, `userAvatar`, `createdAt`, `updatedAt` FROM `users` AS `users` WHERE `users`.`username` = 'phuctg2106';
[2021-12-14 13:42:21] [[32minfo[39m] Executing (default): SELECT `id`, `username`, `email`, `password`, `firstname`, `lastname`, `gender`, `phone`, `birthday`, `address`, `userAvatar`, `createdAt`, `updatedAt` FROM `users` AS `users` WHERE `users`.`username` = 'phuctg2106';
[2021-12-14 13:42:43] [[32minfo[39m] Executing (default): SELECT `id`, `username`, `email`, `password`, `firstname`, `lastname`, `gender`, `phone`, `birthday`, `address`, `userAvatar`, `createdAt`, `updatedAt` FROM `users` AS `users` WHERE `users`.`username` = 'phuctg2106';
[2021-12-14 13:43:15] [[32minfo[39m] Executing (default): SELECT `id`, `username`, `email`, `password`, `firstname`, `lastname`, `gender`, `phone`, `birthday`, `address`, `userAvatar`, `createdAt`, `updatedAt` FROM `users` AS `users` WHERE `users`.`username` = 'phuctg2106';
[2021-12-14 13:43:16] [[32minfo[39m] Executing (default): SELECT `id`, `username`, `email`, `password`, `firstname`, `lastname`, `gender`, `phone`, `birthday`, `address`, `userAvatar`, `createdAt`, `updatedAt` FROM `users` AS `users` WHERE `users`.`username` = 'phuctg2106';
[2021-12-14 13:43:59] [[32minfo[39m] User phuctg2106 registered
[2021-12-14 13:44:01] [[32minfo[39m] Executing (default): SELECT `id`, `username`, `email`, `password`, `firstname`, `lastname`, `gender`, `phone`, `birthday`, `address`, `userAvatar`, `createdAt`, `updatedAt` FROM `users` AS `users` WHERE `users`.`username` = 'phuctg2106';
[2021-12-14 13:44:02] [[32minfo[39m] Executing (default): SELECT `id`, `username`, `email`, `password`, `firstname`, `lastname`, `gender`, `phone`, `birthday`, `address`, `userAvatar`, `createdAt`, `updatedAt` FROM `users` AS `users` WHERE `users`.`id` = '2';
[2021-12-14 13:44:02] [[32minfo[39m] Executing (default): SELECT `createdAt`, `updatedAt`, `userId`, `foodCategoryId` FROM `favoriteFoodCategories` AS `favoriteFoodCategories` WHERE `favoriteFoodCategories`.`userId` = '2';
[2021-12-14 13:44:02] [[32minfo[39m] Request status: [object Object] data [object SequelizeInstance:users]
[2021-12-14 13:44:02] [[32minfo[39m] Executing (default): SELECT `createdAt`, `updatedAt`, `userId`, `foodCategoryId` FROM `favoriteFoodCategories` AS `favoriteFoodCategories` WHERE `favoriteFoodCategories`.`userId` = 2;
[2021-12-14 13:44:02] [[32minfo[39m] Request status: [object Object] data 
[2021-12-14 13:44:05] [[32minfo[39m] Executing (default): SELECT `id`, `username`, `email`, `password`, `firstname`, `lastname`, `gender`, `phone`, `birthday`, `address`, `userAvatar`, `createdAt`, `updatedAt` FROM `users` AS `users` WHERE `users`.`id` = '2';
[2021-12-14 13:44:05] [[32minfo[39m] Request status: [object Object] data [object SequelizeInstance:users]
[2021-12-14 13:44:05] [[32minfo[39m] Executing (default): SELECT `createdAt`, `updatedAt`, `userId`, `foodCategoryId` FROM `favoriteFoodCategories` AS `favoriteFoodCategories` WHERE `favoriteFoodCategories`.`userId` = 2;
[2021-12-14 13:44:05] [[32minfo[39m] Executing (default): SELECT `id`, `username`, `email`, `password`, `firstname`, `lastname`, `gender`, `phone`, `birthday`, `address`, `userAvatar`, `createdAt`, `updatedAt` FROM `users` AS `users` WHERE `users`.`id` = '2';
[2021-12-14 13:44:05] [[32minfo[39m] Request status: [object Object] data [object SequelizeInstance:users]
[2021-12-14 13:44:05] [[32minfo[39m] Executing (default): SELECT `createdAt`, `updatedAt`, `userId`, `foodCategoryId` FROM `favoriteFoodCategories` AS `favoriteFoodCategories` WHERE `favoriteFoodCategories`.`userId` = 2;
[2021-12-14 13:44:05] [[32minfo[39m] Executing (default): SELECT `createdAt`, `updatedAt`, `userId`, `foodCategoryId` FROM `favoriteFoodCategories` AS `favoriteFoodCategories` WHERE `favoriteFoodCategories`.`userId` = '2';
[2021-12-14 13:44:05] [[32minfo[39m] Request status: [object Object] data 
[2021-12-14 13:48:10] [[32minfo[39m] Executing (default): SELECT `id`, `username`, `email`, `password`, `firstname`, `lastname`, `gender`, `phone`, `birthday`, `address`, `userAvatar`, `createdAt`, `updatedAt` FROM `users` AS `users` WHERE `users`.`username` = 'phuctg2106';
[2021-12-14 13:48:10] [[32minfo[39m] Executing (default): SELECT `id`, `username`, `email`, `password`, `firstname`, `lastname`, `gender`, `phone`, `birthday`, `address`, `userAvatar`, `createdAt`, `updatedAt` FROM `users` AS `users` WHERE `users`.`id` = '2';
[2021-12-14 13:48:10] [[32minfo[39m] Executing (default): SELECT `createdAt`, `updatedAt`, `userId`, `foodCategoryId` FROM `favoriteFoodCategories` AS `favoriteFoodCategories` WHERE `favoriteFoodCategories`.`userId` = '2';
[2021-12-14 13:48:10] [[32minfo[39m] Request status: [object Object] data [object SequelizeInstance:users]
[2021-12-14 13:48:10] [[32minfo[39m] Executing (default): SELECT `createdAt`, `updatedAt`, `userId`, `foodCategoryId` FROM `favoriteFoodCategories` AS `favoriteFoodCategories` WHERE `favoriteFoodCategories`.`userId` = 2;
[2021-12-14 13:48:10] [[32minfo[39m] Request status: [object Object] data 
[2021-12-14 13:48:12] [[32minfo[39m] Executing (default): SELECT `id`, `username`, `email`, `password`, `firstname`, `lastname`, `gender`, `phone`, `birthday`, `address`, `userAvatar`, `createdAt`, `updatedAt` FROM `users` AS `users` WHERE `users`.`id` = '2';
[2021-12-14 13:48:12] [[32minfo[39m] Request status: [object Object] data [object SequelizeInstance:users]
[2021-12-14 13:48:12] [[32minfo[39m] Executing (default): SELECT `createdAt`, `updatedAt`, `userId`, `foodCategoryId` FROM `favoriteFoodCategories` AS `favoriteFoodCategories` WHERE `favoriteFoodCategories`.`userId` = 2;
[2021-12-14 13:48:12] [[32minfo[39m] Executing (default): SELECT `id`, `username`, `email`, `password`, `firstname`, `lastname`, `gender`, `phone`, `birthday`, `address`, `userAvatar`, `createdAt`, `updatedAt` FROM `users` AS `users` WHERE `users`.`id` = '2';
[2021-12-14 13:48:12] [[32minfo[39m] Request status: [object Object] data [object SequelizeInstance:users]
[2021-12-14 13:48:12] [[32minfo[39m] Executing (default): SELECT `createdAt`, `updatedAt`, `userId`, `foodCategoryId` FROM `favoriteFoodCategories` AS `favoriteFoodCategories` WHERE `favoriteFoodCategories`.`userId` = 2;
[2021-12-14 13:48:12] [[32minfo[39m] Executing (default): SELECT `createdAt`, `updatedAt`, `userId`, `foodCategoryId` FROM `favoriteFoodCategories` AS `favoriteFoodCategories` WHERE `favoriteFoodCategories`.`userId` = '2';
[2021-12-14 13:48:12] [[32minfo[39m] Request status: [object Object] data 
[2021-12-14 13:50:32] [[32minfo[39m] Executing (default): SELECT `id`, `username`, `email`, `password`, `firstname`, `lastname`, `gender`, `phone`, `birthday`, `address`, `userAvatar`, `createdAt`, `updatedAt` FROM `users` AS `users` WHERE `users`.`username` = 'phuctg2106';
[2021-12-14 13:50:33] [[32minfo[39m] Executing (default): SELECT `id`, `username`, `email`, `password`, `firstname`, `lastname`, `gender`, `phone`, `birthday`, `address`, `userAvatar`, `createdAt`, `updatedAt` FROM `users` AS `users` WHERE `users`.`id` = '2';
[2021-12-14 13:50:33] [[32minfo[39m] Executing (default): SELECT `createdAt`, `updatedAt`, `userId`, `foodCategoryId` FROM `favoriteFoodCategories` AS `favoriteFoodCategories` WHERE `favoriteFoodCategories`.`userId` = '2';
[2021-12-14 13:50:33] [[32minfo[39m] Request status: [object Object] data [object SequelizeInstance:users]
[2021-12-14 13:50:33] [[32minfo[39m] Executing (default): SELECT `createdAt`, `updatedAt`, `userId`, `foodCategoryId` FROM `favoriteFoodCategories` AS `favoriteFoodCategories` WHERE `favoriteFoodCategories`.`userId` = 2;
[2021-12-14 13:50:33] [[32minfo[39m] Request status: [object Object] data 
[2021-12-14 13:50:34] [[32minfo[39m] Executing (default): SELECT `id`, `username`, `email`, `password`, `firstname`, `lastname`, `gender`, `phone`, `birthday`, `address`, `userAvatar`, `createdAt`, `updatedAt` FROM `users` AS `users` WHERE `users`.`id` = '2';
[2021-12-14 13:50:34] [[32minfo[39m] Request status: [object Object] data [object SequelizeInstance:users]
[2021-12-14 13:50:34] [[32minfo[39m] Executing (default): SELECT `createdAt`, `updatedAt`, `userId`, `foodCategoryId` FROM `favoriteFoodCategories` AS `favoriteFoodCategories` WHERE `favoriteFoodCategories`.`userId` = 2;
[2021-12-14 13:50:34] [[32minfo[39m] Executing (default): SELECT `id`, `username`, `email`, `password`, `firstname`, `lastname`, `gender`, `phone`, `birthday`, `address`, `userAvatar`, `createdAt`, `updatedAt` FROM `users` AS `users` WHERE `users`.`id` = '2';
[2021-12-14 13:50:34] [[32minfo[39m] Executing (default): SELECT `createdAt`, `updatedAt`, `userId`, `foodCategoryId` FROM `favoriteFoodCategories` AS `favoriteFoodCategories` WHERE `favoriteFoodCategories`.`userId` = '2';
[2021-12-14 13:50:34] [[32minfo[39m] Request status: [object Object] data 
[2021-12-14 13:50:34] [[32minfo[39m] Request status: [object Object] data [object SequelizeInstance:users]
[2021-12-14 13:50:34] [[32minfo[39m] Executing (default): SELECT `createdAt`, `updatedAt`, `userId`, `foodCategoryId` FROM `favoriteFoodCategories` AS `favoriteFoodCategories` WHERE `favoriteFoodCategories`.`userId` = 2;
[2021-12-14 13:52:14] [[32minfo[39m] Executing (default): SELECT `id`, `username`, `email`, `password`, `firstname`, `lastname`, `gender`, `phone`, `birthday`, `address`, `userAvatar`, `createdAt`, `updatedAt` FROM `users` AS `users` WHERE `users`.`username` = 'phuctg2106';
[2021-12-14 13:52:15] [[32minfo[39m] Executing (default): SELECT `id`, `username`, `email`, `password`, `firstname`, `lastname`, `gender`, `phone`, `birthday`, `address`, `userAvatar`, `createdAt`, `updatedAt` FROM `users` AS `users` WHERE `users`.`id` = '2';
[2021-12-14 13:52:15] [[32minfo[39m] Request status: [object Object] data [object SequelizeInstance:users]
[2021-12-14 13:52:15] [[32minfo[39m] Executing (default): SELECT `createdAt`, `updatedAt`, `userId`, `foodCategoryId` FROM `favoriteFoodCategories` AS `favoriteFoodCategories` WHERE `favoriteFoodCategories`.`userId` = 2;
[2021-12-14 13:52:15] [[32minfo[39m] Executing (default): SELECT `createdAt`, `updatedAt`, `userId`, `foodCategoryId` FROM `favoriteFoodCategories` AS `favoriteFoodCategories` WHERE `favoriteFoodCategories`.`userId` = '2';
[2021-12-14 13:52:15] [[32minfo[39m] Request status: [object Object] data 
[2021-12-14 13:52:16] [[32minfo[39m] Executing (default): SELECT `id`, `username`, `email`, `password`, `firstname`, `lastname`, `gender`, `phone`, `birthday`, `address`, `userAvatar`, `createdAt`, `updatedAt` FROM `users` AS `users` WHERE `users`.`id` = '2';
[2021-12-14 13:52:16] [[32minfo[39m] Request status: [object Object] data [object SequelizeInstance:users]
[2021-12-14 13:52:16] [[32minfo[39m] Executing (default): SELECT `createdAt`, `updatedAt`, `userId`, `foodCategoryId` FROM `favoriteFoodCategories` AS `favoriteFoodCategories` WHERE `favoriteFoodCategories`.`userId` = 2;
[2021-12-14 13:52:16] [[32minfo[39m] Executing (default): SELECT `id`, `username`, `email`, `password`, `firstname`, `lastname`, `gender`, `phone`, `birthday`, `address`, `userAvatar`, `createdAt`, `updatedAt` FROM `users` AS `users` WHERE `users`.`id` = '2';
[2021-12-14 13:52:16] [[32minfo[39m] Executing (default): SELECT `createdAt`, `updatedAt`, `userId`, `foodCategoryId` FROM `favoriteFoodCategories` AS `favoriteFoodCategories` WHERE `favoriteFoodCategories`.`userId` = '2';
[2021-12-14 13:52:16] [[32minfo[39m] Request status: [object Object] data [object SequelizeInstance:users]
[2021-12-14 13:52:16] [[32minfo[39m] Executing (default): SELECT `createdAt`, `updatedAt`, `userId`, `foodCategoryId` FROM `favoriteFoodCategories` AS `favoriteFoodCategories` WHERE `favoriteFoodCategories`.`userId` = 2;
[2021-12-14 13:52:16] [[32minfo[39m] Request status: [object Object] data 
[2021-12-14 13:52:20] [[32minfo[39m] Executing (default): SELECT `id`, `username`, `email`, `password`, `firstname`, `lastname`, `gender`, `phone`, `birthday`, `address`, `userAvatar`, `createdAt`, `updatedAt` FROM `users` AS `users` WHERE `users`.`id` = '2';
[2021-12-14 13:52:20] [[32minfo[39m] Request status: [object Object] data [object SequelizeInstance:users]
[2021-12-14 13:53:51] [[32minfo[39m] Executing (default): SELECT `id`, `username`, `email`, `password`, `firstname`, `lastname`, `gender`, `phone`, `birthday`, `address`, `userAvatar`, `createdAt`, `updatedAt` FROM `users` AS `users` WHERE `users`.`username` = 'phuctg2106';
[2021-12-14 13:53:51] [[32minfo[39m] Executing (default): SELECT `id`, `username`, `email`, `password`, `firstname`, `lastname`, `gender`, `phone`, `birthday`, `address`, `userAvatar`, `createdAt`, `updatedAt` FROM `users` AS `users` WHERE `users`.`id` = '2';
[2021-12-14 13:53:51] [[32minfo[39m] Request status: [object Object] data [object SequelizeInstance:users]
[2021-12-14 13:53:51] [[32minfo[39m] Executing (default): SELECT `createdAt`, `updatedAt`, `userId`, `foodCategoryId` FROM `favoriteFoodCategories` AS `favoriteFoodCategories` WHERE `favoriteFoodCategories`.`userId` = 2;
[2021-12-14 13:53:51] [[32minfo[39m] Executing (default): SELECT `createdAt`, `updatedAt`, `userId`, `foodCategoryId` FROM `favoriteFoodCategories` AS `favoriteFoodCategories` WHERE `favoriteFoodCategories`.`userId` = '2';
[2021-12-14 13:53:51] [[32minfo[39m] Request status: [object Object] data 
[2021-12-14 13:53:53] [[32minfo[39m] Executing (default): SELECT `id`, `username`, `email`, `password`, `firstname`, `lastname`, `gender`, `phone`, `birthday`, `address`, `userAvatar`, `createdAt`, `updatedAt` FROM `users` AS `users` WHERE `users`.`id` = '2';
[2021-12-14 13:53:53] [[32minfo[39m] Request status: [object Object] data [object SequelizeInstance:users]
[2021-12-14 13:53:53] [[32minfo[39m] Executing (default): SELECT `createdAt`, `updatedAt`, `userId`, `foodCategoryId` FROM `favoriteFoodCategories` AS `favoriteFoodCategories` WHERE `favoriteFoodCategories`.`userId` = 2;
[2021-12-14 13:53:54] [[32minfo[39m] Executing (default): SELECT `id`, `username`, `email`, `password`, `firstname`, `lastname`, `gender`, `phone`, `birthday`, `address`, `userAvatar`, `createdAt`, `updatedAt` FROM `users` AS `users` WHERE `users`.`id` = '2';
[2021-12-14 13:53:54] [[32minfo[39m] Request status: [object Object] data [object SequelizeInstance:users]
[2021-12-14 13:53:54] [[32minfo[39m] Executing (default): SELECT `createdAt`, `updatedAt`, `userId`, `foodCategoryId` FROM `favoriteFoodCategories` AS `favoriteFoodCategories` WHERE `favoriteFoodCategories`.`userId` = 2;
[2021-12-14 13:53:54] [[32minfo[39m] Executing (default): SELECT `createdAt`, `updatedAt`, `userId`, `foodCategoryId` FROM `favoriteFoodCategories` AS `favoriteFoodCategories` WHERE `favoriteFoodCategories`.`userId` = '2';
[2021-12-14 13:53:54] [[32minfo[39m] Request status: [object Object] data 
[2021-12-14 13:54:22] [[32minfo[39m] Executing (default): SELECT `id`, `username`, `email`, `password`, `firstname`, `lastname`, `gender`, `phone`, `birthday`, `address`, `userAvatar`, `createdAt`, `updatedAt` FROM `users` AS `users` WHERE `users`.`username` = 'phuctg2106';
[2021-12-14 13:54:22] [[32minfo[39m] Executing (default): SELECT `id`, `username`, `email`, `password`, `firstname`, `lastname`, `gender`, `phone`, `birthday`, `address`, `userAvatar`, `createdAt`, `updatedAt` FROM `users` AS `users` WHERE `users`.`id` = '2';
[2021-12-14 13:54:22] [[32minfo[39m] Executing (default): SELECT `createdAt`, `updatedAt`, `userId`, `foodCategoryId` FROM `favoriteFoodCategories` AS `favoriteFoodCategories` WHERE `favoriteFoodCategories`.`userId` = '2';
[2021-12-14 13:54:22] [[32minfo[39m] Request status: [object Object] data [object SequelizeInstance:users]
[2021-12-14 13:54:22] [[32minfo[39m] Executing (default): SELECT `createdAt`, `updatedAt`, `userId`, `foodCategoryId` FROM `favoriteFoodCategories` AS `favoriteFoodCategories` WHERE `favoriteFoodCategories`.`userId` = 2;
[2021-12-14 13:54:22] [[32minfo[39m] Request status: [object Object] data 
[2021-12-14 13:54:24] [[32minfo[39m] Executing (default): SELECT `id`, `username`, `email`, `password`, `firstname`, `lastname`, `gender`, `phone`, `birthday`, `address`, `userAvatar`, `createdAt`, `updatedAt` FROM `users` AS `users` WHERE `users`.`id` = '2';
[2021-12-14 13:54:24] [[32minfo[39m] Request status: [object Object] data [object SequelizeInstance:users]
[2021-12-14 13:54:24] [[32minfo[39m] Executing (default): SELECT `createdAt`, `updatedAt`, `userId`, `foodCategoryId` FROM `favoriteFoodCategories` AS `favoriteFoodCategories` WHERE `favoriteFoodCategories`.`userId` = 2;
[2021-12-14 13:54:24] [[32minfo[39m] Executing (default): SELECT `id`, `username`, `email`, `password`, `firstname`, `lastname`, `gender`, `phone`, `birthday`, `address`, `userAvatar`, `createdAt`, `updatedAt` FROM `users` AS `users` WHERE `users`.`id` = '2';
[2021-12-14 13:54:24] [[32minfo[39m] Executing (default): SELECT `createdAt`, `updatedAt`, `userId`, `foodCategoryId` FROM `favoriteFoodCategories` AS `favoriteFoodCategories` WHERE `favoriteFoodCategories`.`userId` = '2';
[2021-12-14 13:54:24] [[32minfo[39m] Request status: [object Object] data [object SequelizeInstance:users]
[2021-12-14 13:54:24] [[32minfo[39m] Executing (default): SELECT `createdAt`, `updatedAt`, `userId`, `foodCategoryId` FROM `favoriteFoodCategories` AS `favoriteFoodCategories` WHERE `favoriteFoodCategories`.`userId` = 2;
[2021-12-14 13:54:24] [[32minfo[39m] Request status: [object Object] data 
[2021-12-14 13:54:30] [[32minfo[39m] Executing (default): SELECT `id`, `username`, `email`, `password`, `firstname`, `lastname`, `gender`, `phone`, `birthday`, `address`, `userAvatar`, `createdAt`, `updatedAt` FROM `users` AS `users` WHERE `users`.`id` = '2';
[2021-12-14 13:54:30] [[32minfo[39m] Request status: [object Object] data [object SequelizeInstance:users]
[2021-12-14 13:54:40] [[32minfo[39m] Executing (default): SELECT `id`, `username`, `email`, `password`, `firstname`, `lastname`, `gender`, `phone`, `birthday`, `address`, `userAvatar`, `createdAt`, `updatedAt` FROM `users` AS `users` WHERE `users`.`id` = '2';
[2021-12-14 13:54:40] [[32minfo[39m] Request status: [object Object] data [object SequelizeInstance:users]
[2021-12-14 13:54:48] [[32minfo[39m] Executing (default): SELECT `carts`.*, `cartDetails`.`id` AS `cartDetails.id`, `cartDetails`.`quantity` AS `cartDetails.quantity`, `cartDetails`.`isBuy` AS `cartDetails.isBuy`, `cartDetails`.`isDeleted` AS `cartDetails.isDeleted`, `cartDetails`.`createdAt` AS `cartDetails.createdAt`, `cartDetails`.`updatedAt` AS `cartDetails.updatedAt`, `cartDetails`.`cartId` AS `cartDetails.cartId`, `cartDetails`.`productId` AS `cartDetails.productId`, `cartDetails->product`.`id` AS `cartDetails.product.id`, `cartDetails->product`.`proName` AS `cartDetails.product.proName`, `cartDetails->product`.`proDescription` AS `cartDetails.product.proDescription`, `cartDetails->product`.`quantityValue` AS `cartDetails.product.quantityValue`, `cartDetails->product`.`price` AS `cartDetails.product.price`, `cartDetails->product`.`brand` AS `cartDetails.product.brand`, `cartDetails->product`.`origin` AS `cartDetails.product.origin`, `cartDetails->product`.`productAt` AS `cartDetails.product.productAt`, `cartDetails->product`.`expireAt` AS `cartDetails.product.expireAt`, `cartDetails->product`.`manual` AS `cartDetails.product.manual`, `cartDetails->product`.`preserve` AS `cartDetails.product.preserve`, `cartDetails->product`.`productImage` AS `cartDetails.product.productImage`, `cartDetails->product`.`createdAt` AS `cartDetails.product.createdAt`, `cartDetails->product`.`updatedAt` AS `cartDetails.product.updatedAt`, `cartDetails->product`.`productCategoryId` AS `cartDetails.product.productCategoryId`, `cartDetails->product`.`quantityId` AS `cartDetails.product.quantityId` FROM (SELECT `carts`.`id`, `carts`.`createdAt`, `carts`.`updatedAt`, `carts`.`userId` FROM `carts` AS `carts` WHERE `carts`.`userId` = '2' AND ( SELECT `cartId` FROM `cartDetails` AS `cartDetails` WHERE ((`cartDetails`.`isBuy` = false AND `cartDetails`.`isDeleted` = false) AND `cartDetails`.`cartId` = `carts`.`id`) LIMIT 1 ) IS NOT NULL LIMIT 1) AS `carts` INNER JOIN `cartDetails` AS `cartDetails` ON `carts`.`id` = `cartDetails`.`cartId` AND `cartDetails`.`isBuy` = false AND `cartDetails`.`isDeleted` = false LEFT OUTER JOIN `products` AS `cartDetails->product` ON `cartDetails`.`productId` = `cartDetails->product`.`id`;
[2021-12-14 13:54:48] [[32minfo[39m] Executing (default): SELECT `carts`.*, `cartDetails`.`id` AS `cartDetails.id`, `cartDetails`.`quantity` AS `cartDetails.quantity`, `cartDetails`.`isBuy` AS `cartDetails.isBuy`, `cartDetails`.`isDeleted` AS `cartDetails.isDeleted`, `cartDetails`.`createdAt` AS `cartDetails.createdAt`, `cartDetails`.`updatedAt` AS `cartDetails.updatedAt`, `cartDetails`.`cartId` AS `cartDetails.cartId`, `cartDetails`.`productId` AS `cartDetails.productId`, `cartDetails->product`.`id` AS `cartDetails.product.id`, `cartDetails->product`.`proName` AS `cartDetails.product.proName`, `cartDetails->product`.`proDescription` AS `cartDetails.product.proDescription`, `cartDetails->product`.`quantityValue` AS `cartDetails.product.quantityValue`, `cartDetails->product`.`price` AS `cartDetails.product.price`, `cartDetails->product`.`brand` AS `cartDetails.product.brand`, `cartDetails->product`.`origin` AS `cartDetails.product.origin`, `cartDetails->product`.`productAt` AS `cartDetails.product.productAt`, `cartDetails->product`.`expireAt` AS `cartDetails.product.expireAt`, `cartDetails->product`.`manual` AS `cartDetails.product.manual`, `cartDetails->product`.`preserve` AS `cartDetails.product.preserve`, `cartDetails->product`.`productImage` AS `cartDetails.product.productImage`, `cartDetails->product`.`createdAt` AS `cartDetails.product.createdAt`, `cartDetails->product`.`updatedAt` AS `cartDetails.product.updatedAt`, `cartDetails->product`.`productCategoryId` AS `cartDetails.product.productCategoryId`, `cartDetails->product`.`quantityId` AS `cartDetails.product.quantityId` FROM (SELECT `carts`.`id`, `carts`.`createdAt`, `carts`.`updatedAt`, `carts`.`userId` FROM `carts` AS `carts` WHERE `carts`.`userId` = '2' AND ( SELECT `cartId` FROM `cartDetails` AS `cartDetails` WHERE ((`cartDetails`.`isBuy` = false AND `cartDetails`.`isDeleted` = false) AND `cartDetails`.`cartId` = `carts`.`id`) LIMIT 1 ) IS NOT NULL LIMIT 1) AS `carts` INNER JOIN `cartDetails` AS `cartDetails` ON `carts`.`id` = `cartDetails`.`cartId` AND `cartDetails`.`isBuy` = false AND `cartDetails`.`isDeleted` = false LEFT OUTER JOIN `products` AS `cartDetails->product` ON `cartDetails`.`productId` = `cartDetails->product`.`id`;
[2021-12-14 13:55:08] [[32minfo[39m] Executing (default): SELECT `carts`.*, `cartDetails`.`id` AS `cartDetails.id`, `cartDetails`.`quantity` AS `cartDetails.quantity`, `cartDetails`.`isBuy` AS `cartDetails.isBuy`, `cartDetails`.`isDeleted` AS `cartDetails.isDeleted`, `cartDetails`.`createdAt` AS `cartDetails.createdAt`, `cartDetails`.`updatedAt` AS `cartDetails.updatedAt`, `cartDetails`.`cartId` AS `cartDetails.cartId`, `cartDetails`.`productId` AS `cartDetails.productId`, `cartDetails->product`.`id` AS `cartDetails.product.id`, `cartDetails->product`.`proName` AS `cartDetails.product.proName`, `cartDetails->product`.`proDescription` AS `cartDetails.product.proDescription`, `cartDetails->product`.`quantityValue` AS `cartDetails.product.quantityValue`, `cartDetails->product`.`price` AS `cartDetails.product.price`, `cartDetails->product`.`brand` AS `cartDetails.product.brand`, `cartDetails->product`.`origin` AS `cartDetails.product.origin`, `cartDetails->product`.`productAt` AS `cartDetails.product.productAt`, `cartDetails->product`.`expireAt` AS `cartDetails.product.expireAt`, `cartDetails->product`.`manual` AS `cartDetails.product.manual`, `cartDetails->product`.`preserve` AS `cartDetails.product.preserve`, `cartDetails->product`.`productImage` AS `cartDetails.product.productImage`, `cartDetails->product`.`createdAt` AS `cartDetails.product.createdAt`, `cartDetails->product`.`updatedAt` AS `cartDetails.product.updatedAt`, `cartDetails->product`.`productCategoryId` AS `cartDetails.product.productCategoryId`, `cartDetails->product`.`quantityId` AS `cartDetails.product.quantityId` FROM (SELECT `carts`.`id`, `carts`.`createdAt`, `carts`.`updatedAt`, `carts`.`userId` FROM `carts` AS `carts` WHERE `carts`.`userId` = '2' AND ( SELECT `cartId` FROM `cartDetails` AS `cartDetails` WHERE ((`cartDetails`.`isBuy` = false AND `cartDetails`.`isDeleted` = false) AND `cartDetails`.`cartId` = `carts`.`id`) LIMIT 1 ) IS NOT NULL LIMIT 1) AS `carts` INNER JOIN `cartDetails` AS `cartDetails` ON `carts`.`id` = `cartDetails`.`cartId` AND `cartDetails`.`isBuy` = false AND `cartDetails`.`isDeleted` = false LEFT OUTER JOIN `products` AS `cartDetails->product` ON `cartDetails`.`productId` = `cartDetails->product`.`id`;
[2021-12-14 13:55:08] [[32minfo[39m] Executing (default): SELECT `carts`.*, `cartDetails`.`id` AS `cartDetails.id`, `cartDetails`.`quantity` AS `cartDetails.quantity`, `cartDetails`.`isBuy` AS `cartDetails.isBuy`, `cartDetails`.`isDeleted` AS `cartDetails.isDeleted`, `cartDetails`.`createdAt` AS `cartDetails.createdAt`, `cartDetails`.`updatedAt` AS `cartDetails.updatedAt`, `cartDetails`.`cartId` AS `cartDetails.cartId`, `cartDetails`.`productId` AS `cartDetails.productId`, `cartDetails->product`.`id` AS `cartDetails.product.id`, `cartDetails->product`.`proName` AS `cartDetails.product.proName`, `cartDetails->product`.`proDescription` AS `cartDetails.product.proDescription`, `cartDetails->product`.`quantityValue` AS `cartDetails.product.quantityValue`, `cartDetails->product`.`price` AS `cartDetails.product.price`, `cartDetails->product`.`brand` AS `cartDetails.product.brand`, `cartDetails->product`.`origin` AS `cartDetails.product.origin`, `cartDetails->product`.`productAt` AS `cartDetails.product.productAt`, `cartDetails->product`.`expireAt` AS `cartDetails.product.expireAt`, `cartDetails->product`.`manual` AS `cartDetails.product.manual`, `cartDetails->product`.`preserve` AS `cartDetails.product.preserve`, `cartDetails->product`.`productImage` AS `cartDetails.product.productImage`, `cartDetails->product`.`createdAt` AS `cartDetails.product.createdAt`, `cartDetails->product`.`updatedAt` AS `cartDetails.product.updatedAt`, `cartDetails->product`.`productCategoryId` AS `cartDetails.product.productCategoryId`, `cartDetails->product`.`quantityId` AS `cartDetails.product.quantityId` FROM (SELECT `carts`.`id`, `carts`.`createdAt`, `carts`.`updatedAt`, `carts`.`userId` FROM `carts` AS `carts` WHERE `carts`.`userId` = '2' AND ( SELECT `cartId` FROM `cartDetails` AS `cartDetails` WHERE ((`cartDetails`.`isBuy` = false AND `cartDetails`.`isDeleted` = false) AND `cartDetails`.`cartId` = `carts`.`id`) LIMIT 1 ) IS NOT NULL LIMIT 1) AS `carts` INNER JOIN `cartDetails` AS `cartDetails` ON `carts`.`id` = `cartDetails`.`cartId` AND `cartDetails`.`isBuy` = false AND `cartDetails`.`isDeleted` = false LEFT OUTER JOIN `products` AS `cartDetails->product` ON `cartDetails`.`productId` = `cartDetails->product`.`id`;
[2021-12-14 13:55:10] [[32minfo[39m] Executing (default): SELECT `carts`.*, `cartDetails`.`id` AS `cartDetails.id`, `cartDetails`.`quantity` AS `cartDetails.quantity`, `cartDetails`.`isBuy` AS `cartDetails.isBuy`, `cartDetails`.`isDeleted` AS `cartDetails.isDeleted`, `cartDetails`.`createdAt` AS `cartDetails.createdAt`, `cartDetails`.`updatedAt` AS `cartDetails.updatedAt`, `cartDetails`.`cartId` AS `cartDetails.cartId`, `cartDetails`.`productId` AS `cartDetails.productId`, `cartDetails->product`.`id` AS `cartDetails.product.id`, `cartDetails->product`.`proName` AS `cartDetails.product.proName`, `cartDetails->product`.`proDescription` AS `cartDetails.product.proDescription`, `cartDetails->product`.`quantityValue` AS `cartDetails.product.quantityValue`, `cartDetails->product`.`price` AS `cartDetails.product.price`, `cartDetails->product`.`brand` AS `cartDetails.product.brand`, `cartDetails->product`.`origin` AS `cartDetails.product.origin`, `cartDetails->product`.`productAt` AS `cartDetails.product.productAt`, `cartDetails->product`.`expireAt` AS `cartDetails.product.expireAt`, `cartDetails->product`.`manual` AS `cartDetails.product.manual`, `cartDetails->product`.`preserve` AS `cartDetails.product.preserve`, `cartDetails->product`.`productImage` AS `cartDetails.product.productImage`, `cartDetails->product`.`createdAt` AS `cartDetails.product.createdAt`, `cartDetails->product`.`updatedAt` AS `cartDetails.product.updatedAt`, `cartDetails->product`.`productCategoryId` AS `cartDetails.product.productCategoryId`, `cartDetails->product`.`quantityId` AS `cartDetails.product.quantityId` FROM (SELECT `carts`.`id`, `carts`.`createdAt`, `carts`.`updatedAt`, `carts`.`userId` FROM `carts` AS `carts` WHERE `carts`.`userId` = '2' AND ( SELECT `cartId` FROM `cartDetails` AS `cartDetails` WHERE ((`cartDetails`.`isBuy` = false AND `cartDetails`.`isDeleted` = false) AND `cartDetails`.`cartId` = `carts`.`id`) LIMIT 1 ) IS NOT NULL LIMIT 1) AS `carts` INNER JOIN `cartDetails` AS `cartDetails` ON `carts`.`id` = `cartDetails`.`cartId` AND `cartDetails`.`isBuy` = false AND `cartDetails`.`isDeleted` = false LEFT OUTER JOIN `products` AS `cartDetails->product` ON `cartDetails`.`productId` = `cartDetails->product`.`id`;
[2021-12-14 13:55:10] [[32minfo[39m] Executing (default): SELECT `carts`.*, `cartDetails`.`id` AS `cartDetails.id`, `cartDetails`.`quantity` AS `cartDetails.quantity`, `cartDetails`.`isBuy` AS `cartDetails.isBuy`, `cartDetails`.`isDeleted` AS `cartDetails.isDeleted`, `cartDetails`.`createdAt` AS `cartDetails.createdAt`, `cartDetails`.`updatedAt` AS `cartDetails.updatedAt`, `cartDetails`.`cartId` AS `cartDetails.cartId`, `cartDetails`.`productId` AS `cartDetails.productId`, `cartDetails->product`.`id` AS `cartDetails.product.id`, `cartDetails->product`.`proName` AS `cartDetails.product.proName`, `cartDetails->product`.`proDescription` AS `cartDetails.product.proDescription`, `cartDetails->product`.`quantityValue` AS `cartDetails.product.quantityValue`, `cartDetails->product`.`price` AS `cartDetails.product.price`, `cartDetails->product`.`brand` AS `cartDetails.product.brand`, `cartDetails->product`.`origin` AS `cartDetails.product.origin`, `cartDetails->product`.`productAt` AS `cartDetails.product.productAt`, `cartDetails->product`.`expireAt` AS `cartDetails.product.expireAt`, `cartDetails->product`.`manual` AS `cartDetails.product.manual`, `cartDetails->product`.`preserve` AS `cartDetails.product.preserve`, `cartDetails->product`.`productImage` AS `cartDetails.product.productImage`, `cartDetails->product`.`createdAt` AS `cartDetails.product.createdAt`, `cartDetails->product`.`updatedAt` AS `cartDetails.product.updatedAt`, `cartDetails->product`.`productCategoryId` AS `cartDetails.product.productCategoryId`, `cartDetails->product`.`quantityId` AS `cartDetails.product.quantityId` FROM (SELECT `carts`.`id`, `carts`.`createdAt`, `carts`.`updatedAt`, `carts`.`userId` FROM `carts` AS `carts` WHERE `carts`.`userId` = '2' AND ( SELECT `cartId` FROM `cartDetails` AS `cartDetails` WHERE ((`cartDetails`.`isBuy` = false AND `cartDetails`.`isDeleted` = false) AND `cartDetails`.`cartId` = `carts`.`id`) LIMIT 1 ) IS NOT NULL LIMIT 1) AS `carts` INNER JOIN `cartDetails` AS `cartDetails` ON `carts`.`id` = `cartDetails`.`cartId` AND `cartDetails`.`isBuy` = false AND `cartDetails`.`isDeleted` = false LEFT OUTER JOIN `products` AS `cartDetails->product` ON `cartDetails`.`productId` = `cartDetails->product`.`id`;
[2021-12-14 13:55:11] [[32minfo[39m] Executing (default): SELECT `carts`.*, `cartDetails`.`id` AS `cartDetails.id`, `cartDetails`.`quantity` AS `cartDetails.quantity`, `cartDetails`.`isBuy` AS `cartDetails.isBuy`, `cartDetails`.`isDeleted` AS `cartDetails.isDeleted`, `cartDetails`.`createdAt` AS `cartDetails.createdAt`, `cartDetails`.`updatedAt` AS `cartDetails.updatedAt`, `cartDetails`.`cartId` AS `cartDetails.cartId`, `cartDetails`.`productId` AS `cartDetails.productId`, `cartDetails->product`.`id` AS `cartDetails.product.id`, `cartDetails->product`.`proName` AS `cartDetails.product.proName`, `cartDetails->product`.`proDescription` AS `cartDetails.product.proDescription`, `cartDetails->product`.`quantityValue` AS `cartDetails.product.quantityValue`, `cartDetails->product`.`price` AS `cartDetails.product.price`, `cartDetails->product`.`brand` AS `cartDetails.product.brand`, `cartDetails->product`.`origin` AS `cartDetails.product.origin`, `cartDetails->product`.`productAt` AS `cartDetails.product.productAt`, `cartDetails->product`.`expireAt` AS `cartDetails.product.expireAt`, `cartDetails->product`.`manual` AS `cartDetails.product.manual`, `cartDetails->product`.`preserve` AS `cartDetails.product.preserve`, `cartDetails->product`.`productImage` AS `cartDetails.product.productImage`, `cartDetails->product`.`createdAt` AS `cartDetails.product.createdAt`, `cartDetails->product`.`updatedAt` AS `cartDetails.product.updatedAt`, `cartDetails->product`.`productCategoryId` AS `cartDetails.product.productCategoryId`, `cartDetails->product`.`quantityId` AS `cartDetails.product.quantityId` FROM (SELECT `carts`.`id`, `carts`.`createdAt`, `carts`.`updatedAt`, `carts`.`userId` FROM `carts` AS `carts` WHERE `carts`.`userId` = '2' AND ( SELECT `cartId` FROM `cartDetails` AS `cartDetails` WHERE ((`cartDetails`.`isBuy` = false AND `cartDetails`.`isDeleted` = false) AND `cartDetails`.`cartId` = `carts`.`id`) LIMIT 1 ) IS NOT NULL LIMIT 1) AS `carts` INNER JOIN `cartDetails` AS `cartDetails` ON `carts`.`id` = `cartDetails`.`cartId` AND `cartDetails`.`isBuy` = false AND `cartDetails`.`isDeleted` = false LEFT OUTER JOIN `products` AS `cartDetails->product` ON `cartDetails`.`productId` = `cartDetails->product`.`id`;
[2021-12-14 13:55:11] [[32minfo[39m] Executing (default): SELECT `carts`.*, `cartDetails`.`id` AS `cartDetails.id`, `cartDetails`.`quantity` AS `cartDetails.quantity`, `cartDetails`.`isBuy` AS `cartDetails.isBuy`, `cartDetails`.`isDeleted` AS `cartDetails.isDeleted`, `cartDetails`.`createdAt` AS `cartDetails.createdAt`, `cartDetails`.`updatedAt` AS `cartDetails.updatedAt`, `cartDetails`.`cartId` AS `cartDetails.cartId`, `cartDetails`.`productId` AS `cartDetails.productId`, `cartDetails->product`.`id` AS `cartDetails.product.id`, `cartDetails->product`.`proName` AS `cartDetails.product.proName`, `cartDetails->product`.`proDescription` AS `cartDetails.product.proDescription`, `cartDetails->product`.`quantityValue` AS `cartDetails.product.quantityValue`, `cartDetails->product`.`price` AS `cartDetails.product.price`, `cartDetails->product`.`brand` AS `cartDetails.product.brand`, `cartDetails->product`.`origin` AS `cartDetails.product.origin`, `cartDetails->product`.`productAt` AS `cartDetails.product.productAt`, `cartDetails->product`.`expireAt` AS `cartDetails.product.expireAt`, `cartDetails->product`.`manual` AS `cartDetails.product.manual`, `cartDetails->product`.`preserve` AS `cartDetails.product.preserve`, `cartDetails->product`.`productImage` AS `cartDetails.product.productImage`, `cartDetails->product`.`createdAt` AS `cartDetails.product.createdAt`, `cartDetails->product`.`updatedAt` AS `cartDetails.product.updatedAt`, `cartDetails->product`.`productCategoryId` AS `cartDetails.product.productCategoryId`, `cartDetails->product`.`quantityId` AS `cartDetails.product.quantityId` FROM (SELECT `carts`.`id`, `carts`.`createdAt`, `carts`.`updatedAt`, `carts`.`userId` FROM `carts` AS `carts` WHERE `carts`.`userId` = '2' AND ( SELECT `cartId` FROM `cartDetails` AS `cartDetails` WHERE ((`cartDetails`.`isBuy` = false AND `cartDetails`.`isDeleted` = false) AND `cartDetails`.`cartId` = `carts`.`id`) LIMIT 1 ) IS NOT NULL LIMIT 1) AS `carts` INNER JOIN `cartDetails` AS `cartDetails` ON `carts`.`id` = `cartDetails`.`cartId` AND `cartDetails`.`isBuy` = false AND `cartDetails`.`isDeleted` = false LEFT OUTER JOIN `products` AS `cartDetails->product` ON `cartDetails`.`productId` = `cartDetails->product`.`id`;
[2021-12-14 13:55:13] [[32minfo[39m] Executing (default): SELECT `carts`.*, `cartDetails`.`id` AS `cartDetails.id`, `cartDetails`.`quantity` AS `cartDetails.quantity`, `cartDetails`.`isBuy` AS `cartDetails.isBuy`, `cartDetails`.`isDeleted` AS `cartDetails.isDeleted`, `cartDetails`.`createdAt` AS `cartDetails.createdAt`, `cartDetails`.`updatedAt` AS `cartDetails.updatedAt`, `cartDetails`.`cartId` AS `cartDetails.cartId`, `cartDetails`.`productId` AS `cartDetails.productId`, `cartDetails->product`.`id` AS `cartDetails.product.id`, `cartDetails->product`.`proName` AS `cartDetails.product.proName`, `cartDetails->product`.`proDescription` AS `cartDetails.product.proDescription`, `cartDetails->product`.`quantityValue` AS `cartDetails.product.quantityValue`, `cartDetails->product`.`price` AS `cartDetails.product.price`, `cartDetails->product`.`brand` AS `cartDetails.product.brand`, `cartDetails->product`.`origin` AS `cartDetails.product.origin`, `cartDetails->product`.`productAt` AS `cartDetails.product.productAt`, `cartDetails->product`.`expireAt` AS `cartDetails.product.expireAt`, `cartDetails->product`.`manual` AS `cartDetails.product.manual`, `cartDetails->product`.`preserve` AS `cartDetails.product.preserve`, `cartDetails->product`.`productImage` AS `cartDetails.product.productImage`, `cartDetails->product`.`createdAt` AS `cartDetails.product.createdAt`, `cartDetails->product`.`updatedAt` AS `cartDetails.product.updatedAt`, `cartDetails->product`.`productCategoryId` AS `cartDetails.product.productCategoryId`, `cartDetails->product`.`quantityId` AS `cartDetails.product.quantityId` FROM (SELECT `carts`.`id`, `carts`.`createdAt`, `carts`.`updatedAt`, `carts`.`userId` FROM `carts` AS `carts` WHERE `carts`.`userId` = '2' AND ( SELECT `cartId` FROM `cartDetails` AS `cartDetails` WHERE ((`cartDetails`.`isBuy` = false AND `cartDetails`.`isDeleted` = false) AND `cartDetails`.`cartId` = `carts`.`id`) LIMIT 1 ) IS NOT NULL LIMIT 1) AS `carts` INNER JOIN `cartDetails` AS `cartDetails` ON `carts`.`id` = `cartDetails`.`cartId` AND `cartDetails`.`isBuy` = false AND `cartDetails`.`isDeleted` = false LEFT OUTER JOIN `products` AS `cartDetails->product` ON `cartDetails`.`productId` = `cartDetails->product`.`id`;
[2021-12-14 13:55:13] [[32minfo[39m] Executing (default): SELECT `carts`.*, `cartDetails`.`id` AS `cartDetails.id`, `cartDetails`.`quantity` AS `cartDetails.quantity`, `cartDetails`.`isBuy` AS `cartDetails.isBuy`, `cartDetails`.`isDeleted` AS `cartDetails.isDeleted`, `cartDetails`.`createdAt` AS `cartDetails.createdAt`, `cartDetails`.`updatedAt` AS `cartDetails.updatedAt`, `cartDetails`.`cartId` AS `cartDetails.cartId`, `cartDetails`.`productId` AS `cartDetails.productId`, `cartDetails->product`.`id` AS `cartDetails.product.id`, `cartDetails->product`.`proName` AS `cartDetails.product.proName`, `cartDetails->product`.`proDescription` AS `cartDetails.product.proDescription`, `cartDetails->product`.`quantityValue` AS `cartDetails.product.quantityValue`, `cartDetails->product`.`price` AS `cartDetails.product.price`, `cartDetails->product`.`brand` AS `cartDetails.product.brand`, `cartDetails->product`.`origin` AS `cartDetails.product.origin`, `cartDetails->product`.`productAt` AS `cartDetails.product.productAt`, `cartDetails->product`.`expireAt` AS `cartDetails.product.expireAt`, `cartDetails->product`.`manual` AS `cartDetails.product.manual`, `cartDetails->product`.`preserve` AS `cartDetails.product.preserve`, `cartDetails->product`.`productImage` AS `cartDetails.product.productImage`, `cartDetails->product`.`createdAt` AS `cartDetails.product.createdAt`, `cartDetails->product`.`updatedAt` AS `cartDetails.product.updatedAt`, `cartDetails->product`.`productCategoryId` AS `cartDetails.product.productCategoryId`, `cartDetails->product`.`quantityId` AS `cartDetails.product.quantityId` FROM (SELECT `carts`.`id`, `carts`.`createdAt`, `carts`.`updatedAt`, `carts`.`userId` FROM `carts` AS `carts` WHERE `carts`.`userId` = '2' AND ( SELECT `cartId` FROM `cartDetails` AS `cartDetails` WHERE ((`cartDetails`.`isBuy` = false AND `cartDetails`.`isDeleted` = false) AND `cartDetails`.`cartId` = `carts`.`id`) LIMIT 1 ) IS NOT NULL LIMIT 1) AS `carts` INNER JOIN `cartDetails` AS `cartDetails` ON `carts`.`id` = `cartDetails`.`cartId` AND `cartDetails`.`isBuy` = false AND `cartDetails`.`isDeleted` = false LEFT OUTER JOIN `products` AS `cartDetails->product` ON `cartDetails`.`productId` = `cartDetails->product`.`id`;
[2021-12-14 13:56:41] [[32minfo[39m] Executing (default): SELECT `carts`.*, `cartDetails`.`id` AS `cartDetails.id`, `cartDetails`.`quantity` AS `cartDetails.quantity`, `cartDetails`.`isBuy` AS `cartDetails.isBuy`, `cartDetails`.`isDeleted` AS `cartDetails.isDeleted`, `cartDetails`.`createdAt` AS `cartDetails.createdAt`, `cartDetails`.`updatedAt` AS `cartDetails.updatedAt`, `cartDetails`.`cartId` AS `cartDetails.cartId`, `cartDetails`.`productId` AS `cartDetails.productId`, `cartDetails->product`.`id` AS `cartDetails.product.id`, `cartDetails->product`.`proName` AS `cartDetails.product.proName`, `cartDetails->product`.`proDescription` AS `cartDetails.product.proDescription`, `cartDetails->product`.`quantityValue` AS `cartDetails.product.quantityValue`, `cartDetails->product`.`price` AS `cartDetails.product.price`, `cartDetails->product`.`brand` AS `cartDetails.product.brand`, `cartDetails->product`.`origin` AS `cartDetails.product.origin`, `cartDetails->product`.`productAt` AS `cartDetails.product.productAt`, `cartDetails->product`.`expireAt` AS `cartDetails.product.expireAt`, `cartDetails->product`.`manual` AS `cartDetails.product.manual`, `cartDetails->product`.`preserve` AS `cartDetails.product.preserve`, `cartDetails->product`.`productImage` AS `cartDetails.product.productImage`, `cartDetails->product`.`createdAt` AS `cartDetails.product.createdAt`, `cartDetails->product`.`updatedAt` AS `cartDetails.product.updatedAt`, `cartDetails->product`.`productCategoryId` AS `cartDetails.product.productCategoryId`, `cartDetails->product`.`quantityId` AS `cartDetails.product.quantityId` FROM (SELECT `carts`.`id`, `carts`.`createdAt`, `carts`.`updatedAt`, `carts`.`userId` FROM `carts` AS `carts` WHERE `carts`.`userId` = '2' AND ( SELECT `cartId` FROM `cartDetails` AS `cartDetails` WHERE ((`cartDetails`.`isBuy` = false AND `cartDetails`.`isDeleted` = false) AND `cartDetails`.`cartId` = `carts`.`id`) LIMIT 1 ) IS NOT NULL LIMIT 1) AS `carts` INNER JOIN `cartDetails` AS `cartDetails` ON `carts`.`id` = `cartDetails`.`cartId` AND `cartDetails`.`isBuy` = false AND `cartDetails`.`isDeleted` = false LEFT OUTER JOIN `products` AS `cartDetails->product` ON `cartDetails`.`productId` = `cartDetails->product`.`id`;
[2021-12-14 13:56:41] [[32minfo[39m] Executing (default): SELECT `carts`.*, `cartDetails`.`id` AS `cartDetails.id`, `cartDetails`.`quantity` AS `cartDetails.quantity`, `cartDetails`.`isBuy` AS `cartDetails.isBuy`, `cartDetails`.`isDeleted` AS `cartDetails.isDeleted`, `cartDetails`.`createdAt` AS `cartDetails.createdAt`, `cartDetails`.`updatedAt` AS `cartDetails.updatedAt`, `cartDetails`.`cartId` AS `cartDetails.cartId`, `cartDetails`.`productId` AS `cartDetails.productId`, `cartDetails->product`.`id` AS `cartDetails.product.id`, `cartDetails->product`.`proName` AS `cartDetails.product.proName`, `cartDetails->product`.`proDescription` AS `cartDetails.product.proDescription`, `cartDetails->product`.`quantityValue` AS `cartDetails.product.quantityValue`, `cartDetails->product`.`price` AS `cartDetails.product.price`, `cartDetails->product`.`brand` AS `cartDetails.product.brand`, `cartDetails->product`.`origin` AS `cartDetails.product.origin`, `cartDetails->product`.`productAt` AS `cartDetails.product.productAt`, `cartDetails->product`.`expireAt` AS `cartDetails.product.expireAt`, `cartDetails->product`.`manual` AS `cartDetails.product.manual`, `cartDetails->product`.`preserve` AS `cartDetails.product.preserve`, `cartDetails->product`.`productImage` AS `cartDetails.product.productImage`, `cartDetails->product`.`createdAt` AS `cartDetails.product.createdAt`, `cartDetails->product`.`updatedAt` AS `cartDetails.product.updatedAt`, `cartDetails->product`.`productCategoryId` AS `cartDetails.product.productCategoryId`, `cartDetails->product`.`quantityId` AS `cartDetails.product.quantityId` FROM (SELECT `carts`.`id`, `carts`.`createdAt`, `carts`.`updatedAt`, `carts`.`userId` FROM `carts` AS `carts` WHERE `carts`.`userId` = '2' AND ( SELECT `cartId` FROM `cartDetails` AS `cartDetails` WHERE ((`cartDetails`.`isBuy` = false AND `cartDetails`.`isDeleted` = false) AND `cartDetails`.`cartId` = `carts`.`id`) LIMIT 1 ) IS NOT NULL LIMIT 1) AS `carts` INNER JOIN `cartDetails` AS `cartDetails` ON `carts`.`id` = `cartDetails`.`cartId` AND `cartDetails`.`isBuy` = false AND `cartDetails`.`isDeleted` = false LEFT OUTER JOIN `products` AS `cartDetails->product` ON `cartDetails`.`productId` = `cartDetails->product`.`id`;
[2021-12-14 13:56:41] [[32minfo[39m] Executing (default): SELECT `carts`.*, `cartDetails`.`id` AS `cartDetails.id`, `cartDetails`.`quantity` AS `cartDetails.quantity`, `cartDetails`.`isBuy` AS `cartDetails.isBuy`, `cartDetails`.`isDeleted` AS `cartDetails.isDeleted`, `cartDetails`.`createdAt` AS `cartDetails.createdAt`, `cartDetails`.`updatedAt` AS `cartDetails.updatedAt`, `cartDetails`.`cartId` AS `cartDetails.cartId`, `cartDetails`.`productId` AS `cartDetails.productId`, `cartDetails->product`.`id` AS `cartDetails.product.id`, `cartDetails->product`.`proName` AS `cartDetails.product.proName`, `cartDetails->product`.`proDescription` AS `cartDetails.product.proDescription`, `cartDetails->product`.`quantityValue` AS `cartDetails.product.quantityValue`, `cartDetails->product`.`price` AS `cartDetails.product.price`, `cartDetails->product`.`brand` AS `cartDetails.product.brand`, `cartDetails->product`.`origin` AS `cartDetails.product.origin`, `cartDetails->product`.`productAt` AS `cartDetails.product.productAt`, `cartDetails->product`.`expireAt` AS `cartDetails.product.expireAt`, `cartDetails->product`.`manual` AS `cartDetails.product.manual`, `cartDetails->product`.`preserve` AS `cartDetails.product.preserve`, `cartDetails->product`.`productImage` AS `cartDetails.product.productImage`, `cartDetails->product`.`createdAt` AS `cartDetails.product.createdAt`, `cartDetails->product`.`updatedAt` AS `cartDetails.product.updatedAt`, `cartDetails->product`.`productCategoryId` AS `cartDetails.product.productCategoryId`, `cartDetails->product`.`quantityId` AS `cartDetails.product.quantityId` FROM (SELECT `carts`.`id`, `carts`.`createdAt`, `carts`.`updatedAt`, `carts`.`userId` FROM `carts` AS `carts` WHERE `carts`.`userId` = '2' AND ( SELECT `cartId` FROM `cartDetails` AS `cartDetails` WHERE ((`cartDetails`.`isBuy` = false AND `cartDetails`.`isDeleted` = false) AND `cartDetails`.`cartId` = `carts`.`id`) LIMIT 1 ) IS NOT NULL LIMIT 1) AS `carts` INNER JOIN `cartDetails` AS `cartDetails` ON `carts`.`id` = `cartDetails`.`cartId` AND `cartDetails`.`isBuy` = false AND `cartDetails`.`isDeleted` = false LEFT OUTER JOIN `products` AS `cartDetails->product` ON `cartDetails`.`productId` = `cartDetails->product`.`id`;
[2021-12-14 13:56:41] [[32minfo[39m] Executing (default): SELECT `carts`.*, `cartDetails`.`id` AS `cartDetails.id`, `cartDetails`.`quantity` AS `cartDetails.quantity`, `cartDetails`.`isBuy` AS `cartDetails.isBuy`, `cartDetails`.`isDeleted` AS `cartDetails.isDeleted`, `cartDetails`.`createdAt` AS `cartDetails.createdAt`, `cartDetails`.`updatedAt` AS `cartDetails.updatedAt`, `cartDetails`.`cartId` AS `cartDetails.cartId`, `cartDetails`.`productId` AS `cartDetails.productId`, `cartDetails->product`.`id` AS `cartDetails.product.id`, `cartDetails->product`.`proName` AS `cartDetails.product.proName`, `cartDetails->product`.`proDescription` AS `cartDetails.product.proDescription`, `cartDetails->product`.`quantityValue` AS `cartDetails.product.quantityValue`, `cartDetails->product`.`price` AS `cartDetails.product.price`, `cartDetails->product`.`brand` AS `cartDetails.product.brand`, `cartDetails->product`.`origin` AS `cartDetails.product.origin`, `cartDetails->product`.`productAt` AS `cartDetails.product.productAt`, `cartDetails->product`.`expireAt` AS `cartDetails.product.expireAt`, `cartDetails->product`.`manual` AS `cartDetails.product.manual`, `cartDetails->product`.`preserve` AS `cartDetails.product.preserve`, `cartDetails->product`.`productImage` AS `cartDetails.product.productImage`, `cartDetails->product`.`createdAt` AS `cartDetails.product.createdAt`, `cartDetails->product`.`updatedAt` AS `cartDetails.product.updatedAt`, `cartDetails->product`.`productCategoryId` AS `cartDetails.product.productCategoryId`, `cartDetails->product`.`quantityId` AS `cartDetails.product.quantityId` FROM (SELECT `carts`.`id`, `carts`.`createdAt`, `carts`.`updatedAt`, `carts`.`userId` FROM `carts` AS `carts` WHERE `carts`.`userId` = '2' AND ( SELECT `cartId` FROM `cartDetails` AS `cartDetails` WHERE ((`cartDetails`.`isBuy` = false AND `cartDetails`.`isDeleted` = false) AND `cartDetails`.`cartId` = `carts`.`id`) LIMIT 1 ) IS NOT NULL LIMIT 1) AS `carts` INNER JOIN `cartDetails` AS `cartDetails` ON `carts`.`id` = `cartDetails`.`cartId` AND `cartDetails`.`isBuy` = false AND `cartDetails`.`isDeleted` = false LEFT OUTER JOIN `products` AS `cartDetails->product` ON `cartDetails`.`productId` = `cartDetails->product`.`id`;
[2021-12-14 13:56:45] [[32minfo[39m] Executing (default): SELECT `id`, `username`, `email`, `password`, `firstname`, `lastname`, `gender`, `phone`, `birthday`, `address`, `userAvatar`, `createdAt`, `updatedAt` FROM `users` AS `users` WHERE `users`.`username` = 'phuctg2106';
[2021-12-14 13:56:45] [[32minfo[39m] Executing (default): SELECT `id`, `username`, `email`, `password`, `firstname`, `lastname`, `gender`, `phone`, `birthday`, `address`, `userAvatar`, `createdAt`, `updatedAt` FROM `users` AS `users` WHERE `users`.`id` = '2';
[2021-12-14 13:56:45] [[32minfo[39m] Executing (default): SELECT `createdAt`, `updatedAt`, `userId`, `foodCategoryId` FROM `favoriteFoodCategories` AS `favoriteFoodCategories` WHERE `favoriteFoodCategories`.`userId` = '2';
[2021-12-14 13:56:45] [[32minfo[39m] Request status: [object Object] data [object SequelizeInstance:users]
[2021-12-14 13:56:45] [[32minfo[39m] Executing (default): SELECT `createdAt`, `updatedAt`, `userId`, `foodCategoryId` FROM `favoriteFoodCategories` AS `favoriteFoodCategories` WHERE `favoriteFoodCategories`.`userId` = 2;
[2021-12-14 13:56:45] [[32minfo[39m] Request status: [object Object] data 
[2021-12-14 13:56:47] [[32minfo[39m] Executing (default): SELECT `id`, `username`, `email`, `password`, `firstname`, `lastname`, `gender`, `phone`, `birthday`, `address`, `userAvatar`, `createdAt`, `updatedAt` FROM `users` AS `users` WHERE `users`.`id` = '2';
[2021-12-14 13:56:47] [[32minfo[39m] Request status: [object Object] data [object SequelizeInstance:users]
[2021-12-14 13:56:47] [[32minfo[39m] Executing (default): SELECT `createdAt`, `updatedAt`, `userId`, `foodCategoryId` FROM `favoriteFoodCategories` AS `favoriteFoodCategories` WHERE `favoriteFoodCategories`.`userId` = 2;
[2021-12-14 13:56:47] [[32minfo[39m] Executing (default): SELECT `id`, `username`, `email`, `password`, `firstname`, `lastname`, `gender`, `phone`, `birthday`, `address`, `userAvatar`, `createdAt`, `updatedAt` FROM `users` AS `users` WHERE `users`.`id` = '2';
[2021-12-14 13:56:47] [[32minfo[39m] Request status: [object Object] data [object SequelizeInstance:users]
[2021-12-14 13:56:47] [[32minfo[39m] Executing (default): SELECT `createdAt`, `updatedAt`, `userId`, `foodCategoryId` FROM `favoriteFoodCategories` AS `favoriteFoodCategories` WHERE `favoriteFoodCategories`.`userId` = 2;
[2021-12-14 13:56:47] [[32minfo[39m] Executing (default): SELECT `createdAt`, `updatedAt`, `userId`, `foodCategoryId` FROM `favoriteFoodCategories` AS `favoriteFoodCategories` WHERE `favoriteFoodCategories`.`userId` = '2';
[2021-12-14 13:56:47] [[32minfo[39m] Request status: [object Object] data 
[2021-12-14 13:56:54] [[32minfo[39m] Executing (default): SELECT `id`, `username`, `email`, `password`, `firstname`, `lastname`, `gender`, `phone`, `birthday`, `address`, `userAvatar`, `createdAt`, `updatedAt` FROM `users` AS `users` WHERE `users`.`id` = '2';
[2021-12-14 13:56:54] [[32minfo[39m] Request status: [object Object] data [object SequelizeInstance:users]
[2021-12-14 13:57:16] [[32minfo[39m] Executing (default): SELECT `id`, `username`, `email`, `password`, `firstname`, `lastname`, `gender`, `phone`, `birthday`, `address`, `userAvatar`, `createdAt`, `updatedAt` FROM `users` AS `users` WHERE `users`.`id` = '2';
[2021-12-14 13:57:16] [[32minfo[39m] Request status: [object Object] data [object SequelizeInstance:users]
[2021-12-14 13:57:16] [[32minfo[39m] Executing (default): SELECT `createdAt`, `updatedAt`, `userId`, `foodCategoryId` FROM `favoriteFoodCategories` AS `favoriteFoodCategories` WHERE `favoriteFoodCategories`.`userId` = 2;
[2021-12-14 13:57:41] [[32minfo[39m] Executing (default): SELECT `id`, `name`, `createdAt`, `updatedAt` FROM `roles` AS `roles` WHERE (`roles`.`name` = 'user');
[2021-12-14 13:57:41] [[32minfo[39m] User baotg is registered
[2021-12-14 13:57:44] [[32minfo[39m] Executing (default): SELECT `id`, `username`, `email`, `password`, `firstname`, `lastname`, `gender`, `phone`, `birthday`, `address`, `userAvatar`, `createdAt`, `updatedAt` FROM `users` AS `users` WHERE `users`.`username` = 'baotg';
[2021-12-14 13:58:10] [[32minfo[39m] Executing (default): SELECT `id`, `username`, `email`, `password`, `firstname`, `lastname`, `gender`, `phone`, `birthday`, `address`, `userAvatar`, `createdAt`, `updatedAt` FROM `users` AS `users` WHERE `users`.`id` = '3';
[2021-12-14 13:58:10] [[32minfo[39m] Request status: [object Object] data [object SequelizeInstance:users]
[2021-12-14 13:58:21] [[32minfo[39m] Executing (default): SELECT `id`, `username`, `email`, `password`, `firstname`, `lastname`, `gender`, `phone`, `birthday`, `address`, `userAvatar`, `createdAt`, `updatedAt` FROM `users` AS `users` WHERE `users`.`id` = '2';
[2021-12-14 13:58:21] [[32minfo[39m] Request status: [object Object] data [object SequelizeInstance:users]
[2021-12-14 13:58:21] [[32minfo[39m] Executing (default): SELECT `createdAt`, `updatedAt`, `userId`, `foodCategoryId` FROM `favoriteFoodCategories` AS `favoriteFoodCategories` WHERE `favoriteFoodCategories`.`userId` = 2;
[2021-12-14 13:58:24] [[32minfo[39m] Executing (default): SELECT `id`, `username`, `email`, `password`, `firstname`, `lastname`, `gender`, `phone`, `birthday`, `address`, `userAvatar`, `createdAt`, `updatedAt` FROM `users` AS `users` WHERE `users`.`id` = '3';
[2021-12-14 13:58:24] [[32minfo[39m] Request status: [object Object] data [object SequelizeInstance:users]
[2021-12-14 13:58:24] [[32minfo[39m] Executing (default): SELECT `createdAt`, `updatedAt`, `userId`, `foodCategoryId` FROM `favoriteFoodCategories` AS `favoriteFoodCategories` WHERE `favoriteFoodCategories`.`userId` = 3;
[2021-12-14 14:01:46] [[32minfo[39m] Executing (default): SELECT `id`, `username`, `email`, `password`, `firstname`, `lastname`, `gender`, `phone`, `birthday`, `address`, `userAvatar`, `createdAt`, `updatedAt` FROM `users` AS `users` WHERE `users`.`username` = 'phuctg2106';
[2021-12-14 14:01:46] [[32minfo[39m] Executing (default): SELECT `id`, `username`, `email`, `password`, `firstname`, `lastname`, `gender`, `phone`, `birthday`, `address`, `userAvatar`, `createdAt`, `updatedAt` FROM `users` AS `users` WHERE `users`.`id` = '2';
[2021-12-14 14:01:46] [[32minfo[39m] Request status: [object Object] data [object SequelizeInstance:users]
[2021-12-14 14:01:46] [[32minfo[39m] Executing (default): SELECT `createdAt`, `updatedAt`, `userId`, `foodCategoryId` FROM `favoriteFoodCategories` AS `favoriteFoodCategories` WHERE `favoriteFoodCategories`.`userId` = 2;
[2021-12-14 14:01:46] [[32minfo[39m] Executing (default): SELECT `createdAt`, `updatedAt`, `userId`, `foodCategoryId` FROM `favoriteFoodCategories` AS `favoriteFoodCategories` WHERE `favoriteFoodCategories`.`userId` = '2';
[2021-12-14 14:01:46] [[32minfo[39m] Request status: [object Object] data 
[2021-12-14 14:01:48] [[32minfo[39m] Executing (default): SELECT `id`, `username`, `email`, `password`, `firstname`, `lastname`, `gender`, `phone`, `birthday`, `address`, `userAvatar`, `createdAt`, `updatedAt` FROM `users` AS `users` WHERE `users`.`id` = '2';
[2021-12-14 14:01:48] [[32minfo[39m] Request status: [object Object] data [object SequelizeInstance:users]
[2021-12-14 14:01:48] [[32minfo[39m] Executing (default): SELECT `createdAt`, `updatedAt`, `userId`, `foodCategoryId` FROM `favoriteFoodCategories` AS `favoriteFoodCategories` WHERE `favoriteFoodCategories`.`userId` = 2;
[2021-12-14 14:01:48] [[32minfo[39m] Executing (default): SELECT `id`, `username`, `email`, `password`, `firstname`, `lastname`, `gender`, `phone`, `birthday`, `address`, `userAvatar`, `createdAt`, `updatedAt` FROM `users` AS `users` WHERE `users`.`id` = '2';
[2021-12-14 14:01:48] [[32minfo[39m] Executing (default): SELECT `createdAt`, `updatedAt`, `userId`, `foodCategoryId` FROM `favoriteFoodCategories` AS `favoriteFoodCategories` WHERE `favoriteFoodCategories`.`userId` = '2';
[2021-12-14 14:01:48] [[32minfo[39m] Request status: [object Object] data [object SequelizeInstance:users]
[2021-12-14 14:01:48] [[32minfo[39m] Executing (default): SELECT `createdAt`, `updatedAt`, `userId`, `foodCategoryId` FROM `favoriteFoodCategories` AS `favoriteFoodCategories` WHERE `favoriteFoodCategories`.`userId` = 2;
[2021-12-14 14:01:48] [[32minfo[39m] Request status: [object Object] data 
[2021-12-14 14:04:24] [[32minfo[39m] Executing (default): SELECT `id`, `username`, `email`, `password`, `firstname`, `lastname`, `gender`, `phone`, `birthday`, `address`, `userAvatar`, `createdAt`, `updatedAt` FROM `users` AS `users` WHERE `users`.`username` = 'phuctg2106';
[2021-12-14 14:04:24] [[32minfo[39m] Executing (default): SELECT `id`, `username`, `email`, `password`, `firstname`, `lastname`, `gender`, `phone`, `birthday`, `address`, `userAvatar`, `createdAt`, `updatedAt` FROM `users` AS `users` WHERE `users`.`id` = '2';
[2021-12-14 14:04:24] [[32minfo[39m] Executing (default): SELECT `createdAt`, `updatedAt`, `userId`, `foodCategoryId` FROM `favoriteFoodCategories` AS `favoriteFoodCategories` WHERE `favoriteFoodCategories`.`userId` = '2';
[2021-12-14 14:04:24] [[32minfo[39m] Request status: [object Object] data [object SequelizeInstance:users]
[2021-12-14 14:04:24] [[32minfo[39m] Executing (default): SELECT `createdAt`, `updatedAt`, `userId`, `foodCategoryId` FROM `favoriteFoodCategories` AS `favoriteFoodCategories` WHERE `favoriteFoodCategories`.`userId` = 2;
[2021-12-14 14:04:24] [[32minfo[39m] Request status: [object Object] data 
[2021-12-14 14:04:26] [[32minfo[39m] Executing (default): SELECT `id`, `username`, `email`, `password`, `firstname`, `lastname`, `gender`, `phone`, `birthday`, `address`, `userAvatar`, `createdAt`, `updatedAt` FROM `users` AS `users` WHERE `users`.`id` = '2';
[2021-12-14 14:04:26] [[32minfo[39m] Request status: [object Object] data [object SequelizeInstance:users]
[2021-12-14 14:04:26] [[32minfo[39m] Executing (default): SELECT `createdAt`, `updatedAt`, `userId`, `foodCategoryId` FROM `favoriteFoodCategories` AS `favoriteFoodCategories` WHERE `favoriteFoodCategories`.`userId` = 2;
[2021-12-14 14:04:26] [[32minfo[39m] Executing (default): SELECT `id`, `username`, `email`, `password`, `firstname`, `lastname`, `gender`, `phone`, `birthday`, `address`, `userAvatar`, `createdAt`, `updatedAt` FROM `users` AS `users` WHERE `users`.`id` = '2';
[2021-12-14 14:04:26] [[32minfo[39m] Request status: [object Object] data [object SequelizeInstance:users]
[2021-12-14 14:04:26] [[32minfo[39m] Executing (default): SELECT `createdAt`, `updatedAt`, `userId`, `foodCategoryId` FROM `favoriteFoodCategories` AS `favoriteFoodCategories` WHERE `favoriteFoodCategories`.`userId` = 2;
[2021-12-14 14:04:26] [[32minfo[39m] Executing (default): SELECT `createdAt`, `updatedAt`, `userId`, `foodCategoryId` FROM `favoriteFoodCategories` AS `favoriteFoodCategories` WHERE `favoriteFoodCategories`.`userId` = '2';
[2021-12-14 14:04:26] [[32minfo[39m] Request status: [object Object] data 
[2021-12-14 14:07:00] [[32minfo[39m] Executing (default): SELECT `id`, `username`, `email`, `password`, `firstname`, `lastname`, `gender`, `phone`, `birthday`, `address`, `userAvatar`, `createdAt`, `updatedAt` FROM `users` AS `users` WHERE `users`.`username` = 'phuctg2106';
[2021-12-14 14:07:00] [[32minfo[39m] Executing (default): SELECT `id`, `username`, `email`, `password`, `firstname`, `lastname`, `gender`, `phone`, `birthday`, `address`, `userAvatar`, `createdAt`, `updatedAt` FROM `users` AS `users` WHERE `users`.`id` = '2';
[2021-12-14 14:07:00] [[32minfo[39m] Executing (default): SELECT `createdAt`, `updatedAt`, `userId`, `foodCategoryId` FROM `favoriteFoodCategories` AS `favoriteFoodCategories` WHERE `favoriteFoodCategories`.`userId` = '2';
[2021-12-14 14:07:00] [[32minfo[39m] Request status: [object Object] data [object SequelizeInstance:users]
[2021-12-14 14:07:00] [[32minfo[39m] Executing (default): SELECT `createdAt`, `updatedAt`, `userId`, `foodCategoryId` FROM `favoriteFoodCategories` AS `favoriteFoodCategories` WHERE `favoriteFoodCategories`.`userId` = 2;
[2021-12-14 14:07:00] [[32minfo[39m] Request status: [object Object] data 
[2021-12-14 14:07:02] [[32minfo[39m] Executing (default): SELECT `id`, `username`, `email`, `password`, `firstname`, `lastname`, `gender`, `phone`, `birthday`, `address`, `userAvatar`, `createdAt`, `updatedAt` FROM `users` AS `users` WHERE `users`.`id` = '2';
[2021-12-14 14:07:02] [[32minfo[39m] Request status: [object Object] data [object SequelizeInstance:users]
[2021-12-14 14:07:02] [[32minfo[39m] Executing (default): SELECT `createdAt`, `updatedAt`, `userId`, `foodCategoryId` FROM `favoriteFoodCategories` AS `favoriteFoodCategories` WHERE `favoriteFoodCategories`.`userId` = 2;
[2021-12-14 14:07:02] [[32minfo[39m] Executing (default): SELECT `id`, `username`, `email`, `password`, `firstname`, `lastname`, `gender`, `phone`, `birthday`, `address`, `userAvatar`, `createdAt`, `updatedAt` FROM `users` AS `users` WHERE `users`.`id` = '2';
[2021-12-14 14:07:02] [[32minfo[39m] Executing (default): SELECT `createdAt`, `updatedAt`, `userId`, `foodCategoryId` FROM `favoriteFoodCategories` AS `favoriteFoodCategories` WHERE `favoriteFoodCategories`.`userId` = '2';
[2021-12-14 14:07:02] [[32minfo[39m] Request status: [object Object] data [object SequelizeInstance:users]
[2021-12-14 14:07:02] [[32minfo[39m] Executing (default): SELECT `createdAt`, `updatedAt`, `userId`, `foodCategoryId` FROM `favoriteFoodCategories` AS `favoriteFoodCategories` WHERE `favoriteFoodCategories`.`userId` = 2;
[2021-12-14 14:07:02] [[32minfo[39m] Request status: [object Object] data 
[2021-12-14 14:53:23] [[32minfo[39m] Server is running on port 8080
[2021-12-14 14:53:23] [[32minfo[39m] Executing (default): DROP TABLE IF EXISTS `user_roles`;
[2021-12-14 14:53:23] [[32minfo[39m] Executing (default): DROP TABLE IF EXISTS `marketNotes`;
[2021-12-14 14:53:23] [[32minfo[39m] Executing (default): DROP TABLE IF EXISTS `address-villages`;
[2021-12-14 14:53:23] [[32minfo[39m] Executing (default): DROP TABLE IF EXISTS `address-districts`;
[2021-12-14 14:53:23] [[32minfo[39m] Executing (default): DROP TABLE IF EXISTS `address-provinces`;
[2021-12-14 14:53:23] [[32minfo[39m] Executing (default): DROP TABLE IF EXISTS `favoriteFoodCategories`;
[2021-12-14 14:53:23] [[32minfo[39m] Executing (default): DROP TABLE IF EXISTS `orderDetails`;
[2021-12-14 14:53:23] [[32minfo[39m] Executing (default): DROP TABLE IF EXISTS `orders`;
[2021-12-14 14:53:23] [[32minfo[39m] Executing (default): DROP TABLE IF EXISTS `paymentMethods`;
[2021-12-14 14:53:23] [[32minfo[39m] Executing (default): DROP TABLE IF EXISTS `deliveryMethods`;
[2021-12-14 14:53:23] [[32minfo[39m] Executing (default): DROP TABLE IF EXISTS `cartDetails`;
[2021-12-14 14:53:23] [[32minfo[39m] Executing (default): DROP TABLE IF EXISTS `carts`;
[2021-12-14 14:53:23] [[32minfo[39m] Executing (default): DROP TABLE IF EXISTS `foodCookSteps`;
[2021-12-14 14:53:23] [[32minfo[39m] Executing (default): DROP TABLE IF EXISTS `foodMaterials`;
[2021-12-14 14:53:23] [[32minfo[39m] Executing (default): DROP TABLE IF EXISTS `products`;
[2021-12-14 14:53:23] [[32minfo[39m] Executing (default): DROP TABLE IF EXISTS `quantities`;
[2021-12-14 14:53:23] [[32minfo[39m] Executing (default): DROP TABLE IF EXISTS `productCategories`;
[2021-12-14 14:53:23] [[32minfo[39m] Executing (default): DROP TABLE IF EXISTS `foods`;
[2021-12-14 14:53:23] [[32minfo[39m] Executing (default): DROP TABLE IF EXISTS `foodCategories`;
[2021-12-14 14:53:23] [[32minfo[39m] Executing (default): DROP TABLE IF EXISTS `roles`;
[2021-12-14 14:53:23] [[32minfo[39m] Executing (default): DROP TABLE IF EXISTS `users`;
[2021-12-14 14:53:23] [[32minfo[39m] Executing (default): DROP TABLE IF EXISTS `users`;
[2021-12-14 14:53:23] [[32minfo[39m] Executing (default): CREATE TABLE IF NOT EXISTS `users` (`id` INTEGER NOT NULL auto_increment , `username` VARCHAR(255) UNIQUE, `email` VARCHAR(255) UNIQUE, `password` VARCHAR(255), `firstname` VARCHAR(255), `lastname` VARCHAR(255), `gender` VARCHAR(255), `phone` VARCHAR(255), `birthday` DATE, `address` VARCHAR(255), `userAvatar` VARCHAR(255), `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, PRIMARY KEY (`id`)) ENGINE=InnoDB;
[2021-12-14 14:53:23] [[32minfo[39m] Executing (default): SHOW INDEX FROM `users`
[2021-12-14 14:53:23] [[32minfo[39m] Executing (default): DROP TABLE IF EXISTS `roles`;
[2021-12-14 14:53:23] [[32minfo[39m] Executing (default): CREATE TABLE IF NOT EXISTS `roles` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255), `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, PRIMARY KEY (`id`)) ENGINE=InnoDB;
[2021-12-14 14:53:23] [[32minfo[39m] Executing (default): SHOW INDEX FROM `roles`
[2021-12-14 14:53:24] [[32minfo[39m] Executing (default): DROP TABLE IF EXISTS `foodCategories`;
[2021-12-14 14:53:24] [[32minfo[39m] Executing (default): CREATE TABLE IF NOT EXISTS `foodCategories` (`id` INTEGER NOT NULL auto_increment , `catName` VARCHAR(255), `catIcon` VARCHAR(255), `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, PRIMARY KEY (`id`)) ENGINE=InnoDB;
[2021-12-14 14:53:24] [[32minfo[39m] Executing (default): SHOW INDEX FROM `foodCategories`
[2021-12-14 14:53:24] [[32minfo[39m] Executing (default): DROP TABLE IF EXISTS `foods`;
[2021-12-14 14:53:24] [[32minfo[39m] Executing (default): CREATE TABLE IF NOT EXISTS `foods` (`id` INTEGER NOT NULL auto_increment , `foodName` VARCHAR(255), `foodDescription` VARCHAR(255), `foodCalories` FLOAT, `foodImage` VARCHAR(255), `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, `foodCategoryId` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`foodCategoryId`) REFERENCES `foodCategories` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;
[2021-12-14 14:53:24] [[32minfo[39m] Executing (default): SHOW INDEX FROM `foods`
[2021-12-14 14:53:24] [[32minfo[39m] Executing (default): ALTER TABLE `foods` ADD FULLTEXT INDEX `food_index` (`foodName`)
[2021-12-14 14:53:24] [[32minfo[39m] Executing (default): DROP TABLE IF EXISTS `productCategories`;
[2021-12-14 14:53:24] [[32minfo[39m] Executing (default): CREATE TABLE IF NOT EXISTS `productCategories` (`id` INTEGER NOT NULL auto_increment , `catName` VARCHAR(255), `catIcon` VARCHAR(255), `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, PRIMARY KEY (`id`)) ENGINE=InnoDB;
[2021-12-14 14:53:24] [[32minfo[39m] Executing (default): SHOW INDEX FROM `productCategories`
[2021-12-14 14:53:24] [[32minfo[39m] Executing (default): DROP TABLE IF EXISTS `quantities`;
[2021-12-14 14:53:24] [[32minfo[39m] Executing (default): CREATE TABLE IF NOT EXISTS `quantities` (`id` INTEGER NOT NULL auto_increment , `quantityName` VARCHAR(255), `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, PRIMARY KEY (`id`)) ENGINE=InnoDB;
[2021-12-14 14:53:24] [[32minfo[39m] Executing (default): SHOW INDEX FROM `quantities`
[2021-12-14 14:53:24] [[32minfo[39m] Executing (default): DROP TABLE IF EXISTS `products`;
[2021-12-14 14:53:24] [[32minfo[39m] Executing (default): CREATE TABLE IF NOT EXISTS `products` (`id` INTEGER NOT NULL auto_increment , `proName` VARCHAR(255), `proDescription` VARCHAR(255), `quantityValue` FLOAT, `price` FLOAT, `brand` VARCHAR(255), `origin` VARCHAR(255), `productAt` DATE, `expireAt` VARCHAR(255), `manual` VARCHAR(255), `preserve` VARCHAR(255), `productImage` VARCHAR(255), `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, `productCategoryId` INTEGER, `quantityId` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`productCategoryId`) REFERENCES `productCategories` (`id`) ON DELETE SET NULL ON UPDATE CASCADE, FOREIGN KEY (`quantityId`) REFERENCES `quantities` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;
[2021-12-14 14:53:24] [[32minfo[39m] Executing (default): SHOW INDEX FROM `products`
[2021-12-14 14:53:24] [[32minfo[39m] Executing (default): ALTER TABLE `products` ADD FULLTEXT INDEX `product_index` (`proName`)
[2021-12-14 14:53:25] [[32minfo[39m] Executing (default): DROP TABLE IF EXISTS `foodMaterials`;
[2021-12-14 14:53:25] [[32minfo[39m] Executing (default): CREATE TABLE IF NOT EXISTS `foodMaterials` (`id` INTEGER NOT NULL auto_increment , `foodMaterialName` VARCHAR(255), `quantityDescription` VARCHAR(255), `quantityValue` FLOAT, `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, `foodId` INTEGER, `productId` INTEGER, `quantityId` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`foodId`) REFERENCES `foods` (`id`) ON DELETE SET NULL ON UPDATE CASCADE, FOREIGN KEY (`productId`) REFERENCES `products` (`id`) ON DELETE SET NULL ON UPDATE CASCADE, FOREIGN KEY (`quantityId`) REFERENCES `quantities` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;
[2021-12-14 14:53:25] [[32minfo[39m] Executing (default): SHOW INDEX FROM `foodMaterials`
[2021-12-14 14:53:25] [[32minfo[39m] Executing (default): DROP TABLE IF EXISTS `foodCookSteps`;
[2021-12-14 14:53:25] [[32minfo[39m] Executing (default): CREATE TABLE IF NOT EXISTS `foodCookSteps` (`id` INTEGER NOT NULL auto_increment , `stepNumber` INTEGER, `stepDescription` VARCHAR(255), `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, `foodId` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`foodId`) REFERENCES `foods` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;
[2021-12-14 14:53:25] [[32minfo[39m] Executing (default): SHOW INDEX FROM `foodCookSteps`
[2021-12-14 14:53:25] [[32minfo[39m] Executing (default): DROP TABLE IF EXISTS `carts`;
[2021-12-14 14:53:25] [[32minfo[39m] Executing (default): CREATE TABLE IF NOT EXISTS `carts` (`id` INTEGER NOT NULL auto_increment , `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, `userId` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`userId`) REFERENCES `users` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;
[2021-12-14 14:53:25] [[32minfo[39m] Executing (default): SHOW INDEX FROM `carts`
[2021-12-14 14:53:25] [[32minfo[39m] Executing (default): DROP TABLE IF EXISTS `cartDetails`;
[2021-12-14 14:53:25] [[32minfo[39m] Executing (default): CREATE TABLE IF NOT EXISTS `cartDetails` (`id` INTEGER NOT NULL auto_increment , `quantity` INTEGER, `isBuy` TINYINT(1), `isDeleted` TINYINT(1), `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, `cartId` INTEGER, `productId` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`cartId`) REFERENCES `carts` (`id`) ON DELETE SET NULL ON UPDATE CASCADE, FOREIGN KEY (`productId`) REFERENCES `products` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;
[2021-12-14 14:53:25] [[32minfo[39m] Executing (default): SHOW INDEX FROM `cartDetails`
[2021-12-14 14:53:25] [[32minfo[39m] Executing (default): DROP TABLE IF EXISTS `deliveryMethods`;
[2021-12-14 14:53:25] [[32minfo[39m] Executing (default): CREATE TABLE IF NOT EXISTS `deliveryMethods` (`id` INTEGER NOT NULL auto_increment , `deliveryMethod` VARCHAR(255), `fee` FLOAT, `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, PRIMARY KEY (`id`)) ENGINE=InnoDB;
[2021-12-14 14:53:25] [[32minfo[39m] Executing (default): SHOW INDEX FROM `deliveryMethods`
[2021-12-14 14:53:25] [[32minfo[39m] Executing (default): DROP TABLE IF EXISTS `paymentMethods`;
[2021-12-14 14:53:25] [[32minfo[39m] Executing (default): CREATE TABLE IF NOT EXISTS `paymentMethods` (`id` INTEGER NOT NULL auto_increment , `paymentType` VARCHAR(255), `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, PRIMARY KEY (`id`)) ENGINE=InnoDB;
[2021-12-14 14:53:25] [[32minfo[39m] Executing (default): SHOW INDEX FROM `paymentMethods`
[2021-12-14 14:53:25] [[32minfo[39m] Executing (default): DROP TABLE IF EXISTS `orders`;
[2021-12-14 14:53:25] [[32minfo[39m] Executing (default): CREATE TABLE IF NOT EXISTS `orders` (`id` INTEGER NOT NULL auto_increment , `addressDelivery` VARCHAR(255), `deliveryAt` DATE, `orderStatus` TINYINT(1), `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, `userId` INTEGER, `deliveryMethodId` INTEGER, `shipperId` INTEGER, `paymentMethodId` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`userId`) REFERENCES `users` (`id`) ON DELETE SET NULL ON UPDATE CASCADE, FOREIGN KEY (`deliveryMethodId`) REFERENCES `deliveryMethods` (`id`) ON DELETE SET NULL ON UPDATE CASCADE, FOREIGN KEY (`shipperId`) REFERENCES `users` (`id`) ON DELETE SET NULL ON UPDATE CASCADE, FOREIGN KEY (`paymentMethodId`) REFERENCES `paymentMethods` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;
[2021-12-14 14:53:25] [[32minfo[39m] Executing (default): SHOW INDEX FROM `orders`
[2021-12-14 14:53:25] [[32minfo[39m] Executing (default): DROP TABLE IF EXISTS `orderDetails`;
[2021-12-14 14:53:25] [[32minfo[39m] Executing (default): CREATE TABLE IF NOT EXISTS `orderDetails` (`id` INTEGER NOT NULL auto_increment , `quantity` INTEGER, `price` FLOAT, `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, `orderId` INTEGER, `productId` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`orderId`) REFERENCES `orders` (`id`) ON DELETE SET NULL ON UPDATE CASCADE, FOREIGN KEY (`productId`) REFERENCES `products` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;
[2021-12-14 14:53:25] [[32minfo[39m] Executing (default): SHOW INDEX FROM `orderDetails`
[2021-12-14 14:53:26] [[32minfo[39m] Executing (default): DROP TABLE IF EXISTS `favoriteFoodCategories`;
[2021-12-14 14:53:26] [[32minfo[39m] Executing (default): CREATE TABLE IF NOT EXISTS `favoriteFoodCategories` (`createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, `userId` INTEGER , `foodCategoryId` INTEGER , PRIMARY KEY (`userId`, `foodCategoryId`), FOREIGN KEY (`userId`) REFERENCES `users` (`id`) ON DELETE CASCADE ON UPDATE CASCADE, FOREIGN KEY (`foodCategoryId`) REFERENCES `foodCategories` (`id`) ON DELETE CASCADE ON UPDATE CASCADE) ENGINE=InnoDB;
[2021-12-14 14:53:26] [[32minfo[39m] Executing (default): SHOW INDEX FROM `favoriteFoodCategories`
[2021-12-14 14:53:26] [[32minfo[39m] Executing (default): DROP TABLE IF EXISTS `address-provinces`;
[2021-12-14 14:53:26] [[32minfo[39m] Executing (default): CREATE TABLE IF NOT EXISTS `address-provinces` (`id` INTEGER NOT NULL auto_increment , `province` VARCHAR(255), `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, PRIMARY KEY (`id`)) ENGINE=InnoDB;
[2021-12-14 14:53:26] [[32minfo[39m] Executing (default): SHOW INDEX FROM `address-provinces`
[2021-12-14 14:53:26] [[32minfo[39m] Executing (default): DROP TABLE IF EXISTS `address-districts`;
[2021-12-14 14:53:26] [[32minfo[39m] Executing (default): CREATE TABLE IF NOT EXISTS `address-districts` (`id` INTEGER NOT NULL auto_increment , `district` VARCHAR(255), `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, `addressProvinceId` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`addressProvinceId`) REFERENCES `address-provinces` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;
[2021-12-14 14:53:26] [[32minfo[39m] Executing (default): SHOW INDEX FROM `address-districts`
[2021-12-14 14:53:26] [[32minfo[39m] Executing (default): DROP TABLE IF EXISTS `address-villages`;
[2021-12-14 14:53:26] [[32minfo[39m] Executing (default): CREATE TABLE IF NOT EXISTS `address-villages` (`id` INTEGER NOT NULL auto_increment , `village` VARCHAR(255), `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, `addressDistrictId` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`addressDistrictId`) REFERENCES `address-districts` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;
[2021-12-14 14:53:26] [[32minfo[39m] Executing (default): SHOW INDEX FROM `address-villages`
[2021-12-14 14:53:26] [[32minfo[39m] Executing (default): DROP TABLE IF EXISTS `marketNotes`;
[2021-12-14 14:53:26] [[32minfo[39m] Executing (default): CREATE TABLE IF NOT EXISTS `marketNotes` (`id` INTEGER NOT NULL auto_increment , `marketNoteText` VARCHAR(255), `remindDate` DATE, `isDone` TINYINT(1), `isDeleted` TINYINT(1), `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, `userId` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`userId`) REFERENCES `users` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;
[2021-12-14 14:53:26] [[32minfo[39m] Executing (default): SHOW INDEX FROM `marketNotes`
[2021-12-14 14:53:26] [[32minfo[39m] Executing (default): DROP TABLE IF EXISTS `user_roles`;
[2021-12-14 14:53:26] [[32minfo[39m] Executing (default): CREATE TABLE IF NOT EXISTS `user_roles` (`createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, `roleId` INTEGER , `userId` INTEGER , PRIMARY KEY (`roleId`, `userId`), FOREIGN KEY (`roleId`) REFERENCES `roles` (`id`) ON DELETE CASCADE ON UPDATE CASCADE, FOREIGN KEY (`userId`) REFERENCES `users` (`id`) ON DELETE CASCADE ON UPDATE CASCADE) ENGINE=InnoDB;
[2021-12-14 14:53:26] [[32minfo[39m] Executing (default): SHOW INDEX FROM `user_roles`
[2021-12-14 14:53:26] [[32minfo[39m] Dropped and Resync database
[2021-12-14 14:57:27] [[32minfo[39m] Executing (default): SELECT `id`, `username`, `email`, `password`, `firstname`, `lastname`, `gender`, `phone`, `birthday`, `address`, `userAvatar`, `createdAt`, `updatedAt` FROM `users` AS `users` WHERE `users`.`username` = 'phuctg';
[2021-12-14 14:57:34] [[32minfo[39m] Executing (default): SELECT `id`, `username`, `email`, `password`, `firstname`, `lastname`, `gender`, `phone`, `birthday`, `address`, `userAvatar`, `createdAt`, `updatedAt` FROM `users` AS `users` WHERE `users`.`username` = 'phuctg';
[2021-12-14 14:57:34] [[32minfo[39m] Executing (default): SELECT `id`, `username`, `email`, `password`, `firstname`, `lastname`, `gender`, `phone`, `birthday`, `address`, `userAvatar`, `createdAt`, `updatedAt` FROM `users` AS `users` WHERE `users`.`id` = '1';
[2021-12-14 14:57:34] [[32minfo[39m] Executing (default): SELECT `createdAt`, `updatedAt`, `userId`, `foodCategoryId` FROM `favoriteFoodCategories` AS `favoriteFoodCategories` WHERE `favoriteFoodCategories`.`userId` = '1';
[2021-12-14 14:57:34] [[32minfo[39m] Request status: [object Object] data [object SequelizeInstance:users]
[2021-12-14 14:57:34] [[31merror[39m] Request status: [object Object] error Error: ENOENT: no such file or directory, open 'D:\git\CNPMM\BEnull'
[2021-12-14 14:57:34] [[32minfo[39m] Request status: [object Object] data 
[2021-12-14 14:57:38] [[32minfo[39m] Executing (default): SELECT `id`, `username`, `email`, `password`, `firstname`, `lastname`, `gender`, `phone`, `birthday`, `address`, `userAvatar`, `createdAt`, `updatedAt` FROM `users` AS `users` WHERE `users`.`id` = '1';
[2021-12-14 14:57:38] [[32minfo[39m] Request status: [object Object] data [object SequelizeInstance:users]
[2021-12-14 14:57:38] [[31merror[39m] Request status: [object Object] error Error: ENOENT: no such file or directory, open 'D:\git\CNPMM\BEnull'
[2021-12-14 14:57:38] [[32minfo[39m] Executing (default): SELECT `id`, `username`, `email`, `password`, `firstname`, `lastname`, `gender`, `phone`, `birthday`, `address`, `userAvatar`, `createdAt`, `updatedAt` FROM `users` AS `users` WHERE `users`.`id` = '1';
[2021-12-14 14:57:38] [[32minfo[39m] Executing (default): SELECT `createdAt`, `updatedAt`, `userId`, `foodCategoryId` FROM `favoriteFoodCategories` AS `favoriteFoodCategories` WHERE `favoriteFoodCategories`.`userId` = '1';
[2021-12-14 14:57:38] [[32minfo[39m] Request status: [object Object] data [object SequelizeInstance:users]
[2021-12-14 14:57:38] [[31merror[39m] Request status: [object Object] error Error: ENOENT: no such file or directory, open 'D:\git\CNPMM\BEnull'
[2021-12-14 14:57:38] [[32minfo[39m] Request status: [object Object] data 
[2021-12-14 14:57:52] [[32minfo[39m] Executing (default): SELECT `id`, `username`, `email`, `password`, `firstname`, `lastname`, `gender`, `phone`, `birthday`, `address`, `userAvatar`, `createdAt`, `updatedAt` FROM `users` AS `users` WHERE `users`.`id` = 'undefined';
[2021-12-14 14:57:52] [[31merror[39m] Request status: [object Object]  error User not found
[2021-12-14 14:58:03] [[32minfo[39m] Executing (default): SELECT `id`, `username`, `email`, `password`, `firstname`, `lastname`, `gender`, `phone`, `birthday`, `address`, `userAvatar`, `createdAt`, `updatedAt` FROM `users` AS `users` WHERE `users`.`username` = 'phuctg';
[2021-12-14 14:58:03] [[32minfo[39m] Executing (default): SELECT `id`, `username`, `email`, `password`, `firstname`, `lastname`, `gender`, `phone`, `birthday`, `address`, `userAvatar`, `createdAt`, `updatedAt` FROM `users` AS `users` WHERE `users`.`id` = '1';
[2021-12-14 14:58:03] [[32minfo[39m] Request status: [object Object] data [object SequelizeInstance:users]
[2021-12-14 14:58:03] [[31merror[39m] Request status: [object Object] error Error: ENOENT: no such file or directory, open 'D:\git\CNPMM\BEnull'
[2021-12-14 14:58:03] [[32minfo[39m] Executing (default): SELECT `createdAt`, `updatedAt`, `userId`, `foodCategoryId` FROM `favoriteFoodCategories` AS `favoriteFoodCategories` WHERE `favoriteFoodCategories`.`userId` = '1';
[2021-12-14 14:58:03] [[32minfo[39m] Request status: [object Object] data 
[2021-12-14 14:58:05] [[32minfo[39m] Executing (default): SELECT `id`, `username`, `email`, `password`, `firstname`, `lastname`, `gender`, `phone`, `birthday`, `address`, `userAvatar`, `createdAt`, `updatedAt` FROM `users` AS `users` WHERE `users`.`id` = '1';
[2021-12-14 14:58:05] [[32minfo[39m] Request status: [object Object] data [object SequelizeInstance:users]
[2021-12-14 14:58:05] [[31merror[39m] Request status: [object Object] error Error: ENOENT: no such file or directory, open 'D:\git\CNPMM\BEnull'
[2021-12-14 14:58:05] [[32minfo[39m] Executing (default): SELECT `id`, `username`, `email`, `password`, `firstname`, `lastname`, `gender`, `phone`, `birthday`, `address`, `userAvatar`, `createdAt`, `updatedAt` FROM `users` AS `users` WHERE `users`.`id` = '1';
[2021-12-14 14:58:05] [[32minfo[39m] Executing (default): SELECT `createdAt`, `updatedAt`, `userId`, `foodCategoryId` FROM `favoriteFoodCategories` AS `favoriteFoodCategories` WHERE `favoriteFoodCategories`.`userId` = '1';
[2021-12-14 14:58:05] [[32minfo[39m] Request status: [object Object] data [object SequelizeInstance:users]
[2021-12-14 14:58:05] [[31merror[39m] Request status: [object Object] error Error: ENOENT: no such file or directory, open 'D:\git\CNPMM\BEnull'
[2021-12-14 14:58:05] [[32minfo[39m] Request status: [object Object] data 
[2021-12-14 14:58:07] [[32minfo[39m] Executing (default): SELECT `id`, `username`, `email`, `password`, `firstname`, `lastname`, `gender`, `phone`, `birthday`, `address`, `userAvatar`, `createdAt`, `updatedAt` FROM `users` AS `users` WHERE `users`.`id` = '1';
[2021-12-14 14:58:07] [[32minfo[39m] Executing (default): SELECT `createdAt`, `updatedAt`, `userId`, `foodCategoryId` FROM `favoriteFoodCategories` AS `favoriteFoodCategories` WHERE `favoriteFoodCategories`.`userId` = '1';
[2021-12-14 14:58:07] [[32minfo[39m] Request status: [object Object] data [object SequelizeInstance:users]
[2021-12-14 14:58:07] [[31merror[39m] Request status: [object Object] error Error: ENOENT: no such file or directory, open 'D:\git\CNPMM\BEnull'
[2021-12-14 14:58:07] [[32minfo[39m] Request status: [object Object] data 
[2021-12-14 14:58:11] [[32minfo[39m] Executing (default): SELECT `id`, `catName` FROM `productCategories` AS `productCategories`;
[2021-12-14 14:58:11] [[32minfo[39m] Request status: [object Object] data [object SequelizeInstance:productCategories],[object SequelizeInstance:productCategories],[object SequelizeInstance:productCategories],[object SequelizeInstance:productCategories],[object SequelizeInstance:productCategories]
[2021-12-14 14:58:11] [[32minfo[39m] Executing (default): SELECT `id`, `username`, `email`, `password`, `firstname`, `lastname`, `gender`, `phone`, `birthday`, `address`, `userAvatar`, `createdAt`, `updatedAt` FROM `users` AS `users` WHERE `users`.`id` = '1';
[2021-12-14 14:58:11] [[32minfo[39m] Executing (default): SELECT `createdAt`, `updatedAt`, `userId`, `foodCategoryId` FROM `favoriteFoodCategories` AS `favoriteFoodCategories` WHERE `favoriteFoodCategories`.`userId` = '1';
[2021-12-14 14:58:11] [[32minfo[39m] Request status: [object Object] data [object SequelizeInstance:users]
[2021-12-14 14:58:11] [[31merror[39m] Request status: [object Object] error Error: ENOENT: no such file or directory, open 'D:\git\CNPMM\BEnull'
[2021-12-14 14:58:11] [[32minfo[39m] Request status: [object Object] data 
[2021-12-14 14:58:14] [[32minfo[39m] Executing (default): SELECT `id`, `proName`, `proDescription`, `quantityValue`, `price`, `brand`, `origin`, `productAt`, `expireAt`, `manual`, `preserve`, `productImage`, `createdAt`, `updatedAt`, `productCategoryId`, `quantityId` FROM `products` AS `products` WHERE `products`.`productCategoryId` = '1';
[2021-12-14 14:58:14] [[32minfo[39m] Request status: [object Object] data [object SequelizeInstance:products],[object SequelizeInstance:products],[object SequelizeInstance:products],[object SequelizeInstance:products],[object SequelizeInstance:products],[object SequelizeInstance:products],[object SequelizeInstance:products],[object SequelizeInstance:products],[object SequelizeInstance:products],[object SequelizeInstance:products],[object SequelizeInstance:products],[object SequelizeInstance:products],[object SequelizeInstance:products],[object SequelizeInstance:products]
[2021-12-14 15:02:08] [[32minfo[39m] Executing (default): SELECT `id`, `username`, `email`, `password`, `firstname`, `lastname`, `gender`, `phone`, `birthday`, `address`, `userAvatar`, `createdAt`, `updatedAt` FROM `users` AS `users` WHERE `users`.`username` = 'phuctg';
[2021-12-14 15:02:08] [[32minfo[39m] Executing (default): SELECT `id`, `username`, `email`, `password`, `firstname`, `lastname`, `gender`, `phone`, `birthday`, `address`, `userAvatar`, `createdAt`, `updatedAt` FROM `users` AS `users` WHERE `users`.`id` = '1';
[2021-12-14 15:02:08] [[32minfo[39m] Executing (default): SELECT `createdAt`, `updatedAt`, `userId`, `foodCategoryId` FROM `favoriteFoodCategories` AS `favoriteFoodCategories` WHERE `favoriteFoodCategories`.`userId` = '1';
[2021-12-14 15:02:08] [[32minfo[39m] Request status: [object Object] data [object SequelizeInstance:users]
[2021-12-14 15:02:08] [[31merror[39m] Request status: [object Object] error Error: ENOENT: no such file or directory, open 'D:\git\CNPMM\BEnull'
[2021-12-14 15:02:08] [[32minfo[39m] Request status: [object Object] data 
[2021-12-14 15:02:10] [[32minfo[39m] Executing (default): SELECT `id`, `username`, `email`, `password`, `firstname`, `lastname`, `gender`, `phone`, `birthday`, `address`, `userAvatar`, `createdAt`, `updatedAt` FROM `users` AS `users` WHERE `users`.`id` = '1';
[2021-12-14 15:02:10] [[32minfo[39m] Request status: [object Object] data [object SequelizeInstance:users]
[2021-12-14 15:02:10] [[31merror[39m] Request status: [object Object] error Error: ENOENT: no such file or directory, open 'D:\git\CNPMM\BEnull'
[2021-12-14 15:02:10] [[32minfo[39m] Executing (default): SELECT `id`, `username`, `email`, `password`, `firstname`, `lastname`, `gender`, `phone`, `birthday`, `address`, `userAvatar`, `createdAt`, `updatedAt` FROM `users` AS `users` WHERE `users`.`id` = '1';
[2021-12-14 15:02:10] [[32minfo[39m] Request status: [object Object] data [object SequelizeInstance:users]
[2021-12-14 15:02:10] [[31merror[39m] Request status: [object Object] error Error: ENOENT: no such file or directory, open 'D:\git\CNPMM\BEnull'
[2021-12-14 15:02:10] [[32minfo[39m] Executing (default): SELECT `createdAt`, `updatedAt`, `userId`, `foodCategoryId` FROM `favoriteFoodCategories` AS `favoriteFoodCategories` WHERE `favoriteFoodCategories`.`userId` = '1';
[2021-12-14 15:02:10] [[32minfo[39m] Request status: [object Object] data 
[2021-12-14 15:03:15] [[32minfo[39m] Executing (default): SELECT `id`, `username`, `email`, `password`, `firstname`, `lastname`, `gender`, `phone`, `birthday`, `address`, `userAvatar`, `createdAt`, `updatedAt` FROM `users` AS `users` WHERE `users`.`username` = 'phuctg';
[2021-12-14 15:03:15] [[32minfo[39m] Executing (default): SELECT `id`, `username`, `email`, `password`, `firstname`, `lastname`, `gender`, `phone`, `birthday`, `address`, `userAvatar`, `createdAt`, `updatedAt` FROM `users` AS `users` WHERE `users`.`id` = '1';
[2021-12-14 15:03:15] [[32minfo[39m] Executing (default): SELECT `createdAt`, `updatedAt`, `userId`, `foodCategoryId` FROM `favoriteFoodCategories` AS `favoriteFoodCategories` WHERE `favoriteFoodCategories`.`userId` = '1';
[2021-12-14 15:03:15] [[32minfo[39m] Request status: [object Object] data [object SequelizeInstance:users]
[2021-12-14 15:03:15] [[31merror[39m] Request status: [object Object] error Error: ENOENT: no such file or directory, open 'D:\git\CNPMM\BEnull'
[2021-12-14 15:03:15] [[32minfo[39m] Request status: [object Object] data 
[2021-12-14 15:03:29] [[32minfo[39m] Executing (default): SELECT `id`, `catName` FROM `productCategories` AS `productCategories`;
[2021-12-14 15:03:29] [[32minfo[39m] Request status: [object Object] data [object SequelizeInstance:productCategories],[object SequelizeInstance:productCategories],[object SequelizeInstance:productCategories],[object SequelizeInstance:productCategories],[object SequelizeInstance:productCategories]
[2021-12-14 15:03:29] [[32minfo[39m] Executing (default): SELECT `id`, `username`, `email`, `password`, `firstname`, `lastname`, `gender`, `phone`, `birthday`, `address`, `userAvatar`, `createdAt`, `updatedAt` FROM `users` AS `users` WHERE `users`.`id` = '1';
[2021-12-14 15:03:29] [[32minfo[39m] Request status: [object Object] data [object SequelizeInstance:users]
[2021-12-14 15:03:29] [[31merror[39m] Request status: [object Object] error Error: ENOENT: no such file or directory, open 'D:\git\CNPMM\BEnull'
[2021-12-14 15:03:29] [[32minfo[39m] Executing (default): SELECT `createdAt`, `updatedAt`, `userId`, `foodCategoryId` FROM `favoriteFoodCategories` AS `favoriteFoodCategories` WHERE `favoriteFoodCategories`.`userId` = '1';
[2021-12-14 15:03:29] [[32minfo[39m] Request status: [object Object] data 
[2021-12-14 15:03:33] [[32minfo[39m] Executing (default): SELECT `id`, `catName`, `catIcon` FROM `foodCategories` AS `foodCategories`;
[2021-12-14 15:03:33] [[32minfo[39m] Request status: [object Object] data [object SequelizeInstance:foodCategories],[object SequelizeInstance:foodCategories],[object SequelizeInstance:foodCategories],[object SequelizeInstance:foodCategories],[object SequelizeInstance:foodCategories]
[2021-12-14 15:03:35] [[32minfo[39m] Executing (default): SELECT `carts`.*, `cartDetails`.`id` AS `cartDetails.id`, `cartDetails`.`quantity` AS `cartDetails.quantity`, `cartDetails`.`isBuy` AS `cartDetails.isBuy`, `cartDetails`.`isDeleted` AS `cartDetails.isDeleted`, `cartDetails`.`createdAt` AS `cartDetails.createdAt`, `cartDetails`.`updatedAt` AS `cartDetails.updatedAt`, `cartDetails`.`cartId` AS `cartDetails.cartId`, `cartDetails`.`productId` AS `cartDetails.productId`, `cartDetails->product`.`id` AS `cartDetails.product.id`, `cartDetails->product`.`proName` AS `cartDetails.product.proName`, `cartDetails->product`.`proDescription` AS `cartDetails.product.proDescription`, `cartDetails->product`.`quantityValue` AS `cartDetails.product.quantityValue`, `cartDetails->product`.`price` AS `cartDetails.product.price`, `cartDetails->product`.`brand` AS `cartDetails.product.brand`, `cartDetails->product`.`origin` AS `cartDetails.product.origin`, `cartDetails->product`.`productAt` AS `cartDetails.product.productAt`, `cartDetails->product`.`expireAt` AS `cartDetails.product.expireAt`, `cartDetails->product`.`manual` AS `cartDetails.product.manual`, `cartDetails->product`.`preserve` AS `cartDetails.product.preserve`, `cartDetails->product`.`productImage` AS `cartDetails.product.productImage`, `cartDetails->product`.`createdAt` AS `cartDetails.product.createdAt`, `cartDetails->product`.`updatedAt` AS `cartDetails.product.updatedAt`, `cartDetails->product`.`productCategoryId` AS `cartDetails.product.productCategoryId`, `cartDetails->product`.`quantityId` AS `cartDetails.product.quantityId` FROM (SELECT `carts`.`id`, `carts`.`createdAt`, `carts`.`updatedAt`, `carts`.`userId` FROM `carts` AS `carts` WHERE `carts`.`userId` = '1' AND ( SELECT `cartId` FROM `cartDetails` AS `cartDetails` WHERE ((`cartDetails`.`isBuy` = false AND `cartDetails`.`isDeleted` = false) AND `cartDetails`.`cartId` = `carts`.`id`) LIMIT 1 ) IS NOT NULL LIMIT 1) AS `carts` INNER JOIN `cartDetails` AS `cartDetails` ON `carts`.`id` = `cartDetails`.`cartId` AND `cartDetails`.`isBuy` = false AND `cartDetails`.`isDeleted` = false LEFT OUTER JOIN `products` AS `cartDetails->product` ON `cartDetails`.`productId` = `cartDetails->product`.`id`;
[2021-12-14 15:03:35] [[32minfo[39m] Executing (default): SELECT `carts`.*, `cartDetails`.`id` AS `cartDetails.id`, `cartDetails`.`quantity` AS `cartDetails.quantity`, `cartDetails`.`isBuy` AS `cartDetails.isBuy`, `cartDetails`.`isDeleted` AS `cartDetails.isDeleted`, `cartDetails`.`createdAt` AS `cartDetails.createdAt`, `cartDetails`.`updatedAt` AS `cartDetails.updatedAt`, `cartDetails`.`cartId` AS `cartDetails.cartId`, `cartDetails`.`productId` AS `cartDetails.productId`, `cartDetails->product`.`id` AS `cartDetails.product.id`, `cartDetails->product`.`proName` AS `cartDetails.product.proName`, `cartDetails->product`.`proDescription` AS `cartDetails.product.proDescription`, `cartDetails->product`.`quantityValue` AS `cartDetails.product.quantityValue`, `cartDetails->product`.`price` AS `cartDetails.product.price`, `cartDetails->product`.`brand` AS `cartDetails.product.brand`, `cartDetails->product`.`origin` AS `cartDetails.product.origin`, `cartDetails->product`.`productAt` AS `cartDetails.product.productAt`, `cartDetails->product`.`expireAt` AS `cartDetails.product.expireAt`, `cartDetails->product`.`manual` AS `cartDetails.product.manual`, `cartDetails->product`.`preserve` AS `cartDetails.product.preserve`, `cartDetails->product`.`productImage` AS `cartDetails.product.productImage`, `cartDetails->product`.`createdAt` AS `cartDetails.product.createdAt`, `cartDetails->product`.`updatedAt` AS `cartDetails.product.updatedAt`, `cartDetails->product`.`productCategoryId` AS `cartDetails.product.productCategoryId`, `cartDetails->product`.`quantityId` AS `cartDetails.product.quantityId` FROM (SELECT `carts`.`id`, `carts`.`createdAt`, `carts`.`updatedAt`, `carts`.`userId` FROM `carts` AS `carts` WHERE `carts`.`userId` = '1' AND ( SELECT `cartId` FROM `cartDetails` AS `cartDetails` WHERE ((`cartDetails`.`isBuy` = false AND `cartDetails`.`isDeleted` = false) AND `cartDetails`.`cartId` = `carts`.`id`) LIMIT 1 ) IS NOT NULL LIMIT 1) AS `carts` INNER JOIN `cartDetails` AS `cartDetails` ON `carts`.`id` = `cartDetails`.`cartId` AND `cartDetails`.`isBuy` = false AND `cartDetails`.`isDeleted` = false LEFT OUTER JOIN `products` AS `cartDetails->product` ON `cartDetails`.`productId` = `cartDetails->product`.`id`;
[2021-12-14 15:03:37] [[32minfo[39m] Executing (default): SELECT `id`, `username`, `email`, `password`, `firstname`, `lastname`, `gender`, `phone`, `birthday`, `address`, `userAvatar`, `createdAt`, `updatedAt` FROM `users` AS `users` WHERE `users`.`id` = '1';
[2021-12-14 15:03:37] [[32minfo[39m] Request status: [object Object] data [object SequelizeInstance:users]
[2021-12-14 15:03:37] [[31merror[39m] Request status: [object Object] error Error: ENOENT: no such file or directory, open 'D:\git\CNPMM\BEnull'
[2021-12-14 15:03:55] [[32minfo[39m] Executing (default): SELECT `carts`.*, `cartDetails`.`id` AS `cartDetails.id`, `cartDetails`.`quantity` AS `cartDetails.quantity`, `cartDetails`.`isBuy` AS `cartDetails.isBuy`, `cartDetails`.`isDeleted` AS `cartDetails.isDeleted`, `cartDetails`.`createdAt` AS `cartDetails.createdAt`, `cartDetails`.`updatedAt` AS `cartDetails.updatedAt`, `cartDetails`.`cartId` AS `cartDetails.cartId`, `cartDetails`.`productId` AS `cartDetails.productId`, `cartDetails->product`.`id` AS `cartDetails.product.id`, `cartDetails->product`.`proName` AS `cartDetails.product.proName`, `cartDetails->product`.`proDescription` AS `cartDetails.product.proDescription`, `cartDetails->product`.`quantityValue` AS `cartDetails.product.quantityValue`, `cartDetails->product`.`price` AS `cartDetails.product.price`, `cartDetails->product`.`brand` AS `cartDetails.product.brand`, `cartDetails->product`.`origin` AS `cartDetails.product.origin`, `cartDetails->product`.`productAt` AS `cartDetails.product.productAt`, `cartDetails->product`.`expireAt` AS `cartDetails.product.expireAt`, `cartDetails->product`.`manual` AS `cartDetails.product.manual`, `cartDetails->product`.`preserve` AS `cartDetails.product.preserve`, `cartDetails->product`.`productImage` AS `cartDetails.product.productImage`, `cartDetails->product`.`createdAt` AS `cartDetails.product.createdAt`, `cartDetails->product`.`updatedAt` AS `cartDetails.product.updatedAt`, `cartDetails->product`.`productCategoryId` AS `cartDetails.product.productCategoryId`, `cartDetails->product`.`quantityId` AS `cartDetails.product.quantityId` FROM (SELECT `carts`.`id`, `carts`.`createdAt`, `carts`.`updatedAt`, `carts`.`userId` FROM `carts` AS `carts` WHERE `carts`.`userId` = '1' AND ( SELECT `cartId` FROM `cartDetails` AS `cartDetails` WHERE ((`cartDetails`.`isBuy` = false AND `cartDetails`.`isDeleted` = false) AND `cartDetails`.`cartId` = `carts`.`id`) LIMIT 1 ) IS NOT NULL LIMIT 1) AS `carts` INNER JOIN `cartDetails` AS `cartDetails` ON `carts`.`id` = `cartDetails`.`cartId` AND `cartDetails`.`isBuy` = false AND `cartDetails`.`isDeleted` = false LEFT OUTER JOIN `products` AS `cartDetails->product` ON `cartDetails`.`productId` = `cartDetails->product`.`id`;
[2021-12-14 15:03:55] [[32minfo[39m] Executing (default): SELECT `carts`.*, `cartDetails`.`id` AS `cartDetails.id`, `cartDetails`.`quantity` AS `cartDetails.quantity`, `cartDetails`.`isBuy` AS `cartDetails.isBuy`, `cartDetails`.`isDeleted` AS `cartDetails.isDeleted`, `cartDetails`.`createdAt` AS `cartDetails.createdAt`, `cartDetails`.`updatedAt` AS `cartDetails.updatedAt`, `cartDetails`.`cartId` AS `cartDetails.cartId`, `cartDetails`.`productId` AS `cartDetails.productId`, `cartDetails->product`.`id` AS `cartDetails.product.id`, `cartDetails->product`.`proName` AS `cartDetails.product.proName`, `cartDetails->product`.`proDescription` AS `cartDetails.product.proDescription`, `cartDetails->product`.`quantityValue` AS `cartDetails.product.quantityValue`, `cartDetails->product`.`price` AS `cartDetails.product.price`, `cartDetails->product`.`brand` AS `cartDetails.product.brand`, `cartDetails->product`.`origin` AS `cartDetails.product.origin`, `cartDetails->product`.`productAt` AS `cartDetails.product.productAt`, `cartDetails->product`.`expireAt` AS `cartDetails.product.expireAt`, `cartDetails->product`.`manual` AS `cartDetails.product.manual`, `cartDetails->product`.`preserve` AS `cartDetails.product.preserve`, `cartDetails->product`.`productImage` AS `cartDetails.product.productImage`, `cartDetails->product`.`createdAt` AS `cartDetails.product.createdAt`, `cartDetails->product`.`updatedAt` AS `cartDetails.product.updatedAt`, `cartDetails->product`.`productCategoryId` AS `cartDetails.product.productCategoryId`, `cartDetails->product`.`quantityId` AS `cartDetails.product.quantityId` FROM (SELECT `carts`.`id`, `carts`.`createdAt`, `carts`.`updatedAt`, `carts`.`userId` FROM `carts` AS `carts` WHERE `carts`.`userId` = '1' AND ( SELECT `cartId` FROM `cartDetails` AS `cartDetails` WHERE ((`cartDetails`.`isBuy` = false AND `cartDetails`.`isDeleted` = false) AND `cartDetails`.`cartId` = `carts`.`id`) LIMIT 1 ) IS NOT NULL LIMIT 1) AS `carts` INNER JOIN `cartDetails` AS `cartDetails` ON `carts`.`id` = `cartDetails`.`cartId` AND `cartDetails`.`isBuy` = false AND `cartDetails`.`isDeleted` = false LEFT OUTER JOIN `products` AS `cartDetails->product` ON `cartDetails`.`productId` = `cartDetails->product`.`id`;
[2021-12-14 15:03:57] [[32minfo[39m] Executing (default): SELECT `carts`.*, `cartDetails`.`id` AS `cartDetails.id`, `cartDetails`.`quantity` AS `cartDetails.quantity`, `cartDetails`.`isBuy` AS `cartDetails.isBuy`, `cartDetails`.`isDeleted` AS `cartDetails.isDeleted`, `cartDetails`.`createdAt` AS `cartDetails.createdAt`, `cartDetails`.`updatedAt` AS `cartDetails.updatedAt`, `cartDetails`.`cartId` AS `cartDetails.cartId`, `cartDetails`.`productId` AS `cartDetails.productId`, `cartDetails->product`.`id` AS `cartDetails.product.id`, `cartDetails->product`.`proName` AS `cartDetails.product.proName`, `cartDetails->product`.`proDescription` AS `cartDetails.product.proDescription`, `cartDetails->product`.`quantityValue` AS `cartDetails.product.quantityValue`, `cartDetails->product`.`price` AS `cartDetails.product.price`, `cartDetails->product`.`brand` AS `cartDetails.product.brand`, `cartDetails->product`.`origin` AS `cartDetails.product.origin`, `cartDetails->product`.`productAt` AS `cartDetails.product.productAt`, `cartDetails->product`.`expireAt` AS `cartDetails.product.expireAt`, `cartDetails->product`.`manual` AS `cartDetails.product.manual`, `cartDetails->product`.`preserve` AS `cartDetails.product.preserve`, `cartDetails->product`.`productImage` AS `cartDetails.product.productImage`, `cartDetails->product`.`createdAt` AS `cartDetails.product.createdAt`, `cartDetails->product`.`updatedAt` AS `cartDetails.product.updatedAt`, `cartDetails->product`.`productCategoryId` AS `cartDetails.product.productCategoryId`, `cartDetails->product`.`quantityId` AS `cartDetails.product.quantityId` FROM (SELECT `carts`.`id`, `carts`.`createdAt`, `carts`.`updatedAt`, `carts`.`userId` FROM `carts` AS `carts` WHERE `carts`.`userId` = '1' AND ( SELECT `cartId` FROM `cartDetails` AS `cartDetails` WHERE ((`cartDetails`.`isBuy` = false AND `cartDetails`.`isDeleted` = false) AND `cartDetails`.`cartId` = `carts`.`id`) LIMIT 1 ) IS NOT NULL LIMIT 1) AS `carts` INNER JOIN `cartDetails` AS `cartDetails` ON `carts`.`id` = `cartDetails`.`cartId` AND `cartDetails`.`isBuy` = false AND `cartDetails`.`isDeleted` = false LEFT OUTER JOIN `products` AS `cartDetails->product` ON `cartDetails`.`productId` = `cartDetails->product`.`id`;
[2021-12-14 15:03:57] [[32minfo[39m] Executing (default): SELECT `carts`.*, `cartDetails`.`id` AS `cartDetails.id`, `cartDetails`.`quantity` AS `cartDetails.quantity`, `cartDetails`.`isBuy` AS `cartDetails.isBuy`, `cartDetails`.`isDeleted` AS `cartDetails.isDeleted`, `cartDetails`.`createdAt` AS `cartDetails.createdAt`, `cartDetails`.`updatedAt` AS `cartDetails.updatedAt`, `cartDetails`.`cartId` AS `cartDetails.cartId`, `cartDetails`.`productId` AS `cartDetails.productId`, `cartDetails->product`.`id` AS `cartDetails.product.id`, `cartDetails->product`.`proName` AS `cartDetails.product.proName`, `cartDetails->product`.`proDescription` AS `cartDetails.product.proDescription`, `cartDetails->product`.`quantityValue` AS `cartDetails.product.quantityValue`, `cartDetails->product`.`price` AS `cartDetails.product.price`, `cartDetails->product`.`brand` AS `cartDetails.product.brand`, `cartDetails->product`.`origin` AS `cartDetails.product.origin`, `cartDetails->product`.`productAt` AS `cartDetails.product.productAt`, `cartDetails->product`.`expireAt` AS `cartDetails.product.expireAt`, `cartDetails->product`.`manual` AS `cartDetails.product.manual`, `cartDetails->product`.`preserve` AS `cartDetails.product.preserve`, `cartDetails->product`.`productImage` AS `cartDetails.product.productImage`, `cartDetails->product`.`createdAt` AS `cartDetails.product.createdAt`, `cartDetails->product`.`updatedAt` AS `cartDetails.product.updatedAt`, `cartDetails->product`.`productCategoryId` AS `cartDetails.product.productCategoryId`, `cartDetails->product`.`quantityId` AS `cartDetails.product.quantityId` FROM (SELECT `carts`.`id`, `carts`.`createdAt`, `carts`.`updatedAt`, `carts`.`userId` FROM `carts` AS `carts` WHERE `carts`.`userId` = '1' AND ( SELECT `cartId` FROM `cartDetails` AS `cartDetails` WHERE ((`cartDetails`.`isBuy` = false AND `cartDetails`.`isDeleted` = false) AND `cartDetails`.`cartId` = `carts`.`id`) LIMIT 1 ) IS NOT NULL LIMIT 1) AS `carts` INNER JOIN `cartDetails` AS `cartDetails` ON `carts`.`id` = `cartDetails`.`cartId` AND `cartDetails`.`isBuy` = false AND `cartDetails`.`isDeleted` = false LEFT OUTER JOIN `products` AS `cartDetails->product` ON `cartDetails`.`productId` = `cartDetails->product`.`id`;
[2021-12-14 15:07:48] [[32minfo[39m] Executing (default): SELECT `id`, `username`, `email`, `password`, `firstname`, `lastname`, `gender`, `phone`, `birthday`, `address`, `userAvatar`, `createdAt`, `updatedAt` FROM `users` AS `users` WHERE `users`.`username` = 'phuctg';
[2021-12-14 15:07:48] [[32minfo[39m] Executing (default): SELECT `id`, `username`, `email`, `password`, `firstname`, `lastname`, `gender`, `phone`, `birthday`, `address`, `userAvatar`, `createdAt`, `updatedAt` FROM `users` AS `users` WHERE `users`.`id` = '1';
[2021-12-14 15:07:48] [[32minfo[39m] Executing (default): SELECT `createdAt`, `updatedAt`, `userId`, `foodCategoryId` FROM `favoriteFoodCategories` AS `favoriteFoodCategories` WHERE `favoriteFoodCategories`.`userId` = '1';
[2021-12-14 15:07:48] [[32minfo[39m] Request status: [object Object] data [object SequelizeInstance:users]
[2021-12-14 15:07:48] [[31merror[39m] Request status: [object Object] error Error: ENOENT: no such file or directory, open 'D:\git\CNPMM\BEnull'
[2021-12-14 15:07:48] [[32minfo[39m] Request status: [object Object] data 
[2021-12-14 15:07:50] [[32minfo[39m] Executing (default): SELECT `id`, `username`, `email`, `password`, `firstname`, `lastname`, `gender`, `phone`, `birthday`, `address`, `userAvatar`, `createdAt`, `updatedAt` FROM `users` AS `users` WHERE `users`.`id` = '1';
[2021-12-14 15:07:50] [[32minfo[39m] Request status: [object Object] data [object SequelizeInstance:users]
[2021-12-14 15:07:50] [[31merror[39m] Request status: [object Object] error Error: ENOENT: no such file or directory, open 'D:\git\CNPMM\BEnull'
[2021-12-14 15:07:50] [[32minfo[39m] Executing (default): SELECT `id`, `username`, `email`, `password`, `firstname`, `lastname`, `gender`, `phone`, `birthday`, `address`, `userAvatar`, `createdAt`, `updatedAt` FROM `users` AS `users` WHERE `users`.`id` = '1';
[2021-12-14 15:07:50] [[32minfo[39m] Executing (default): SELECT `createdAt`, `updatedAt`, `userId`, `foodCategoryId` FROM `favoriteFoodCategories` AS `favoriteFoodCategories` WHERE `favoriteFoodCategories`.`userId` = '1';
[2021-12-14 15:07:50] [[32minfo[39m] Request status: [object Object] data [object SequelizeInstance:users]
[2021-12-14 15:07:50] [[31merror[39m] Request status: [object Object] error Error: ENOENT: no such file or directory, open 'D:\git\CNPMM\BEnull'
[2021-12-14 15:07:50] [[32minfo[39m] Request status: [object Object] data 
[2021-12-14 15:07:59] [[32minfo[39m] Executing (default): SELECT `id`, `username`, `email`, `password`, `firstname`, `lastname`, `gender`, `phone`, `birthday`, `address`, `userAvatar`, `createdAt`, `updatedAt` FROM `users` AS `users` WHERE `users`.`id` = 'undefined';
[2021-12-14 15:07:59] [[31merror[39m] Request status: [object Object]  error User not found
[2021-12-14 15:08:21] [[32minfo[39m] Executing (default): SELECT `id`, `catName` FROM `productCategories` AS `productCategories`;
[2021-12-14 15:08:21] [[32minfo[39m] Request status: [object Object] data [object SequelizeInstance:productCategories],[object SequelizeInstance:productCategories],[object SequelizeInstance:productCategories],[object SequelizeInstance:productCategories],[object SequelizeInstance:productCategories]
[2021-12-14 15:08:28] [[32minfo[39m] Executing (default): SELECT `id`, `username`, `email`, `password`, `firstname`, `lastname`, `gender`, `phone`, `birthday`, `address`, `userAvatar`, `createdAt`, `updatedAt` FROM `users` AS `users` WHERE `users`.`id` = 'undefined';
[2021-12-14 15:08:28] [[31merror[39m] Request status: [object Object]  error User not found
[2021-12-14 15:09:35] [[32minfo[39m] Executing (default): SELECT `id`, `username`, `email`, `password`, `firstname`, `lastname`, `gender`, `phone`, `birthday`, `address`, `userAvatar`, `createdAt`, `updatedAt` FROM `users` AS `users` WHERE `users`.`id` = 'undefined';
[2021-12-14 15:09:35] [[31merror[39m] Request status: [object Object]  error User not found
[2021-12-14 15:09:41] [[32minfo[39m] Executing (default): SELECT `id`, `username`, `email`, `password`, `firstname`, `lastname`, `gender`, `phone`, `birthday`, `address`, `userAvatar`, `createdAt`, `updatedAt` FROM `users` AS `users` WHERE `users`.`id` = '1';
[2021-12-14 15:09:41] [[32minfo[39m] Executing (default): SELECT `createdAt`, `updatedAt`, `userId`, `foodCategoryId` FROM `favoriteFoodCategories` AS `favoriteFoodCategories` WHERE `favoriteFoodCategories`.`userId` = '1';
[2021-12-14 15:09:41] [[32minfo[39m] Request status: [object Object] data [object SequelizeInstance:users]
[2021-12-14 15:09:41] [[31merror[39m] Request status: [object Object] error Error: ENOENT: no such file or directory, open 'D:\git\CNPMM\BEnull'
[2021-12-14 15:09:41] [[32minfo[39m] Request status: [object Object] data 
[2021-12-14 15:09:43] [[32minfo[39m] Executing (default): SELECT `id`, `username`, `email`, `password`, `firstname`, `lastname`, `gender`, `phone`, `birthday`, `address`, `userAvatar`, `createdAt`, `updatedAt` FROM `users` AS `users` WHERE `users`.`id` = '1';
[2021-12-14 15:09:43] [[32minfo[39m] Executing (default): SELECT `createdAt`, `updatedAt`, `userId`, `foodCategoryId` FROM `favoriteFoodCategories` AS `favoriteFoodCategories` WHERE `favoriteFoodCategories`.`userId` = '1';
[2021-12-14 15:09:43] [[32minfo[39m] Request status: [object Object] data [object SequelizeInstance:users]
[2021-12-14 15:09:43] [[31merror[39m] Request status: [object Object] error Error: ENOENT: no such file or directory, open 'D:\git\CNPMM\BEnull'
[2021-12-14 15:09:43] [[32minfo[39m] Request status: [object Object] data 
[2021-12-14 15:51:38] [[32minfo[39m] Server is running on port 8080
[2021-12-14 15:51:38] [[32minfo[39m] Executing (default): DROP TABLE IF EXISTS `user_roles`;
[2021-12-14 15:51:38] [[32minfo[39m] Executing (default): DROP TABLE IF EXISTS `marketNotes`;
[2021-12-14 15:51:38] [[32minfo[39m] Executing (default): DROP TABLE IF EXISTS `address-villages`;
[2021-12-14 15:51:38] [[32minfo[39m] Executing (default): DROP TABLE IF EXISTS `address-districts`;
[2021-12-14 15:51:38] [[32minfo[39m] Executing (default): DROP TABLE IF EXISTS `address-provinces`;
[2021-12-14 15:51:38] [[32minfo[39m] Executing (default): DROP TABLE IF EXISTS `favoriteFoodCategories`;
[2021-12-14 15:51:38] [[32minfo[39m] Executing (default): DROP TABLE IF EXISTS `orderDetails`;
[2021-12-14 15:51:38] [[32minfo[39m] Executing (default): DROP TABLE IF EXISTS `orders`;
[2021-12-14 15:51:38] [[32minfo[39m] Executing (default): DROP TABLE IF EXISTS `paymentMethods`;
[2021-12-14 15:51:38] [[32minfo[39m] Executing (default): DROP TABLE IF EXISTS `deliveryMethods`;
[2021-12-14 15:51:38] [[32minfo[39m] Executing (default): DROP TABLE IF EXISTS `cartDetails`;
[2021-12-14 15:51:38] [[32minfo[39m] Executing (default): DROP TABLE IF EXISTS `carts`;
[2021-12-14 15:51:38] [[32minfo[39m] Executing (default): DROP TABLE IF EXISTS `foodCookSteps`;
[2021-12-14 15:51:38] [[32minfo[39m] Executing (default): DROP TABLE IF EXISTS `foodMaterials`;
[2021-12-14 15:51:38] [[32minfo[39m] Executing (default): DROP TABLE IF EXISTS `products`;
[2021-12-14 15:51:39] [[32minfo[39m] Executing (default): DROP TABLE IF EXISTS `quantities`;
[2021-12-14 15:51:39] [[32minfo[39m] Executing (default): DROP TABLE IF EXISTS `productCategories`;
[2021-12-14 15:51:39] [[32minfo[39m] Executing (default): DROP TABLE IF EXISTS `foods`;
[2021-12-14 15:51:39] [[32minfo[39m] Executing (default): DROP TABLE IF EXISTS `foodCategories`;
[2021-12-14 15:51:39] [[32minfo[39m] Executing (default): DROP TABLE IF EXISTS `roles`;
[2021-12-14 15:51:39] [[32minfo[39m] Executing (default): DROP TABLE IF EXISTS `users`;
[2021-12-14 15:51:39] [[32minfo[39m] Executing (default): DROP TABLE IF EXISTS `users`;
[2021-12-14 15:51:39] [[32minfo[39m] Executing (default): CREATE TABLE IF NOT EXISTS `users` (`id` INTEGER NOT NULL auto_increment , `username` VARCHAR(255) UNIQUE, `email` VARCHAR(255) UNIQUE, `password` VARCHAR(255), `firstname` VARCHAR(255), `lastname` VARCHAR(255), `gender` VARCHAR(255), `phone` VARCHAR(255), `birthday` DATE, `address` VARCHAR(255), `userAvatar` VARCHAR(255), `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, PRIMARY KEY (`id`)) ENGINE=InnoDB;
[2021-12-14 15:51:39] [[32minfo[39m] Executing (default): SHOW INDEX FROM `users`
[2021-12-14 15:51:39] [[32minfo[39m] Executing (default): DROP TABLE IF EXISTS `roles`;
[2021-12-14 15:51:39] [[32minfo[39m] Executing (default): CREATE TABLE IF NOT EXISTS `roles` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255), `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, PRIMARY KEY (`id`)) ENGINE=InnoDB;
[2021-12-14 15:51:39] [[32minfo[39m] Executing (default): SHOW INDEX FROM `roles`
[2021-12-14 15:51:39] [[32minfo[39m] Executing (default): DROP TABLE IF EXISTS `foodCategories`;
[2021-12-14 15:51:39] [[32minfo[39m] Executing (default): CREATE TABLE IF NOT EXISTS `foodCategories` (`id` INTEGER NOT NULL auto_increment , `catName` VARCHAR(255), `catIcon` VARCHAR(255), `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, PRIMARY KEY (`id`)) ENGINE=InnoDB;
[2021-12-14 15:51:39] [[32minfo[39m] Executing (default): SHOW INDEX FROM `foodCategories`
[2021-12-14 15:51:39] [[32minfo[39m] Executing (default): DROP TABLE IF EXISTS `foods`;
[2021-12-14 15:51:39] [[32minfo[39m] Executing (default): CREATE TABLE IF NOT EXISTS `foods` (`id` INTEGER NOT NULL auto_increment , `foodName` VARCHAR(255), `foodDescription` VARCHAR(255), `foodCalories` FLOAT, `foodImage` VARCHAR(255), `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, `foodCategoryId` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`foodCategoryId`) REFERENCES `foodCategories` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;
[2021-12-14 15:51:39] [[32minfo[39m] Executing (default): SHOW INDEX FROM `foods`
[2021-12-14 15:51:39] [[32minfo[39m] Executing (default): ALTER TABLE `foods` ADD FULLTEXT INDEX `food_index` (`foodName`)
[2021-12-14 15:51:40] [[32minfo[39m] Executing (default): DROP TABLE IF EXISTS `productCategories`;
[2021-12-14 15:51:40] [[32minfo[39m] Executing (default): CREATE TABLE IF NOT EXISTS `productCategories` (`id` INTEGER NOT NULL auto_increment , `catName` VARCHAR(255), `catIcon` VARCHAR(255), `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, PRIMARY KEY (`id`)) ENGINE=InnoDB;
[2021-12-14 15:51:40] [[32minfo[39m] Executing (default): SHOW INDEX FROM `productCategories`
[2021-12-14 15:51:40] [[32minfo[39m] Executing (default): DROP TABLE IF EXISTS `quantities`;
[2021-12-14 15:51:40] [[32minfo[39m] Executing (default): CREATE TABLE IF NOT EXISTS `quantities` (`id` INTEGER NOT NULL auto_increment , `quantityName` VARCHAR(255), `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, PRIMARY KEY (`id`)) ENGINE=InnoDB;
[2021-12-14 15:51:40] [[32minfo[39m] Executing (default): SHOW INDEX FROM `quantities`
[2021-12-14 15:51:40] [[32minfo[39m] Executing (default): DROP TABLE IF EXISTS `products`;
[2021-12-14 15:51:40] [[32minfo[39m] Executing (default): CREATE TABLE IF NOT EXISTS `products` (`id` INTEGER NOT NULL auto_increment , `proName` VARCHAR(255), `proDescription` VARCHAR(255), `quantityValue` FLOAT, `price` FLOAT, `brand` VARCHAR(255), `origin` VARCHAR(255), `productAt` DATE, `expireAt` VARCHAR(255), `manual` VARCHAR(255), `preserve` VARCHAR(255), `productImage` VARCHAR(255), `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, `productCategoryId` INTEGER, `quantityId` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`productCategoryId`) REFERENCES `productCategories` (`id`) ON DELETE SET NULL ON UPDATE CASCADE, FOREIGN KEY (`quantityId`) REFERENCES `quantities` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;
[2021-12-14 15:51:40] [[32minfo[39m] Executing (default): SHOW INDEX FROM `products`
[2021-12-14 15:51:40] [[32minfo[39m] Executing (default): ALTER TABLE `products` ADD FULLTEXT INDEX `product_index` (`proName`)
[2021-12-14 15:51:41] [[32minfo[39m] Executing (default): DROP TABLE IF EXISTS `foodMaterials`;
[2021-12-14 15:51:41] [[32minfo[39m] Executing (default): CREATE TABLE IF NOT EXISTS `foodMaterials` (`id` INTEGER NOT NULL auto_increment , `foodMaterialName` VARCHAR(255), `quantityDescription` VARCHAR(255), `quantityValue` FLOAT, `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, `foodId` INTEGER, `productId` INTEGER, `quantityId` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`foodId`) REFERENCES `foods` (`id`) ON DELETE SET NULL ON UPDATE CASCADE, FOREIGN KEY (`productId`) REFERENCES `products` (`id`) ON DELETE SET NULL ON UPDATE CASCADE, FOREIGN KEY (`quantityId`) REFERENCES `quantities` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;
[2021-12-14 15:51:41] [[32minfo[39m] Executing (default): SHOW INDEX FROM `foodMaterials`
[2021-12-14 15:51:41] [[32minfo[39m] Executing (default): DROP TABLE IF EXISTS `foodCookSteps`;
[2021-12-14 15:51:41] [[32minfo[39m] Executing (default): CREATE TABLE IF NOT EXISTS `foodCookSteps` (`id` INTEGER NOT NULL auto_increment , `stepNumber` INTEGER, `stepDescription` VARCHAR(255), `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, `foodId` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`foodId`) REFERENCES `foods` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;
[2021-12-14 15:51:41] [[32minfo[39m] Executing (default): SHOW INDEX FROM `foodCookSteps`
[2021-12-14 15:51:41] [[32minfo[39m] Executing (default): DROP TABLE IF EXISTS `carts`;
[2021-12-14 15:51:41] [[32minfo[39m] Executing (default): CREATE TABLE IF NOT EXISTS `carts` (`id` INTEGER NOT NULL auto_increment , `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, `userId` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`userId`) REFERENCES `users` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;
[2021-12-14 15:51:41] [[32minfo[39m] Executing (default): SHOW INDEX FROM `carts`
[2021-12-14 15:51:41] [[32minfo[39m] Executing (default): DROP TABLE IF EXISTS `cartDetails`;
[2021-12-14 15:51:41] [[32minfo[39m] Executing (default): CREATE TABLE IF NOT EXISTS `cartDetails` (`id` INTEGER NOT NULL auto_increment , `quantity` INTEGER, `isBuy` TINYINT(1), `isDeleted` TINYINT(1), `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, `cartId` INTEGER, `productId` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`cartId`) REFERENCES `carts` (`id`) ON DELETE SET NULL ON UPDATE CASCADE, FOREIGN KEY (`productId`) REFERENCES `products` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;
[2021-12-14 15:51:41] [[32minfo[39m] Executing (default): SHOW INDEX FROM `cartDetails`
[2021-12-14 15:51:41] [[32minfo[39m] Executing (default): DROP TABLE IF EXISTS `deliveryMethods`;
[2021-12-14 15:51:41] [[32minfo[39m] Executing (default): CREATE TABLE IF NOT EXISTS `deliveryMethods` (`id` INTEGER NOT NULL auto_increment , `deliveryMethod` VARCHAR(255), `fee` FLOAT, `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, PRIMARY KEY (`id`)) ENGINE=InnoDB;
[2021-12-14 15:51:41] [[32minfo[39m] Executing (default): SHOW INDEX FROM `deliveryMethods`
[2021-12-14 15:51:41] [[32minfo[39m] Executing (default): DROP TABLE IF EXISTS `paymentMethods`;
[2021-12-14 15:51:41] [[32minfo[39m] Executing (default): CREATE TABLE IF NOT EXISTS `paymentMethods` (`id` INTEGER NOT NULL auto_increment , `paymentType` VARCHAR(255), `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, PRIMARY KEY (`id`)) ENGINE=InnoDB;
[2021-12-14 15:51:41] [[32minfo[39m] Executing (default): SHOW INDEX FROM `paymentMethods`
[2021-12-14 15:51:41] [[32minfo[39m] Executing (default): DROP TABLE IF EXISTS `orders`;
[2021-12-14 15:51:41] [[32minfo[39m] Executing (default): CREATE TABLE IF NOT EXISTS `orders` (`id` INTEGER NOT NULL auto_increment , `addressDelivery` VARCHAR(255), `deliveryAt` DATE, `orderStatus` TINYINT(1), `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, `userId` INTEGER, `deliveryMethodId` INTEGER, `shipperId` INTEGER, `paymentMethodId` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`userId`) REFERENCES `users` (`id`) ON DELETE SET NULL ON UPDATE CASCADE, FOREIGN KEY (`deliveryMethodId`) REFERENCES `deliveryMethods` (`id`) ON DELETE SET NULL ON UPDATE CASCADE, FOREIGN KEY (`shipperId`) REFERENCES `users` (`id`) ON DELETE SET NULL ON UPDATE CASCADE, FOREIGN KEY (`paymentMethodId`) REFERENCES `paymentMethods` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;
[2021-12-14 15:51:41] [[32minfo[39m] Executing (default): SHOW INDEX FROM `orders`
[2021-12-14 15:51:41] [[32minfo[39m] Executing (default): DROP TABLE IF EXISTS `orderDetails`;
[2021-12-14 15:51:41] [[32minfo[39m] Executing (default): CREATE TABLE IF NOT EXISTS `orderDetails` (`id` INTEGER NOT NULL auto_increment , `quantity` INTEGER, `price` FLOAT, `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, `orderId` INTEGER, `productId` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`orderId`) REFERENCES `orders` (`id`) ON DELETE SET NULL ON UPDATE CASCADE, FOREIGN KEY (`productId`) REFERENCES `products` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;
[2021-12-14 15:51:41] [[32minfo[39m] Executing (default): SHOW INDEX FROM `orderDetails`
[2021-12-14 15:51:42] [[32minfo[39m] Executing (default): DROP TABLE IF EXISTS `favoriteFoodCategories`;
[2021-12-14 15:51:42] [[32minfo[39m] Executing (default): CREATE TABLE IF NOT EXISTS `favoriteFoodCategories` (`createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, `userId` INTEGER , `foodCategoryId` INTEGER , PRIMARY KEY (`userId`, `foodCategoryId`), FOREIGN KEY (`userId`) REFERENCES `users` (`id`) ON DELETE CASCADE ON UPDATE CASCADE, FOREIGN KEY (`foodCategoryId`) REFERENCES `foodCategories` (`id`) ON DELETE CASCADE ON UPDATE CASCADE) ENGINE=InnoDB;
[2021-12-14 15:51:42] [[32minfo[39m] Executing (default): SHOW INDEX FROM `favoriteFoodCategories`
[2021-12-14 15:51:42] [[32minfo[39m] Executing (default): DROP TABLE IF EXISTS `address-provinces`;
[2021-12-14 15:51:42] [[32minfo[39m] Executing (default): CREATE TABLE IF NOT EXISTS `address-provinces` (`id` INTEGER NOT NULL auto_increment , `province` VARCHAR(255), `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, PRIMARY KEY (`id`)) ENGINE=InnoDB;
[2021-12-14 15:51:42] [[32minfo[39m] Executing (default): SHOW INDEX FROM `address-provinces`
[2021-12-14 15:51:42] [[32minfo[39m] Executing (default): DROP TABLE IF EXISTS `address-districts`;
[2021-12-14 15:51:42] [[32minfo[39m] Executing (default): CREATE TABLE IF NOT EXISTS `address-districts` (`id` INTEGER NOT NULL auto_increment , `district` VARCHAR(255), `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, `addressProvinceId` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`addressProvinceId`) REFERENCES `address-provinces` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;
[2021-12-14 15:51:42] [[32minfo[39m] Executing (default): SHOW INDEX FROM `address-districts`
[2021-12-14 15:51:42] [[32minfo[39m] Executing (default): DROP TABLE IF EXISTS `address-villages`;
[2021-12-14 15:51:42] [[32minfo[39m] Executing (default): CREATE TABLE IF NOT EXISTS `address-villages` (`id` INTEGER NOT NULL auto_increment , `village` VARCHAR(255), `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, `addressDistrictId` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`addressDistrictId`) REFERENCES `address-districts` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;
[2021-12-14 15:51:42] [[32minfo[39m] Executing (default): SHOW INDEX FROM `address-villages`
[2021-12-14 15:51:42] [[32minfo[39m] Executing (default): DROP TABLE IF EXISTS `marketNotes`;
[2021-12-14 15:51:42] [[32minfo[39m] Executing (default): CREATE TABLE IF NOT EXISTS `marketNotes` (`id` INTEGER NOT NULL auto_increment , `marketNoteText` VARCHAR(255), `remindDate` DATE, `isDone` TINYINT(1), `isDeleted` TINYINT(1), `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, `userId` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`userId`) REFERENCES `users` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;
[2021-12-14 15:51:42] [[32minfo[39m] Executing (default): SHOW INDEX FROM `marketNotes`
[2021-12-14 15:51:42] [[32minfo[39m] Executing (default): DROP TABLE IF EXISTS `user_roles`;
[2021-12-14 15:51:42] [[32minfo[39m] Executing (default): CREATE TABLE IF NOT EXISTS `user_roles` (`createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, `roleId` INTEGER , `userId` INTEGER , PRIMARY KEY (`roleId`, `userId`), FOREIGN KEY (`roleId`) REFERENCES `roles` (`id`) ON DELETE CASCADE ON UPDATE CASCADE, FOREIGN KEY (`userId`) REFERENCES `users` (`id`) ON DELETE CASCADE ON UPDATE CASCADE) ENGINE=InnoDB;
[2021-12-14 15:51:42] [[32minfo[39m] Executing (default): SHOW INDEX FROM `user_roles`
[2021-12-14 15:51:42] [[32minfo[39m] Dropped and Resync database
[2021-12-14 20:16:43] [[32minfo[39m] Server is running on port 8080
[2021-12-14 20:16:43] [[32minfo[39m] Executing (default): DROP TABLE IF EXISTS `user_roles`;
[2021-12-14 20:16:43] [[32minfo[39m] Executing (default): DROP TABLE IF EXISTS `marketNotes`;
[2021-12-14 20:16:43] [[32minfo[39m] Executing (default): DROP TABLE IF EXISTS `address-villages`;
[2021-12-14 20:16:43] [[32minfo[39m] Executing (default): DROP TABLE IF EXISTS `address-districts`;
[2021-12-14 20:16:43] [[32minfo[39m] Executing (default): DROP TABLE IF EXISTS `address-provinces`;
[2021-12-14 20:16:43] [[32minfo[39m] Executing (default): DROP TABLE IF EXISTS `favoriteFoodCategories`;
[2021-12-14 20:16:43] [[32minfo[39m] Executing (default): DROP TABLE IF EXISTS `orderDetails`;
[2021-12-14 20:16:43] [[32minfo[39m] Executing (default): DROP TABLE IF EXISTS `orders`;
[2021-12-14 20:16:43] [[32minfo[39m] Executing (default): DROP TABLE IF EXISTS `paymentMethods`;
[2021-12-14 20:16:43] [[32minfo[39m] Executing (default): DROP TABLE IF EXISTS `deliveryMethods`;
[2021-12-14 20:16:43] [[32minfo[39m] Executing (default): DROP TABLE IF EXISTS `cartDetails`;
[2021-12-14 20:16:43] [[32minfo[39m] Executing (default): DROP TABLE IF EXISTS `carts`;
[2021-12-14 20:16:43] [[32minfo[39m] Executing (default): DROP TABLE IF EXISTS `foodCookSteps`;
[2021-12-14 20:16:43] [[32minfo[39m] Executing (default): DROP TABLE IF EXISTS `foodMaterials`;
[2021-12-14 20:16:43] [[32minfo[39m] Executing (default): DROP TABLE IF EXISTS `products`;
[2021-12-14 20:16:43] [[32minfo[39m] Executing (default): DROP TABLE IF EXISTS `quantities`;
[2021-12-14 20:16:43] [[32minfo[39m] Executing (default): DROP TABLE IF EXISTS `productCategories`;
[2021-12-14 20:16:43] [[32minfo[39m] Executing (default): DROP TABLE IF EXISTS `foods`;
[2021-12-14 20:16:43] [[32minfo[39m] Executing (default): DROP TABLE IF EXISTS `foodCategories`;
[2021-12-14 20:16:43] [[32minfo[39m] Executing (default): DROP TABLE IF EXISTS `roles`;
[2021-12-14 20:16:43] [[32minfo[39m] Executing (default): DROP TABLE IF EXISTS `users`;
[2021-12-14 20:16:43] [[32minfo[39m] Executing (default): DROP TABLE IF EXISTS `users`;
[2021-12-14 20:16:44] [[32minfo[39m] Executing (default): CREATE TABLE IF NOT EXISTS `users` (`id` INTEGER NOT NULL auto_increment , `username` VARCHAR(255) UNIQUE, `email` VARCHAR(255) UNIQUE, `password` VARCHAR(255), `firstname` VARCHAR(255), `lastname` VARCHAR(255), `gender` VARCHAR(255), `phone` VARCHAR(255), `birthday` DATE, `address` VARCHAR(255), `userAvatar` VARCHAR(255), `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, PRIMARY KEY (`id`)) ENGINE=InnoDB;
[2021-12-14 20:16:44] [[32minfo[39m] Executing (default): SHOW INDEX FROM `users`
[2021-12-14 20:16:44] [[32minfo[39m] Executing (default): DROP TABLE IF EXISTS `roles`;
[2021-12-14 20:16:44] [[32minfo[39m] Executing (default): CREATE TABLE IF NOT EXISTS `roles` (`id` INTEGER NOT NULL auto_increment , `name` VARCHAR(255), `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, PRIMARY KEY (`id`)) ENGINE=InnoDB;
[2021-12-14 20:16:44] [[32minfo[39m] Executing (default): SHOW INDEX FROM `roles`
[2021-12-14 20:16:44] [[32minfo[39m] Executing (default): DROP TABLE IF EXISTS `foodCategories`;
[2021-12-14 20:16:44] [[32minfo[39m] Executing (default): CREATE TABLE IF NOT EXISTS `foodCategories` (`id` INTEGER NOT NULL auto_increment , `catName` VARCHAR(255), `catIcon` VARCHAR(255), `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, PRIMARY KEY (`id`)) ENGINE=InnoDB;
[2021-12-14 20:16:44] [[32minfo[39m] Executing (default): SHOW INDEX FROM `foodCategories`
[2021-12-14 20:16:44] [[32minfo[39m] Executing (default): DROP TABLE IF EXISTS `foods`;
[2021-12-14 20:16:44] [[32minfo[39m] Executing (default): CREATE TABLE IF NOT EXISTS `foods` (`id` INTEGER NOT NULL auto_increment , `foodName` VARCHAR(255), `foodDescription` VARCHAR(255), `foodCalories` FLOAT, `foodImage` VARCHAR(255), `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, `foodCategoryId` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`foodCategoryId`) REFERENCES `foodCategories` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;
[2021-12-14 20:16:44] [[32minfo[39m] Executing (default): SHOW INDEX FROM `foods`
[2021-12-14 20:16:44] [[32minfo[39m] Executing (default): ALTER TABLE `foods` ADD FULLTEXT INDEX `food_index` (`foodName`)
[2021-12-14 20:16:45] [[32minfo[39m] Executing (default): DROP TABLE IF EXISTS `productCategories`;
[2021-12-14 20:16:45] [[32minfo[39m] Executing (default): CREATE TABLE IF NOT EXISTS `productCategories` (`id` INTEGER NOT NULL auto_increment , `catName` VARCHAR(255), `catIcon` VARCHAR(255), `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, PRIMARY KEY (`id`)) ENGINE=InnoDB;
[2021-12-14 20:16:45] [[32minfo[39m] Executing (default): SHOW INDEX FROM `productCategories`
[2021-12-14 20:16:45] [[32minfo[39m] Executing (default): DROP TABLE IF EXISTS `quantities`;
[2021-12-14 20:16:45] [[32minfo[39m] Executing (default): CREATE TABLE IF NOT EXISTS `quantities` (`id` INTEGER NOT NULL auto_increment , `quantityName` VARCHAR(255), `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, PRIMARY KEY (`id`)) ENGINE=InnoDB;
[2021-12-14 20:16:45] [[32minfo[39m] Executing (default): SHOW INDEX FROM `quantities`
[2021-12-14 20:16:45] [[32minfo[39m] Executing (default): DROP TABLE IF EXISTS `products`;
[2021-12-14 20:16:45] [[32minfo[39m] Executing (default): CREATE TABLE IF NOT EXISTS `products` (`id` INTEGER NOT NULL auto_increment , `proName` VARCHAR(255), `proDescription` VARCHAR(255), `quantityValue` FLOAT, `price` FLOAT, `brand` VARCHAR(255), `origin` VARCHAR(255), `productAt` DATE, `expireAt` VARCHAR(255), `manual` VARCHAR(255), `preserve` VARCHAR(255), `productImage` VARCHAR(255), `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, `productCategoryId` INTEGER, `quantityId` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`productCategoryId`) REFERENCES `productCategories` (`id`) ON DELETE SET NULL ON UPDATE CASCADE, FOREIGN KEY (`quantityId`) REFERENCES `quantities` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;
[2021-12-14 20:16:45] [[32minfo[39m] Executing (default): SHOW INDEX FROM `products`
[2021-12-14 20:16:45] [[32minfo[39m] Executing (default): ALTER TABLE `products` ADD FULLTEXT INDEX `product_index` (`proName`)
[2021-12-14 20:16:45] [[32minfo[39m] Executing (default): DROP TABLE IF EXISTS `foodMaterials`;
[2021-12-14 20:16:45] [[32minfo[39m] Executing (default): CREATE TABLE IF NOT EXISTS `foodMaterials` (`id` INTEGER NOT NULL auto_increment , `foodMaterialName` VARCHAR(255), `quantityDescription` VARCHAR(255), `quantityValue` FLOAT, `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, `foodId` INTEGER, `productId` INTEGER, `quantityId` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`foodId`) REFERENCES `foods` (`id`) ON DELETE SET NULL ON UPDATE CASCADE, FOREIGN KEY (`productId`) REFERENCES `products` (`id`) ON DELETE SET NULL ON UPDATE CASCADE, FOREIGN KEY (`quantityId`) REFERENCES `quantities` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;
[2021-12-14 20:16:45] [[32minfo[39m] Executing (default): SHOW INDEX FROM `foodMaterials`
[2021-12-14 20:16:45] [[32minfo[39m] Executing (default): DROP TABLE IF EXISTS `foodCookSteps`;
[2021-12-14 20:16:45] [[32minfo[39m] Executing (default): CREATE TABLE IF NOT EXISTS `foodCookSteps` (`id` INTEGER NOT NULL auto_increment , `stepNumber` INTEGER, `stepDescription` VARCHAR(255), `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, `foodId` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`foodId`) REFERENCES `foods` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;
[2021-12-14 20:16:45] [[32minfo[39m] Executing (default): SHOW INDEX FROM `foodCookSteps`
[2021-12-14 20:16:45] [[32minfo[39m] Executing (default): DROP TABLE IF EXISTS `carts`;
[2021-12-14 20:16:45] [[32minfo[39m] Executing (default): CREATE TABLE IF NOT EXISTS `carts` (`id` INTEGER NOT NULL auto_increment , `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, `userId` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`userId`) REFERENCES `users` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;
[2021-12-14 20:16:45] [[32minfo[39m] Executing (default): SHOW INDEX FROM `carts`
[2021-12-14 20:16:45] [[32minfo[39m] Executing (default): DROP TABLE IF EXISTS `cartDetails`;
[2021-12-14 20:16:45] [[32minfo[39m] Executing (default): CREATE TABLE IF NOT EXISTS `cartDetails` (`id` INTEGER NOT NULL auto_increment , `quantity` INTEGER, `isBuy` TINYINT(1), `isDeleted` TINYINT(1), `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, `cartId` INTEGER, `productId` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`cartId`) REFERENCES `carts` (`id`) ON DELETE SET NULL ON UPDATE CASCADE, FOREIGN KEY (`productId`) REFERENCES `products` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;
[2021-12-14 20:16:45] [[32minfo[39m] Executing (default): SHOW INDEX FROM `cartDetails`
[2021-12-14 20:16:45] [[32minfo[39m] Executing (default): DROP TABLE IF EXISTS `deliveryMethods`;
[2021-12-14 20:16:46] [[32minfo[39m] Executing (default): CREATE TABLE IF NOT EXISTS `deliveryMethods` (`id` INTEGER NOT NULL auto_increment , `deliveryMethod` VARCHAR(255), `fee` FLOAT, `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, PRIMARY KEY (`id`)) ENGINE=InnoDB;
[2021-12-14 20:16:46] [[32minfo[39m] Executing (default): SHOW INDEX FROM `deliveryMethods`
[2021-12-14 20:16:46] [[32minfo[39m] Executing (default): DROP TABLE IF EXISTS `paymentMethods`;
[2021-12-14 20:16:46] [[32minfo[39m] Executing (default): CREATE TABLE IF NOT EXISTS `paymentMethods` (`id` INTEGER NOT NULL auto_increment , `paymentType` VARCHAR(255), `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, PRIMARY KEY (`id`)) ENGINE=InnoDB;
[2021-12-14 20:16:46] [[32minfo[39m] Executing (default): SHOW INDEX FROM `paymentMethods`
[2021-12-14 20:16:46] [[32minfo[39m] Executing (default): DROP TABLE IF EXISTS `orders`;
[2021-12-14 20:16:46] [[32minfo[39m] Executing (default): CREATE TABLE IF NOT EXISTS `orders` (`id` INTEGER NOT NULL auto_increment , `addressDelivery` VARCHAR(255), `deliveryAt` DATE, `orderStatus` TINYINT(1), `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, `userId` INTEGER, `deliveryMethodId` INTEGER, `shipperId` INTEGER, `paymentMethodId` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`userId`) REFERENCES `users` (`id`) ON DELETE SET NULL ON UPDATE CASCADE, FOREIGN KEY (`deliveryMethodId`) REFERENCES `deliveryMethods` (`id`) ON DELETE SET NULL ON UPDATE CASCADE, FOREIGN KEY (`shipperId`) REFERENCES `users` (`id`) ON DELETE SET NULL ON UPDATE CASCADE, FOREIGN KEY (`paymentMethodId`) REFERENCES `paymentMethods` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;
[2021-12-14 20:16:46] [[32minfo[39m] Executing (default): SHOW INDEX FROM `orders`
[2021-12-14 20:16:46] [[32minfo[39m] Executing (default): DROP TABLE IF EXISTS `orderDetails`;
[2021-12-14 20:16:46] [[32minfo[39m] Executing (default): CREATE TABLE IF NOT EXISTS `orderDetails` (`id` INTEGER NOT NULL auto_increment , `quantity` INTEGER, `price` FLOAT, `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, `orderId` INTEGER, `productId` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`orderId`) REFERENCES `orders` (`id`) ON DELETE SET NULL ON UPDATE CASCADE, FOREIGN KEY (`productId`) REFERENCES `products` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;
[2021-12-14 20:16:46] [[32minfo[39m] Executing (default): SHOW INDEX FROM `orderDetails`
[2021-12-14 20:16:46] [[32minfo[39m] Executing (default): DROP TABLE IF EXISTS `favoriteFoodCategories`;
[2021-12-14 20:16:46] [[32minfo[39m] Executing (default): CREATE TABLE IF NOT EXISTS `favoriteFoodCategories` (`createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, `userId` INTEGER , `foodCategoryId` INTEGER , PRIMARY KEY (`userId`, `foodCategoryId`), FOREIGN KEY (`userId`) REFERENCES `users` (`id`) ON DELETE CASCADE ON UPDATE CASCADE, FOREIGN KEY (`foodCategoryId`) REFERENCES `foodCategories` (`id`) ON DELETE CASCADE ON UPDATE CASCADE) ENGINE=InnoDB;
[2021-12-14 20:16:46] [[32minfo[39m] Executing (default): SHOW INDEX FROM `favoriteFoodCategories`
[2021-12-14 20:16:46] [[32minfo[39m] Executing (default): DROP TABLE IF EXISTS `address-provinces`;
[2021-12-14 20:16:46] [[32minfo[39m] Executing (default): CREATE TABLE IF NOT EXISTS `address-provinces` (`id` INTEGER NOT NULL auto_increment , `province` VARCHAR(255), `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, PRIMARY KEY (`id`)) ENGINE=InnoDB;
[2021-12-14 20:16:46] [[32minfo[39m] Executing (default): SHOW INDEX FROM `address-provinces`
[2021-12-14 20:16:46] [[32minfo[39m] Executing (default): DROP TABLE IF EXISTS `address-districts`;
[2021-12-14 20:16:46] [[32minfo[39m] Executing (default): CREATE TABLE IF NOT EXISTS `address-districts` (`id` INTEGER NOT NULL auto_increment , `district` VARCHAR(255), `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, `addressProvinceId` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`addressProvinceId`) REFERENCES `address-provinces` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;
[2021-12-14 20:16:46] [[32minfo[39m] Executing (default): SHOW INDEX FROM `address-districts`
[2021-12-14 20:16:46] [[32minfo[39m] Executing (default): DROP TABLE IF EXISTS `address-villages`;
[2021-12-14 20:16:46] [[32minfo[39m] Executing (default): CREATE TABLE IF NOT EXISTS `address-villages` (`id` INTEGER NOT NULL auto_increment , `village` VARCHAR(255), `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, `addressDistrictId` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`addressDistrictId`) REFERENCES `address-districts` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;
[2021-12-14 20:16:46] [[32minfo[39m] Executing (default): SHOW INDEX FROM `address-villages`
[2021-12-14 20:16:46] [[32minfo[39m] Executing (default): DROP TABLE IF EXISTS `marketNotes`;
[2021-12-14 20:16:46] [[32minfo[39m] Executing (default): CREATE TABLE IF NOT EXISTS `marketNotes` (`id` INTEGER NOT NULL auto_increment , `marketNoteText` VARCHAR(255), `remindDate` DATE, `isDone` TINYINT(1), `isDeleted` TINYINT(1), `createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, `userId` INTEGER, PRIMARY KEY (`id`), FOREIGN KEY (`userId`) REFERENCES `users` (`id`) ON DELETE SET NULL ON UPDATE CASCADE) ENGINE=InnoDB;
[2021-12-14 20:16:46] [[32minfo[39m] Executing (default): SHOW INDEX FROM `marketNotes`
[2021-12-14 20:16:46] [[32minfo[39m] Executing (default): DROP TABLE IF EXISTS `user_roles`;
[2021-12-14 20:16:46] [[32minfo[39m] Executing (default): CREATE TABLE IF NOT EXISTS `user_roles` (`createdAt` DATETIME NOT NULL, `updatedAt` DATETIME NOT NULL, `roleId` INTEGER , `userId` INTEGER , PRIMARY KEY (`roleId`, `userId`), FOREIGN KEY (`roleId`) REFERENCES `roles` (`id`) ON DELETE CASCADE ON UPDATE CASCADE, FOREIGN KEY (`userId`) REFERENCES `users` (`id`) ON DELETE CASCADE ON UPDATE CASCADE) ENGINE=InnoDB;
[2021-12-14 20:16:46] [[32minfo[39m] Executing (default): SHOW INDEX FROM `user_roles`
[2021-12-14 20:16:46] [[32minfo[39m] Dropped and Resync database
[2021-12-14 20:28:47] [[32minfo[39m] Executing (default): SELECT `id`, `username`, `email`, `password`, `firstname`, `lastname`, `gender`, `phone`, `birthday`, `address`, `userAvatar`, `createdAt`, `updatedAt` FROM `users` AS `users` WHERE `users`.`username` = 'phuctg';
[2021-12-14 20:28:47] [[32minfo[39m] Executing (default): SELECT `id`, `username`, `email`, `password`, `firstname`, `lastname`, `gender`, `phone`, `birthday`, `address`, `userAvatar`, `createdAt`, `updatedAt` FROM `users` AS `users` WHERE `users`.`id` = '1';
[2021-12-14 20:28:47] [[32minfo[39m] Request status: [object Object] data [object SequelizeInstance:users]
[2021-12-14 20:28:47] [[31merror[39m] Request status: [object Object] error Error: ENOENT: no such file or directory, open 'D:\git\CNPMM\BEnull'
[2021-12-14 20:28:47] [[32minfo[39m] Executing (default): SELECT `createdAt`, `updatedAt`, `userId`, `foodCategoryId` FROM `favoriteFoodCategories` AS `favoriteFoodCategories` WHERE `favoriteFoodCategories`.`userId` = '1';
[2021-12-14 20:28:47] [[32minfo[39m] Request status: [object Object] data 
[2021-12-14 20:28:53] [[32minfo[39m] Executing (default): SELECT `createdAt`, `updatedAt`, `userId`, `foodCategoryId` FROM `favoriteFoodCategories` AS `favoriteFoodCategories` WHERE `favoriteFoodCategories`.`userId` = '1';
[2021-12-14 20:28:53] [[32minfo[39m] Executing (default): SELECT `id`, `username`, `email`, `password`, `firstname`, `lastname`, `gender`, `phone`, `birthday`, `address`, `userAvatar`, `createdAt`, `updatedAt` FROM `users` AS `users` WHERE `users`.`id` = '1';
[2021-12-14 20:28:53] [[32minfo[39m] Request status: [object Object] data 
[2021-12-14 20:28:53] [[32minfo[39m] Executing (default): SELECT `id`, `username`, `email`, `password`, `firstname`, `lastname`, `gender`, `phone`, `birthday`, `address`, `userAvatar`, `createdAt`, `updatedAt` FROM `users` AS `users` WHERE `users`.`id` = '1';
[2021-12-14 20:28:53] [[32minfo[39m] Request status: [object Object] data [object SequelizeInstance:users]
[2021-12-14 20:28:53] [[31merror[39m] Request status: [object Object] error Error: ENOENT: no such file or directory, open 'D:\git\CNPMM\BEnull'
[2021-12-14 20:28:53] [[32minfo[39m] Request status: [object Object] data [object SequelizeInstance:users]
[2021-12-14 20:28:53] [[31merror[39m] Request status: [object Object] error Error: ENOENT: no such file or directory, open 'D:\git\CNPMM\BEnull'
[2021-12-14 20:28:57] [[32minfo[39m] Executing (default): SELECT `id`, `catName`, `catIcon` FROM `foodCategories` AS `foodCategories`;
[2021-12-14 20:28:57] [[32minfo[39m] Request status: [object Object] data [object SequelizeInstance:foodCategories],[object SequelizeInstance:foodCategories],[object SequelizeInstance:foodCategories],[object SequelizeInstance:foodCategories],[object SequelizeInstance:foodCategories]
[2021-12-14 20:29:01] [[32minfo[39m] Executing (default): SELECT `createdAt`, `updatedAt`, `userId`, `foodCategoryId` FROM `favoriteFoodCategories` AS `favoriteFoodCategories` WHERE `favoriteFoodCategories`.`userId` = '1';
[2021-12-14 20:29:01] [[32minfo[39m] Request status: [object Object] data 
[2021-12-14 20:29:01] [[32minfo[39m] Request status: [object Object]
[2021-12-14 20:29:04] [[32minfo[39m] Executing (default): SELECT `carts`.*, `cartDetails`.`id` AS `cartDetails.id`, `cartDetails`.`quantity` AS `cartDetails.quantity`, `cartDetails`.`isBuy` AS `cartDetails.isBuy`, `cartDetails`.`isDeleted` AS `cartDetails.isDeleted`, `cartDetails`.`createdAt` AS `cartDetails.createdAt`, `cartDetails`.`updatedAt` AS `cartDetails.updatedAt`, `cartDetails`.`cartId` AS `cartDetails.cartId`, `cartDetails`.`productId` AS `cartDetails.productId`, `cartDetails->product`.`id` AS `cartDetails.product.id`, `cartDetails->product`.`proName` AS `cartDetails.product.proName`, `cartDetails->product`.`proDescription` AS `cartDetails.product.proDescription`, `cartDetails->product`.`quantityValue` AS `cartDetails.product.quantityValue`, `cartDetails->product`.`price` AS `cartDetails.product.price`, `cartDetails->product`.`brand` AS `cartDetails.product.brand`, `cartDetails->product`.`origin` AS `cartDetails.product.origin`, `cartDetails->product`.`productAt` AS `cartDetails.product.productAt`, `cartDetails->product`.`expireAt` AS `cartDetails.product.expireAt`, `cartDetails->product`.`manual` AS `cartDetails.product.manual`, `cartDetails->product`.`preserve` AS `cartDetails.product.preserve`, `cartDetails->product`.`productImage` AS `cartDetails.product.productImage`, `cartDetails->product`.`createdAt` AS `cartDetails.product.createdAt`, `cartDetails->product`.`updatedAt` AS `cartDetails.product.updatedAt`, `cartDetails->product`.`productCategoryId` AS `cartDetails.product.productCategoryId`, `cartDetails->product`.`quantityId` AS `cartDetails.product.quantityId` FROM (SELECT `carts`.`id`, `carts`.`createdAt`, `carts`.`updatedAt`, `carts`.`userId` FROM `carts` AS `carts` WHERE `carts`.`userId` = '1' AND ( SELECT `cartId` FROM `cartDetails` AS `cartDetails` WHERE ((`cartDetails`.`isBuy` = false AND `cartDetails`.`isDeleted` = false) AND `cartDetails`.`cartId` = `carts`.`id`) LIMIT 1 ) IS NOT NULL LIMIT 1) AS `carts` INNER JOIN `cartDetails` AS `cartDetails` ON `carts`.`id` = `cartDetails`.`cartId` AND `cartDetails`.`isBuy` = false AND `cartDetails`.`isDeleted` = false LEFT OUTER JOIN `products` AS `cartDetails->product` ON `cartDetails`.`productId` = `cartDetails->product`.`id`;
[2021-12-14 20:29:04] [[32minfo[39m] Executing (default): SELECT `carts`.*, `cartDetails`.`id` AS `cartDetails.id`, `cartDetails`.`quantity` AS `cartDetails.quantity`, `cartDetails`.`isBuy` AS `cartDetails.isBuy`, `cartDetails`.`isDeleted` AS `cartDetails.isDeleted`, `cartDetails`.`createdAt` AS `cartDetails.createdAt`, `cartDetails`.`updatedAt` AS `cartDetails.updatedAt`, `cartDetails`.`cartId` AS `cartDetails.cartId`, `cartDetails`.`productId` AS `cartDetails.productId`, `cartDetails->product`.`id` AS `cartDetails.product.id`, `cartDetails->product`.`proName` AS `cartDetails.product.proName`, `cartDetails->product`.`proDescription` AS `cartDetails.product.proDescription`, `cartDetails->product`.`quantityValue` AS `cartDetails.product.quantityValue`, `cartDetails->product`.`price` AS `cartDetails.product.price`, `cartDetails->product`.`brand` AS `cartDetails.product.brand`, `cartDetails->product`.`origin` AS `cartDetails.product.origin`, `cartDetails->product`.`productAt` AS `cartDetails.product.productAt`, `cartDetails->product`.`expireAt` AS `cartDetails.product.expireAt`, `cartDetails->product`.`manual` AS `cartDetails.product.manual`, `cartDetails->product`.`preserve` AS `cartDetails.product.preserve`, `cartDetails->product`.`productImage` AS `cartDetails.product.productImage`, `cartDetails->product`.`createdAt` AS `cartDetails.product.createdAt`, `cartDetails->product`.`updatedAt` AS `cartDetails.product.updatedAt`, `cartDetails->product`.`productCategoryId` AS `cartDetails.product.productCategoryId`, `cartDetails->product`.`quantityId` AS `cartDetails.product.quantityId` FROM (SELECT `carts`.`id`, `carts`.`createdAt`, `carts`.`updatedAt`, `carts`.`userId` FROM `carts` AS `carts` WHERE `carts`.`userId` = '1' AND ( SELECT `cartId` FROM `cartDetails` AS `cartDetails` WHERE ((`cartDetails`.`isBuy` = false AND `cartDetails`.`isDeleted` = false) AND `cartDetails`.`cartId` = `carts`.`id`) LIMIT 1 ) IS NOT NULL LIMIT 1) AS `carts` INNER JOIN `cartDetails` AS `cartDetails` ON `carts`.`id` = `cartDetails`.`cartId` AND `cartDetails`.`isBuy` = false AND `cartDetails`.`isDeleted` = false LEFT OUTER JOIN `products` AS `cartDetails->product` ON `cartDetails`.`productId` = `cartDetails->product`.`id`;
[2021-12-14 20:29:04] [[32minfo[39m] Executing (default): SELECT `carts`.*, `cartDetails`.`id` AS `cartDetails.id`, `cartDetails`.`quantity` AS `cartDetails.quantity`, `cartDetails`.`isBuy` AS `cartDetails.isBuy`, `cartDetails`.`isDeleted` AS `cartDetails.isDeleted`, `cartDetails`.`createdAt` AS `cartDetails.createdAt`, `cartDetails`.`updatedAt` AS `cartDetails.updatedAt`, `cartDetails`.`cartId` AS `cartDetails.cartId`, `cartDetails`.`productId` AS `cartDetails.productId`, `cartDetails->product`.`id` AS `cartDetails.product.id`, `cartDetails->product`.`proName` AS `cartDetails.product.proName`, `cartDetails->product`.`proDescription` AS `cartDetails.product.proDescription`, `cartDetails->product`.`quantityValue` AS `cartDetails.product.quantityValue`, `cartDetails->product`.`price` AS `cartDetails.product.price`, `cartDetails->product`.`brand` AS `cartDetails.product.brand`, `cartDetails->product`.`origin` AS `cartDetails.product.origin`, `cartDetails->product`.`productAt` AS `cartDetails.product.productAt`, `cartDetails->product`.`expireAt` AS `cartDetails.product.expireAt`, `cartDetails->product`.`manual` AS `cartDetails.product.manual`, `cartDetails->product`.`preserve` AS `cartDetails.product.preserve`, `cartDetails->product`.`productImage` AS `cartDetails.product.productImage`, `cartDetails->product`.`createdAt` AS `cartDetails.product.createdAt`, `cartDetails->product`.`updatedAt` AS `cartDetails.product.updatedAt`, `cartDetails->product`.`productCategoryId` AS `cartDetails.product.productCategoryId`, `cartDetails->product`.`quantityId` AS `cartDetails.product.quantityId` FROM (SELECT `carts`.`id`, `carts`.`createdAt`, `carts`.`updatedAt`, `carts`.`userId` FROM `carts` AS `carts` WHERE `carts`.`userId` = '1' AND ( SELECT `cartId` FROM `cartDetails` AS `cartDetails` WHERE ((`cartDetails`.`isBuy` = false AND `cartDetails`.`isDeleted` = false) AND `cartDetails`.`cartId` = `carts`.`id`) LIMIT 1 ) IS NOT NULL LIMIT 1) AS `carts` INNER JOIN `cartDetails` AS `cartDetails` ON `carts`.`id` = `cartDetails`.`cartId` AND `cartDetails`.`isBuy` = false AND `cartDetails`.`isDeleted` = false LEFT OUTER JOIN `products` AS `cartDetails->product` ON `cartDetails`.`productId` = `cartDetails->product`.`id`;
[2021-12-14 20:29:04] [[32minfo[39m] Executing (default): SELECT `carts`.*, `cartDetails`.`id` AS `cartDetails.id`, `cartDetails`.`quantity` AS `cartDetails.quantity`, `cartDetails`.`isBuy` AS `cartDetails.isBuy`, `cartDetails`.`isDeleted` AS `cartDetails.isDeleted`, `cartDetails`.`createdAt` AS `cartDetails.createdAt`, `cartDetails`.`updatedAt` AS `cartDetails.updatedAt`, `cartDetails`.`cartId` AS `cartDetails.cartId`, `cartDetails`.`productId` AS `cartDetails.productId`, `cartDetails->product`.`id` AS `cartDetails.product.id`, `cartDetails->product`.`proName` AS `cartDetails.product.proName`, `cartDetails->product`.`proDescription` AS `cartDetails.product.proDescription`, `cartDetails->product`.`quantityValue` AS `cartDetails.product.quantityValue`, `cartDetails->product`.`price` AS `cartDetails.product.price`, `cartDetails->product`.`brand` AS `cartDetails.product.brand`, `cartDetails->product`.`origin` AS `cartDetails.product.origin`, `cartDetails->product`.`productAt` AS `cartDetails.product.productAt`, `cartDetails->product`.`expireAt` AS `cartDetails.product.expireAt`, `cartDetails->product`.`manual` AS `cartDetails.product.manual`, `cartDetails->product`.`preserve` AS `cartDetails.product.preserve`, `cartDetails->product`.`productImage` AS `cartDetails.product.productImage`, `cartDetails->product`.`createdAt` AS `cartDetails.product.createdAt`, `cartDetails->product`.`updatedAt` AS `cartDetails.product.updatedAt`, `cartDetails->product`.`productCategoryId` AS `cartDetails.product.productCategoryId`, `cartDetails->product`.`quantityId` AS `cartDetails.product.quantityId` FROM (SELECT `carts`.`id`, `carts`.`createdAt`, `carts`.`updatedAt`, `carts`.`userId` FROM `carts` AS `carts` WHERE `carts`.`userId` = '1' AND ( SELECT `cartId` FROM `cartDetails` AS `cartDetails` WHERE ((`cartDetails`.`isBuy` = false AND `cartDetails`.`isDeleted` = false) AND `cartDetails`.`cartId` = `carts`.`id`) LIMIT 1 ) IS NOT NULL LIMIT 1) AS `carts` INNER JOIN `cartDetails` AS `cartDetails` ON `carts`.`id` = `cartDetails`.`cartId` AND `cartDetails`.`isBuy` = false AND `cartDetails`.`isDeleted` = false LEFT OUTER JOIN `products` AS `cartDetails->product` ON `cartDetails`.`productId` = `cartDetails->product`.`id`;
[2021-12-14 20:29:06] [[32minfo[39m] Executing (default): SELECT `carts`.*, `cartDetails`.`id` AS `cartDetails.id`, `cartDetails`.`quantity` AS `cartDetails.quantity`, `cartDetails`.`isBuy` AS `cartDetails.isBuy`, `cartDetails`.`isDeleted` AS `cartDetails.isDeleted`, `cartDetails`.`createdAt` AS `cartDetails.createdAt`, `cartDetails`.`updatedAt` AS `cartDetails.updatedAt`, `cartDetails`.`cartId` AS `cartDetails.cartId`, `cartDetails`.`productId` AS `cartDetails.productId`, `cartDetails->product`.`id` AS `cartDetails.product.id`, `cartDetails->product`.`proName` AS `cartDetails.product.proName`, `cartDetails->product`.`proDescription` AS `cartDetails.product.proDescription`, `cartDetails->product`.`quantityValue` AS `cartDetails.product.quantityValue`, `cartDetails->product`.`price` AS `cartDetails.product.price`, `cartDetails->product`.`brand` AS `cartDetails.product.brand`, `cartDetails->product`.`origin` AS `cartDetails.product.origin`, `cartDetails->product`.`productAt` AS `cartDetails.product.productAt`, `cartDetails->product`.`expireAt` AS `cartDetails.product.expireAt`, `cartDetails->product`.`manual` AS `cartDetails.product.manual`, `cartDetails->product`.`preserve` AS `cartDetails.product.preserve`, `cartDetails->product`.`productImage` AS `cartDetails.product.productImage`, `cartDetails->product`.`createdAt` AS `cartDetails.product.createdAt`, `cartDetails->product`.`updatedAt` AS `cartDetails.product.updatedAt`, `cartDetails->product`.`productCategoryId` AS `cartDetails.product.productCategoryId`, `cartDetails->product`.`quantityId` AS `cartDetails.product.quantityId` FROM (SELECT `carts`.`id`, `carts`.`createdAt`, `carts`.`updatedAt`, `carts`.`userId` FROM `carts` AS `carts` WHERE `carts`.`userId` = '1' AND ( SELECT `cartId` FROM `cartDetails` AS `cartDetails` WHERE ((`cartDetails`.`isBuy` = false AND `cartDetails`.`isDeleted` = false) AND `cartDetails`.`cartId` = `carts`.`id`) LIMIT 1 ) IS NOT NULL LIMIT 1) AS `carts` INNER JOIN `cartDetails` AS `cartDetails` ON `carts`.`id` = `cartDetails`.`cartId` AND `cartDetails`.`isBuy` = false AND `cartDetails`.`isDeleted` = false LEFT OUTER JOIN `products` AS `cartDetails->product` ON `cartDetails`.`productId` = `cartDetails->product`.`id`;
[2021-12-14 20:29:06] [[32minfo[39m] Executing (default): SELECT `id`, `catName`, `catIcon` FROM `foodCategories` AS `foodCategories`;
[2021-12-14 20:29:06] [[32minfo[39m] Request status: [object Object] data [object SequelizeInstance:foodCategories],[object SequelizeInstance:foodCategories],[object SequelizeInstance:foodCategories],[object SequelizeInstance:foodCategories],[object SequelizeInstance:foodCategories]
[2021-12-14 20:29:06] [[32minfo[39m] Executing (default): SELECT `carts`.*, `cartDetails`.`id` AS `cartDetails.id`, `cartDetails`.`quantity` AS `cartDetails.quantity`, `cartDetails`.`isBuy` AS `cartDetails.isBuy`, `cartDetails`.`isDeleted` AS `cartDetails.isDeleted`, `cartDetails`.`createdAt` AS `cartDetails.createdAt`, `cartDetails`.`updatedAt` AS `cartDetails.updatedAt`, `cartDetails`.`cartId` AS `cartDetails.cartId`, `cartDetails`.`productId` AS `cartDetails.productId`, `cartDetails->product`.`id` AS `cartDetails.product.id`, `cartDetails->product`.`proName` AS `cartDetails.product.proName`, `cartDetails->product`.`proDescription` AS `cartDetails.product.proDescription`, `cartDetails->product`.`quantityValue` AS `cartDetails.product.quantityValue`, `cartDetails->product`.`price` AS `cartDetails.product.price`, `cartDetails->product`.`brand` AS `cartDetails.product.brand`, `cartDetails->product`.`origin` AS `cartDetails.product.origin`, `cartDetails->product`.`productAt` AS `cartDetails.product.productAt`, `cartDetails->product`.`expireAt` AS `cartDetails.product.expireAt`, `cartDetails->product`.`manual` AS `cartDetails.product.manual`, `cartDetails->product`.`preserve` AS `cartDetails.product.preserve`, `cartDetails->product`.`productImage` AS `cartDetails.product.productImage`, `cartDetails->product`.`createdAt` AS `cartDetails.product.createdAt`, `cartDetails->product`.`updatedAt` AS `cartDetails.product.updatedAt`, `cartDetails->product`.`productCategoryId` AS `cartDetails.product.productCategoryId`, `cartDetails->product`.`quantityId` AS `cartDetails.product.quantityId` FROM (SELECT `carts`.`id`, `carts`.`createdAt`, `carts`.`updatedAt`, `carts`.`userId` FROM `carts` AS `carts` WHERE `carts`.`userId` = '1' AND ( SELECT `cartId` FROM `cartDetails` AS `cartDetails` WHERE ((`cartDetails`.`isBuy` = false AND `cartDetails`.`isDeleted` = false) AND `cartDetails`.`cartId` = `carts`.`id`) LIMIT 1 ) IS NOT NULL LIMIT 1) AS `carts` INNER JOIN `cartDetails` AS `cartDetails` ON `carts`.`id` = `cartDetails`.`cartId` AND `cartDetails`.`isBuy` = false AND `cartDetails`.`isDeleted` = false LEFT OUTER JOIN `products` AS `cartDetails->product` ON `cartDetails`.`productId` = `cartDetails->product`.`id`;
[2021-12-14 20:29:08] [[32minfo[39m] Executing (default): SELECT `id`, `catName` FROM `productCategories` AS `productCategories`;
[2021-12-14 20:29:08] [[32minfo[39m] Request status: [object Object] data [object SequelizeInstance:productCategories],[object SequelizeInstance:productCategories],[object SequelizeInstance:productCategories],[object SequelizeInstance:productCategories],[object SequelizeInstance:productCategories]
[2021-12-14 20:29:09] [[32minfo[39m] Executing (default): SELECT `id`, `proName`, `proDescription`, `quantityValue`, `price`, `brand`, `origin`, `productAt`, `expireAt`, `manual`, `preserve`, `productImage`, `createdAt`, `updatedAt`, `productCategoryId`, `quantityId` FROM `products` AS `products` WHERE `products`.`productCategoryId` = '1';
[2021-12-14 20:29:09] [[32minfo[39m] Request status: [object Object] data [object SequelizeInstance:products],[object SequelizeInstance:products],[object SequelizeInstance:products],[object SequelizeInstance:products],[object SequelizeInstance:products],[object SequelizeInstance:products],[object SequelizeInstance:products],[object SequelizeInstance:products],[object SequelizeInstance:products],[object SequelizeInstance:products],[object SequelizeInstance:products],[object SequelizeInstance:products],[object SequelizeInstance:products],[object SequelizeInstance:products]
[2021-12-14 20:29:11] [[32minfo[39m] Executing (default): SELECT `id`, `proName`, `proDescription`, `quantityValue`, `price`, `brand`, `origin`, `productAt`, `expireAt`, `manual`, `preserve`, `productImage`, `createdAt`, `updatedAt`, `productCategoryId`, `quantityId` FROM `products` AS `products` WHERE `products`.`productCategoryId` = '1';
[2021-12-14 20:29:11] [[32minfo[39m] Request status: [object Object] data [object SequelizeInstance:products],[object SequelizeInstance:products],[object SequelizeInstance:products],[object SequelizeInstance:products],[object SequelizeInstance:products],[object SequelizeInstance:products],[object SequelizeInstance:products],[object SequelizeInstance:products],[object SequelizeInstance:products],[object SequelizeInstance:products],[object SequelizeInstance:products],[object SequelizeInstance:products],[object SequelizeInstance:products],[object SequelizeInstance:products]
[2021-12-14 20:29:11] [[32minfo[39m] Executing (default): SELECT `id`, `proName`, `proDescription`, `quantityValue`, `price`, `brand`, `origin`, `productAt`, `expireAt`, `manual`, `preserve`, `productImage`, `createdAt`, `updatedAt`, `productCategoryId`, `quantityId` FROM `products` AS `products` WHERE `products`.`productCategoryId` = '1';
[2021-12-14 20:29:11] [[32minfo[39m] Request status: [object Object] data [object SequelizeInstance:products],[object SequelizeInstance:products],[object SequelizeInstance:products],[object SequelizeInstance:products],[object SequelizeInstance:products],[object SequelizeInstance:products],[object SequelizeInstance:products],[object SequelizeInstance:products],[object SequelizeInstance:products],[object SequelizeInstance:products],[object SequelizeInstance:products],[object SequelizeInstance:products],[object SequelizeInstance:products],[object SequelizeInstance:products]
[2021-12-14 20:29:12] [[32minfo[39m] Executing (default): SELECT `id`, `proName`, `proDescription`, `quantityValue`, `price`, `brand`, `origin`, `productAt`, `expireAt`, `manual`, `preserve`, `productImage`, `createdAt`, `updatedAt`, `productCategoryId`, `quantityId` FROM `products` AS `products` WHERE `products`.`productCategoryId` = '1';
[2021-12-14 20:29:12] [[32minfo[39m] Request status: [object Object] data [object SequelizeInstance:products],[object SequelizeInstance:products],[object SequelizeInstance:products],[object SequelizeInstance:products],[object SequelizeInstance:products],[object SequelizeInstance:products],[object SequelizeInstance:products],[object SequelizeInstance:products],[object SequelizeInstance:products],[object SequelizeInstance:products],[object SequelizeInstance:products],[object SequelizeInstance:products],[object SequelizeInstance:products],[object SequelizeInstance:products]
[2021-12-14 20:29:14] [[32minfo[39m] Executing (default): SELECT `id`, `username`, `email`, `password`, `firstname`, `lastname`, `gender`, `phone`, `birthday`, `address`, `userAvatar`, `createdAt`, `updatedAt` FROM `users` AS `users` WHERE `users`.`id` = '1';
[2021-12-14 20:29:14] [[32minfo[39m] Executing (default): SELECT `createdAt`, `updatedAt`, `userId`, `foodCategoryId` FROM `favoriteFoodCategories` AS `favoriteFoodCategories` WHERE `favoriteFoodCategories`.`userId` = '1';
[2021-12-14 20:29:14] [[32minfo[39m] Request status: [object Object] data [object SequelizeInstance:users]
[2021-12-14 20:29:14] [[31merror[39m] Request status: [object Object] error Error: ENOENT: no such file or directory, open 'D:\git\CNPMM\BEnull'
[2021-12-14 20:29:14] [[32minfo[39m] Request status: [object Object] data [object SequelizeInstance:favoriteFoodCategories]
[2021-12-14 20:29:18] [[32minfo[39m] Executing (default): SELECT `id`, `username`, `email`, `password`, `firstname`, `lastname`, `gender`, `phone`, `birthday`, `address`, `userAvatar`, `createdAt`, `updatedAt` FROM `users` AS `users` WHERE `users`.`id` = '1';
[2021-12-14 20:29:18] [[32minfo[39m] Executing (default): SELECT `createdAt`, `updatedAt`, `userId`, `foodCategoryId` FROM `favoriteFoodCategories` AS `favoriteFoodCategories` WHERE `favoriteFoodCategories`.`userId` = '1';
[2021-12-14 20:29:18] [[32minfo[39m] Request status: [object Object] data [object SequelizeInstance:users]
[2021-12-14 20:29:18] [[31merror[39m] Request status: [object Object] error Error: ENOENT: no such file or directory, open 'D:\git\CNPMM\BEnull'
[2021-12-14 20:29:18] [[32minfo[39m] Request status: [object Object] data [object SequelizeInstance:favoriteFoodCategories]
[2021-12-14 20:29:19] [[32minfo[39m] Executing (default): SELECT `id`, `username`, `email`, `password`, `firstname`, `lastname`, `gender`, `phone`, `birthday`, `address`, `userAvatar`, `createdAt`, `updatedAt` FROM `users` AS `users` WHERE `users`.`id` = '1';
[2021-12-14 20:29:19] [[32minfo[39m] Executing (default): SELECT `createdAt`, `updatedAt`, `userId`, `foodCategoryId` FROM `favoriteFoodCategories` AS `favoriteFoodCategories` WHERE `favoriteFoodCategories`.`userId` = '1';
[2021-12-14 20:29:19] [[32minfo[39m] Request status: [object Object] data [object SequelizeInstance:users]
[2021-12-14 20:29:19] [[31merror[39m] Request status: [object Object] error Error: ENOENT: no such file or directory, open 'D:\git\CNPMM\BEnull'
[2021-12-14 20:29:19] [[32minfo[39m] Request status: [object Object] data [object SequelizeInstance:favoriteFoodCategories]
[2021-12-14 20:29:20] [[32minfo[39m] Executing (default): SELECT `id`, `username`, `email`, `password`, `firstname`, `lastname`, `gender`, `phone`, `birthday`, `address`, `userAvatar`, `createdAt`, `updatedAt` FROM `users` AS `users` WHERE `users`.`id` = '1';
[2021-12-14 20:29:20] [[32minfo[39m] Request status: [object Object] data [object SequelizeInstance:users]
[2021-12-14 20:29:20] [[31merror[39m] Request status: [object Object] error Error: ENOENT: no such file or directory, open 'D:\git\CNPMM\BEnull'
[2021-12-14 20:29:20] [[32minfo[39m] Executing (default): SELECT `createdAt`, `updatedAt`, `userId`, `foodCategoryId` FROM `favoriteFoodCategories` AS `favoriteFoodCategories` WHERE `favoriteFoodCategories`.`userId` = '1';
[2021-12-14 20:29:20] [[32minfo[39m] Request status: [object Object] data [object SequelizeInstance:favoriteFoodCategories]
[2021-12-14 20:29:34] [[32minfo[39m] Executing (default): SELECT `id`, `foodName`, `foodDescription`, `foodCalories`, `foodImage`, `createdAt`, `updatedAt`, `foodCategoryId` FROM `foods` AS `foods` WHERE `foods`.`foodCategoryId` = '2';
[2021-12-14 20:29:34] [[32minfo[39m] Request status: [object Object] data [object SequelizeInstance:foods],[object SequelizeInstance:foods],[object SequelizeInstance:foods],[object SequelizeInstance:foods],[object SequelizeInstance:foods]
[2021-12-14 20:29:36] [[32minfo[39m] Executing (default): SELECT `foods`.`id`, `foods`.`foodName`, `foods`.`foodDescription`, `foods`.`foodCalories`, `foods`.`foodImage`, `foods`.`createdAt`, `foods`.`updatedAt`, `foods`.`foodCategoryId`, `foodMaterials`.`id` AS `foodMaterials.id`, `foodMaterials`.`foodMaterialName` AS `foodMaterials.foodMaterialName`, `foodMaterials`.`quantityDescription` AS `foodMaterials.quantityDescription`, `foodMaterials`.`productId` AS `foodMaterials.productId`, `foodCookSteps`.`id` AS `foodCookSteps.id`, `foodCookSteps`.`stepNumber` AS `foodCookSteps.stepNumber`, `foodCookSteps`.`stepDescription` AS `foodCookSteps.stepDescription` FROM `foods` AS `foods` LEFT OUTER JOIN `foodMaterials` AS `foodMaterials` ON `foods`.`id` = `foodMaterials`.`foodId` LEFT OUTER JOIN `foodCookSteps` AS `foodCookSteps` ON `foods`.`id` = `foodCookSteps`.`foodId` WHERE `foods`.`id` = '6';
[2021-12-14 20:29:36] [[32minfo[39m] Request status: [object Object] data [object SequelizeInstance:foods]
[2021-12-14 20:29:41] [[32minfo[39m] Executing (default): SELECT `id`, `username`, `email`, `password`, `firstname`, `lastname`, `gender`, `phone`, `birthday`, `address`, `userAvatar`, `createdAt`, `updatedAt` FROM `users` AS `users` WHERE `users`.`id` = '1';
[2021-12-14 20:29:41] [[32minfo[39m] Request status: [object Object] data [object SequelizeInstance:users]
[2021-12-14 20:29:41] [[31merror[39m] Request status: [object Object] error Error: ENOENT: no such file or directory, open 'D:\git\CNPMM\BEnull'
[2021-12-14 20:29:41] [[32minfo[39m] Executing (default): SELECT `createdAt`, `updatedAt`, `userId`, `foodCategoryId` FROM `favoriteFoodCategories` AS `favoriteFoodCategories` WHERE `favoriteFoodCategories`.`userId` = '1';
[2021-12-14 20:29:41] [[32minfo[39m] Request status: [object Object] data [object SequelizeInstance:favoriteFoodCategories]
[2021-12-14 20:29:43] [[32minfo[39m] Executing (default): SELECT `id`, `username`, `email`, `password`, `firstname`, `lastname`, `gender`, `phone`, `birthday`, `address`, `userAvatar`, `createdAt`, `updatedAt` FROM `users` AS `users` WHERE `users`.`id` = '1';
[2021-12-14 20:29:43] [[32minfo[39m] Executing (default): SELECT `createdAt`, `updatedAt`, `userId`, `foodCategoryId` FROM `favoriteFoodCategories` AS `favoriteFoodCategories` WHERE `favoriteFoodCategories`.`userId` = '1';
[2021-12-14 20:29:43] [[32minfo[39m] Request status: [object Object] data [object SequelizeInstance:users]
[2021-12-14 20:29:43] [[31merror[39m] Request status: [object Object] error Error: ENOENT: no such file or directory, open 'D:\git\CNPMM\BEnull'
[2021-12-14 20:29:43] [[32minfo[39m] Request status: [object Object] data [object SequelizeInstance:favoriteFoodCategories]
[2021-12-14 20:29:44] [[32minfo[39m] Executing (default): SELECT `id`, `catName`, `catIcon` FROM `foodCategories` AS `foodCategories`;
[2021-12-14 20:29:44] [[32minfo[39m] Request status: [object Object] data [object SequelizeInstance:foodCategories],[object SequelizeInstance:foodCategories],[object SequelizeInstance:foodCategories],[object SequelizeInstance:foodCategories],[object SequelizeInstance:foodCategories]
[2021-12-14 20:29:45] [[32minfo[39m] Executing (default): SELECT `createdAt`, `updatedAt`, `userId`, `foodCategoryId` FROM `favoriteFoodCategories` AS `favoriteFoodCategories` WHERE `favoriteFoodCategories`.`userId` = '1';
[2021-12-14 20:29:45] [[32minfo[39m] Request status: [object Object] data [object SequelizeInstance:favoriteFoodCategories]
[2021-12-14 20:29:45] [[32minfo[39m] Request status: [object Object]
[2021-12-14 20:29:45] [[31merror[39m] Request status: [object Object]  error SequelizeUniqueConstraintError: Validation error
[2021-12-14 20:29:49] [[32minfo[39m] Executing (default): SELECT `id`, `username`, `email`, `password`, `firstname`, `lastname`, `gender`, `phone`, `birthday`, `address`, `userAvatar`, `createdAt`, `updatedAt` FROM `users` AS `users` WHERE `users`.`id` = '1';
[2021-12-14 20:29:49] [[32minfo[39m] Request status: [object Object] data [object SequelizeInstance:users]
[2021-12-14 20:29:49] [[31merror[39m] Request status: [object Object] error Error: ENOENT: no such file or directory, open 'D:\git\CNPMM\BEnull'
[2021-12-14 20:29:49] [[32minfo[39m] Executing (default): SELECT `createdAt`, `updatedAt`, `userId`, `foodCategoryId` FROM `favoriteFoodCategories` AS `favoriteFoodCategories` WHERE `favoriteFoodCategories`.`userId` = '1';
[2021-12-14 20:29:49] [[32minfo[39m] Request status: [object Object] data [object SequelizeInstance:favoriteFoodCategories]
[2021-12-14 20:29:51] [[32minfo[39m] Executing (default): SELECT `id`, `username`, `email`, `password`, `firstname`, `lastname`, `gender`, `phone`, `birthday`, `address`, `userAvatar`, `createdAt`, `updatedAt` FROM `users` AS `users` WHERE `users`.`id` = '1';
[2021-12-14 20:29:51] [[32minfo[39m] Executing (default): SELECT `createdAt`, `updatedAt`, `userId`, `foodCategoryId` FROM `favoriteFoodCategories` AS `favoriteFoodCategories` WHERE `favoriteFoodCategories`.`userId` = '1';
[2021-12-14 20:29:51] [[32minfo[39m] Request status: [object Object] data [object SequelizeInstance:users]
[2021-12-14 20:29:51] [[31merror[39m] Request status: [object Object] error Error: ENOENT: no such file or directory, open 'D:\git\CNPMM\BEnull'
[2021-12-14 20:29:51] [[32minfo[39m] Request status: [object Object] data [object SequelizeInstance:favoriteFoodCategories]
[2021-12-14 20:29:52] [[32minfo[39m] Executing (default): SELECT `id`, `username`, `email`, `password`, `firstname`, `lastname`, `gender`, `phone`, `birthday`, `address`, `userAvatar`, `createdAt`, `updatedAt` FROM `users` AS `users` WHERE `users`.`id` = '1';
[2021-12-14 20:29:52] [[32minfo[39m] Executing (default): SELECT `createdAt`, `updatedAt`, `userId`, `foodCategoryId` FROM `favoriteFoodCategories` AS `favoriteFoodCategories` WHERE `favoriteFoodCategories`.`userId` = '1';
[2021-12-14 20:29:52] [[32minfo[39m] Request status: [object Object] data [object SequelizeInstance:users]
[2021-12-14 20:29:52] [[31merror[39m] Request status: [object Object] error Error: ENOENT: no such file or directory, open 'D:\git\CNPMM\BEnull'
[2021-12-14 20:29:52] [[32minfo[39m] Request status: [object Object] data [object SequelizeInstance:favoriteFoodCategories]
[2021-12-14 20:30:04] [[32minfo[39m] Executing (default): SELECT `createdAt`, `updatedAt`, `userId`, `foodCategoryId` FROM `favoriteFoodCategories` AS `favoriteFoodCategories` WHERE `favoriteFoodCategories`.`userId` = '1';
[2021-12-14 20:30:04] [[32minfo[39m] Executing (default): SELECT `id`, `username`, `email`, `password`, `firstname`, `lastname`, `gender`, `phone`, `birthday`, `address`, `userAvatar`, `createdAt`, `updatedAt` FROM `users` AS `users` WHERE `users`.`id` = '1';
[2021-12-14 20:30:04] [[32minfo[39m] Request status: [object Object] data [object SequelizeInstance:favoriteFoodCategories]
[2021-12-14 20:30:04] [[32minfo[39m] Request status: [object Object] data [object SequelizeInstance:users]
[2021-12-14 20:30:04] [[31merror[39m] Request status: [object Object] error Error: ENOENT: no such file or directory, open 'D:\git\CNPMM\BEnull'
[2021-12-14 20:30:49] [[32minfo[39m] User phuctg2106 registered
[2021-12-14 20:30:57] [[32minfo[39m] Executing (default): SELECT `id`, `username`, `email`, `password`, `firstname`, `lastname`, `gender`, `phone`, `birthday`, `address`, `userAvatar`, `createdAt`, `updatedAt` FROM `users` AS `users` WHERE `users`.`username` = 'phuctg2106';
[2021-12-14 20:30:58] [[32minfo[39m] Executing (default): SELECT `id`, `username`, `email`, `password`, `firstname`, `lastname`, `gender`, `phone`, `birthday`, `address`, `userAvatar`, `createdAt`, `updatedAt` FROM `users` AS `users` WHERE `users`.`id` = '2';
[2021-12-14 20:30:58] [[32minfo[39m] Request status: [object Object] data [object SequelizeInstance:users]
[2021-12-14 20:30:58] [[32minfo[39m] Executing (default): SELECT `createdAt`, `updatedAt`, `userId`, `foodCategoryId` FROM `favoriteFoodCategories` AS `favoriteFoodCategories` WHERE `favoriteFoodCategories`.`userId` = 2;
[2021-12-14 20:30:58] [[32minfo[39m] Executing (default): SELECT `createdAt`, `updatedAt`, `userId`, `foodCategoryId` FROM `favoriteFoodCategories` AS `favoriteFoodCategories` WHERE `favoriteFoodCategories`.`userId` = '2';
[2021-12-14 20:30:58] [[32minfo[39m] Request status: [object Object] data 
[2021-12-14 20:30:59] [[32minfo[39m] Executing (default): SELECT `id`, `catName`, `catIcon` FROM `foodCategories` AS `foodCategories`;
[2021-12-14 20:30:59] [[32minfo[39m] Request status: [object Object] data [object SequelizeInstance:foodCategories],[object SequelizeInstance:foodCategories],[object SequelizeInstance:foodCategories],[object SequelizeInstance:foodCategories],[object SequelizeInstance:foodCategories]
[2021-12-14 20:30:59] [[32minfo[39m] Executing (default): SELECT `id`, `username`, `email`, `password`, `firstname`, `lastname`, `gender`, `phone`, `birthday`, `address`, `userAvatar`, `createdAt`, `updatedAt` FROM `users` AS `users` WHERE `users`.`id` = '2';
[2021-12-14 20:30:59] [[32minfo[39m] Request status: [object Object] data [object SequelizeInstance:users]
[2021-12-14 20:30:59] [[32minfo[39m] Executing (default): SELECT `createdAt`, `updatedAt`, `userId`, `foodCategoryId` FROM `favoriteFoodCategories` AS `favoriteFoodCategories` WHERE `favoriteFoodCategories`.`userId` = 2;
[2021-12-14 20:30:59] [[32minfo[39m] Executing (default): SELECT `createdAt`, `updatedAt`, `userId`, `foodCategoryId` FROM `favoriteFoodCategories` AS `favoriteFoodCategories` WHERE `favoriteFoodCategories`.`userId` = '2';
[2021-12-14 20:30:59] [[32minfo[39m] Request status: [object Object] data 
[2021-12-14 20:31:01] [[32minfo[39m] Executing (default): SELECT `createdAt`, `updatedAt`, `userId`, `foodCategoryId` FROM `favoriteFoodCategories` AS `favoriteFoodCategories` WHERE `favoriteFoodCategories`.`userId` = '2';
[2021-12-14 20:31:01] [[32minfo[39m] Request status: [object Object] data 
[2021-12-14 20:31:01] [[32minfo[39m] Request status: [object Object]
[2021-12-14 20:31:03] [[32minfo[39m] Executing (default): SELECT `id`, `username`, `email`, `password`, `firstname`, `lastname`, `gender`, `phone`, `birthday`, `address`, `userAvatar`, `createdAt`, `updatedAt` FROM `users` AS `users` WHERE `users`.`id` = '2';
[2021-12-14 20:31:03] [[32minfo[39m] Request status: [object Object] data [object SequelizeInstance:users]
[2021-12-14 20:31:03] [[32minfo[39m] Executing (default): SELECT `createdAt`, `updatedAt`, `userId`, `foodCategoryId` FROM `favoriteFoodCategories` AS `favoriteFoodCategories` WHERE `favoriteFoodCategories`.`userId` = 2;
[2021-12-14 20:31:03] [[32minfo[39m] Executing (default): SELECT `createdAt`, `updatedAt`, `userId`, `foodCategoryId` FROM `favoriteFoodCategories` AS `favoriteFoodCategories` WHERE `favoriteFoodCategories`.`userId` = '2';
[2021-12-14 20:31:03] [[32minfo[39m] Request status: [object Object] data [object SequelizeInstance:favoriteFoodCategories]
[2021-12-14 20:32:51] [[32minfo[39m] Executing (default): SELECT `id`, `username`, `email`, `password`, `firstname`, `lastname`, `gender`, `phone`, `birthday`, `address`, `userAvatar`, `createdAt`, `updatedAt` FROM `users` AS `users` WHERE `users`.`id` = '2';
[2021-12-14 20:32:51] [[32minfo[39m] Executing (default): SELECT `id`, `foodName`, `foodDescription`, `foodCalories`, `foodImage`, `createdAt`, `updatedAt`, `foodCategoryId` FROM `foods` AS `foods` WHERE `foods`.`foodCategoryId` = 3 ORDER BY rand() LIMIT 3;
[2021-12-14 20:32:51] [[32minfo[39m] Executing (default): SELECT `id`, `foodName`, `foodDescription`, `foodCalories`, `foodImage`, `createdAt`, `updatedAt`, `foodCategoryId` FROM `foods` AS `foods` WHERE `foods`.`foodCategoryId` = 3 ORDER BY rand() LIMIT 3;
[2021-12-14 20:32:51] [[32minfo[39m] Request status: [object Object] data [object SequelizeInstance:users]
[2021-12-14 20:32:51] [[32minfo[39m] Executing (default): SELECT `createdAt`, `updatedAt`, `userId`, `foodCategoryId` FROM `favoriteFoodCategories` AS `favoriteFoodCategories` WHERE `favoriteFoodCategories`.`userId` = '2';
[2021-12-14 20:32:51] [[32minfo[39m] Request status: [object Object] Created!
[2021-12-14 20:32:51] [[32minfo[39m] Executing (default): SELECT `id`, `username`, `email`, `password`, `firstname`, `lastname`, `gender`, `phone`, `birthday`, `address`, `userAvatar`, `createdAt`, `updatedAt` FROM `users` AS `users` WHERE `users`.`id` = '2';
[2021-12-14 20:32:51] [[32minfo[39m] Request status: [object Object] Created!
[2021-12-14 20:32:51] [[32minfo[39m] Executing (default): SELECT `id`, `username`, `email`, `password`, `firstname`, `lastname`, `gender`, `phone`, `birthday`, `address`, `userAvatar`, `createdAt`, `updatedAt` FROM `users` AS `users` WHERE `users`.`id` = '2';
[2021-12-14 20:32:51] [[32minfo[39m] Request status: [object Object] data [object SequelizeInstance:favoriteFoodCategories]
[2021-12-14 20:32:51] [[32minfo[39m] Executing (default): SELECT `createdAt`, `updatedAt`, `userId`, `foodCategoryId` FROM `favoriteFoodCategories` AS `favoriteFoodCategories` WHERE `favoriteFoodCategories`.`userId` = 2;
[2021-12-14 20:32:51] [[32minfo[39m] Request status: [object Object] data [object SequelizeInstance:users]
[2021-12-14 20:32:51] [[32minfo[39m] Executing (default): SELECT `createdAt`, `updatedAt`, `userId`, `foodCategoryId` FROM `favoriteFoodCategories` AS `favoriteFoodCategories` WHERE `favoriteFoodCategories`.`userId` = 2;
[2021-12-14 20:32:51] [[32minfo[39m] Request status: [object Object] data [object SequelizeInstance:users]
[2021-12-14 20:32:51] [[32minfo[39m] Executing (default): SELECT `createdAt`, `updatedAt`, `userId`, `foodCategoryId` FROM `favoriteFoodCategories` AS `favoriteFoodCategories` WHERE `favoriteFoodCategories`.`userId` = '2';
[2021-12-14 20:32:51] [[32minfo[39m] Executing (default): SELECT `id`, `foodName`, `foodDescription`, `foodCalories`, `foodImage`, `createdAt`, `updatedAt`, `foodCategoryId` FROM `foods` AS `foods` WHERE `foods`.`foodCategoryId` = 3 ORDER BY rand() LIMIT 3;
[2021-12-14 20:32:51] [[32minfo[39m] Executing (default): SELECT `createdAt`, `updatedAt`, `userId`, `foodCategoryId` FROM `favoriteFoodCategories` AS `favoriteFoodCategories` WHERE `favoriteFoodCategories`.`userId` = '2';
[2021-12-14 20:32:51] [[32minfo[39m] Request status: [object Object] data [object SequelizeInstance:favoriteFoodCategories]
[2021-12-14 20:32:51] [[32minfo[39m] Executing (default): SELECT `createdAt`, `updatedAt`, `userId`, `foodCategoryId` FROM `favoriteFoodCategories` AS `favoriteFoodCategories` WHERE `favoriteFoodCategories`.`userId` = 2;
[2021-12-14 20:32:51] [[32minfo[39m] Request status: [object Object] Created!
[2021-12-14 20:32:51] [[32minfo[39m] Executing (default): SELECT `id`, `username`, `email`, `password`, `firstname`, `lastname`, `gender`, `phone`, `birthday`, `address`, `userAvatar`, `createdAt`, `updatedAt` FROM `users` AS `users` WHERE `users`.`id` = '2';
[2021-12-14 20:32:51] [[32minfo[39m] Request status: [object Object] data [object SequelizeInstance:favoriteFoodCategories]
[2021-12-14 20:32:51] [[32minfo[39m] Executing (default): SELECT `id`, `foodName`, `foodDescription`, `foodCalories`, `foodImage`, `createdAt`, `updatedAt`, `foodCategoryId` FROM `foods` AS `foods` WHERE `foods`.`foodCategoryId` = 3 ORDER BY rand() LIMIT 3;
[2021-12-14 20:32:51] [[32minfo[39m] Executing (default): SELECT `createdAt`, `updatedAt`, `userId`, `foodCategoryId` FROM `favoriteFoodCategories` AS `favoriteFoodCategories` WHERE `favoriteFoodCategories`.`userId` = '2';
[2021-12-14 20:32:51] [[32minfo[39m] Executing (default): SELECT `id`, `foodName`, `foodDescription`, `foodCalories`, `foodImage`, `createdAt`, `updatedAt`, `foodCategoryId` FROM `foods` AS `foods` WHERE `foods`.`foodCategoryId` = 3 ORDER BY rand() LIMIT 3;
[2021-12-14 20:32:51] [[32minfo[39m] Executing (default): SELECT `createdAt`, `updatedAt`, `userId`, `foodCategoryId` FROM `favoriteFoodCategories` AS `favoriteFoodCategories` WHERE `favoriteFoodCategories`.`userId` = '2';
[2021-12-14 20:32:51] [[32minfo[39m] Executing (default): SELECT `id`, `username`, `email`, `password`, `firstname`, `lastname`, `gender`, `phone`, `birthday`, `address`, `userAvatar`, `createdAt`, `updatedAt` FROM `users` AS `users` WHERE `users`.`id` = '2';
[2021-12-14 20:32:51] [[32minfo[39m] Request status: [object Object] data [object SequelizeInstance:users]
[2021-12-14 20:32:51] [[32minfo[39m] Executing (default): SELECT `id`, `catName`, `catIcon` FROM `foodCategories` AS `foodCategories`;
[2021-12-14 20:32:51] [[32minfo[39m] Request status: [object Object] data [object SequelizeInstance:favoriteFoodCategories]
[2021-12-14 20:32:51] [[32minfo[39m] Executing (default): SELECT `id`, `username`, `email`, `password`, `firstname`, `lastname`, `gender`, `phone`, `birthday`, `address`, `userAvatar`, `createdAt`, `updatedAt` FROM `users` AS `users` WHERE `users`.`id` = '2';
[2021-12-14 20:32:51] [[32minfo[39m] Request status: [object Object] Created!
[2021-12-14 20:32:51] [[32minfo[39m] Executing (default): SELECT `id`, `foodName`, `foodDescription`, `foodCalories`, `foodImage`, `createdAt`, `updatedAt`, `foodCategoryId` FROM `foods` AS `foods` WHERE `foods`.`foodCategoryId` = 3 ORDER BY rand() LIMIT 3;
[2021-12-14 20:32:52] [[32minfo[39m] Request status: [object Object] Created!
[2021-12-14 20:32:52] [[32minfo[39m] Executing (default): SELECT `id`, `username`, `email`, `password`, `firstname`, `lastname`, `gender`, `phone`, `birthday`, `address`, `userAvatar`, `createdAt`, `updatedAt` FROM `users` AS `users` WHERE `users`.`id` = '2';
[2021-12-14 20:32:52] [[32minfo[39m] Request status: [object Object] data [object SequelizeInstance:favoriteFoodCategories]
[2021-12-14 20:32:52] [[32minfo[39m] Executing (default): SELECT `id`, `foodName`, `foodDescription`, `foodCalories`, `foodImage`, `createdAt`, `updatedAt`, `foodCategoryId` FROM `foods` AS `foods` WHERE `foods`.`foodCategoryId` = 3 ORDER BY rand() LIMIT 3;
[2021-12-14 20:32:52] [[32minfo[39m] Request status: [object Object] data [object SequelizeInstance:users]
[2021-12-14 20:32:52] [[32minfo[39m] Executing (default): SELECT `id`, `foodName`, `foodDescription`, `foodCalories`, `foodImage`, `createdAt`, `updatedAt`, `foodCategoryId` FROM `foods` AS `foods` WHERE `foods`.`foodCategoryId` = 3 ORDER BY rand() LIMIT 3;
[2021-12-14 20:32:52] [[32minfo[39m] Request status: [object Object] data [object SequelizeInstance:foodCategories],[object SequelizeInstance:foodCategories],[object SequelizeInstance:foodCategories],[object SequelizeInstance:foodCategories],[object SequelizeInstance:foodCategories]
[2021-12-14 20:32:52] [[32minfo[39m] Executing (default): SELECT `carts`.*, `cartDetails`.`id` AS `cartDetails.id`, `cartDetails`.`quantity` AS `cartDetails.quantity`, `cartDetails`.`isBuy` AS `cartDetails.isBuy`, `cartDetails`.`isDeleted` AS `cartDetails.isDeleted`, `cartDetails`.`createdAt` AS `cartDetails.createdAt`, `cartDetails`.`updatedAt` AS `cartDetails.updatedAt`, `cartDetails`.`cartId` AS `cartDetails.cartId`, `cartDetails`.`productId` AS `cartDetails.productId`, `cartDetails->product`.`id` AS `cartDetails.product.id`, `cartDetails->product`.`proName` AS `cartDetails.product.proName`, `cartDetails->product`.`proDescription` AS `cartDetails.product.proDescription`, `cartDetails->product`.`quantityValue` AS `cartDetails.product.quantityValue`, `cartDetails->product`.`price` AS `cartDetails.product.price`, `cartDetails->product`.`brand` AS `cartDetails.product.brand`, `cartDetails->product`.`origin` AS `cartDetails.product.origin`, `cartDetails->product`.`productAt` AS `cartDetails.product.productAt`, `cartDetails->product`.`expireAt` AS `cartDetails.product.expireAt`, `cartDetails->product`.`manual` AS `cartDetails.product.manual`, `cartDetails->product`.`preserve` AS `cartDetails.product.preserve`, `cartDetails->product`.`productImage` AS `cartDetails.product.productImage`, `cartDetails->product`.`createdAt` AS `cartDetails.product.createdAt`, `cartDetails->product`.`updatedAt` AS `cartDetails.product.updatedAt`, `cartDetails->product`.`productCategoryId` AS `cartDetails.product.productCategoryId`, `cartDetails->product`.`quantityId` AS `cartDetails.product.quantityId` FROM (SELECT `carts`.`id`, `carts`.`createdAt`, `carts`.`updatedAt`, `carts`.`userId` FROM `carts` AS `carts` WHERE `carts`.`userId` = '2' AND ( SELECT `cartId` FROM `cartDetails` AS `cartDetails` WHERE ((`cartDetails`.`isBuy` = false AND `cartDetails`.`isDeleted` = false) AND `cartDetails`.`cartId` = `carts`.`id`) LIMIT 1 ) IS NOT NULL LIMIT 1) AS `carts` INNER JOIN `cartDetails` AS `cartDetails` ON `carts`.`id` = `cartDetails`.`cartId` AND `cartDetails`.`isBuy` = false AND `cartDetails`.`isDeleted` = false LEFT OUTER JOIN `products` AS `cartDetails->product` ON `cartDetails`.`productId` = `cartDetails->product`.`id`;
[2021-12-14 20:32:52] [[32minfo[39m] Request status: [object Object] data [object SequelizeInstance:users]
[2021-12-14 20:32:52] [[32minfo[39m] Executing (default): SELECT `carts`.*, `cartDetails`.`id` AS `cartDetails.id`, `cartDetails`.`quantity` AS `cartDetails.quantity`, `cartDetails`.`isBuy` AS `cartDetails.isBuy`, `cartDetails`.`isDeleted` AS `cartDetails.isDeleted`, `cartDetails`.`createdAt` AS `cartDetails.createdAt`, `cartDetails`.`updatedAt` AS `cartDetails.updatedAt`, `cartDetails`.`cartId` AS `cartDetails.cartId`, `cartDetails`.`productId` AS `cartDetails.productId`, `cartDetails->product`.`id` AS `cartDetails.product.id`, `cartDetails->product`.`proName` AS `cartDetails.product.proName`, `cartDetails->product`.`proDescription` AS `cartDetails.product.proDescription`, `cartDetails->product`.`quantityValue` AS `cartDetails.product.quantityValue`, `cartDetails->product`.`price` AS `cartDetails.product.price`, `cartDetails->product`.`brand` AS `cartDetails.product.brand`, `cartDetails->product`.`origin` AS `cartDetails.product.origin`, `cartDetails->product`.`productAt` AS `cartDetails.product.productAt`, `cartDetails->product`.`expireAt` AS `cartDetails.product.expireAt`, `cartDetails->product`.`manual` AS `cartDetails.product.manual`, `cartDetails->product`.`preserve` AS `cartDetails.product.preserve`, `cartDetails->product`.`productImage` AS `cartDetails.product.productImage`, `cartDetails->product`.`createdAt` AS `cartDetails.product.createdAt`, `cartDetails->product`.`updatedAt` AS `cartDetails.product.updatedAt`, `cartDetails->product`.`productCategoryId` AS `cartDetails.product.productCategoryId`, `cartDetails->product`.`quantityId` AS `cartDetails.product.quantityId` FROM (SELECT `carts`.`id`, `carts`.`createdAt`, `carts`.`updatedAt`, `carts`.`userId` FROM `carts` AS `carts` WHERE `carts`.`userId` = '2' AND ( SELECT `cartId` FROM `cartDetails` AS `cartDetails` WHERE ((`cartDetails`.`isBuy` = false AND `cartDetails`.`isDeleted` = false) AND `cartDetails`.`cartId` = `carts`.`id`) LIMIT 1 ) IS NOT NULL LIMIT 1) AS `carts` INNER JOIN `cartDetails` AS `cartDetails` ON `carts`.`id` = `cartDetails`.`cartId` AND `cartDetails`.`isBuy` = false AND `cartDetails`.`isDeleted` = false LEFT OUTER JOIN `products` AS `cartDetails->product` ON `cartDetails`.`productId` = `cartDetails->product`.`id`;
[2021-12-14 20:32:52] [[32minfo[39m] Request status: [object Object] Created!
[2021-12-14 20:32:52] [[32minfo[39m] Executing (default): SELECT `carts`.*, `cartDetails`.`id` AS `cartDetails.id`, `cartDetails`.`quantity` AS `cartDetails.quantity`, `cartDetails`.`isBuy` AS `cartDetails.isBuy`, `cartDetails`.`isDeleted` AS `cartDetails.isDeleted`, `cartDetails`.`createdAt` AS `cartDetails.createdAt`, `cartDetails`.`updatedAt` AS `cartDetails.updatedAt`, `cartDetails`.`cartId` AS `cartDetails.cartId`, `cartDetails`.`productId` AS `cartDetails.productId`, `cartDetails->product`.`id` AS `cartDetails.product.id`, `cartDetails->product`.`proName` AS `cartDetails.product.proName`, `cartDetails->product`.`proDescription` AS `cartDetails.product.proDescription`, `cartDetails->product`.`quantityValue` AS `cartDetails.product.quantityValue`, `cartDetails->product`.`price` AS `cartDetails.product.price`, `cartDetails->product`.`brand` AS `cartDetails.product.brand`, `cartDetails->product`.`origin` AS `cartDetails.product.origin`, `cartDetails->product`.`productAt` AS `cartDetails.product.productAt`, `cartDetails->product`.`expireAt` AS `cartDetails.product.expireAt`, `cartDetails->product`.`manual` AS `cartDetails.product.manual`, `cartDetails->product`.`preserve` AS `cartDetails.product.preserve`, `cartDetails->product`.`productImage` AS `cartDetails.product.productImage`, `cartDetails->product`.`createdAt` AS `cartDetails.product.createdAt`, `cartDetails->product`.`updatedAt` AS `cartDetails.product.updatedAt`, `cartDetails->product`.`productCategoryId` AS `cartDetails.product.productCategoryId`, `cartDetails->product`.`quantityId` AS `cartDetails.product.quantityId` FROM (SELECT `carts`.`id`, `carts`.`createdAt`, `carts`.`updatedAt`, `carts`.`userId` FROM `carts` AS `carts` WHERE `carts`.`userId` = '2' AND ( SELECT `cartId` FROM `cartDetails` AS `cartDetails` WHERE ((`cartDetails`.`isBuy` = false AND `cartDetails`.`isDeleted` = false) AND `cartDetails`.`cartId` = `carts`.`id`) LIMIT 1 ) IS NOT NULL LIMIT 1) AS `carts` INNER JOIN `cartDetails` AS `cartDetails` ON `carts`.`id` = `cartDetails`.`cartId` AND `cartDetails`.`isBuy` = false AND `cartDetails`.`isDeleted` = false LEFT OUTER JOIN `products` AS `cartDetails->product` ON `cartDetails`.`productId` = `cartDetails->product`.`id`;
[2021-12-14 20:32:52] [[32minfo[39m] Request status: [object Object] data [object SequelizeInstance:users]
[2021-12-14 20:32:52] [[32minfo[39m] Executing (default): SELECT `carts`.*, `cartDetails`.`id` AS `cartDetails.id`, `cartDetails`.`quantity` AS `cartDetails.quantity`, `cartDetails`.`isBuy` AS `cartDetails.isBuy`, `cartDetails`.`isDeleted` AS `cartDetails.isDeleted`, `cartDetails`.`createdAt` AS `cartDetails.createdAt`, `cartDetails`.`updatedAt` AS `cartDetails.updatedAt`, `cartDetails`.`cartId` AS `cartDetails.cartId`, `cartDetails`.`productId` AS `cartDetails.productId`, `cartDetails->product`.`id` AS `cartDetails.product.id`, `cartDetails->product`.`proName` AS `cartDetails.product.proName`, `cartDetails->product`.`proDescription` AS `cartDetails.product.proDescription`, `cartDetails->product`.`quantityValue` AS `cartDetails.product.quantityValue`, `cartDetails->product`.`price` AS `cartDetails.product.price`, `cartDetails->product`.`brand` AS `cartDetails.product.brand`, `cartDetails->product`.`origin` AS `cartDetails.product.origin`, `cartDetails->product`.`productAt` AS `cartDetails.product.productAt`, `cartDetails->product`.`expireAt` AS `cartDetails.product.expireAt`, `cartDetails->product`.`manual` AS `cartDetails.product.manual`, `cartDetails->product`.`preserve` AS `cartDetails.product.preserve`, `cartDetails->product`.`productImage` AS `cartDetails.product.productImage`, `cartDetails->product`.`createdAt` AS `cartDetails.product.createdAt`, `cartDetails->product`.`updatedAt` AS `cartDetails.product.updatedAt`, `cartDetails->product`.`productCategoryId` AS `cartDetails.product.productCategoryId`, `cartDetails->product`.`quantityId` AS `cartDetails.product.quantityId` FROM (SELECT `carts`.`id`, `carts`.`createdAt`, `carts`.`updatedAt`, `carts`.`userId` FROM `carts` AS `carts` WHERE `carts`.`userId` = '2' AND ( SELECT `cartId` FROM `cartDetails` AS `cartDetails` WHERE ((`cartDetails`.`isBuy` = false AND `cartDetails`.`isDeleted` = false) AND `cartDetails`.`cartId` = `carts`.`id`) LIMIT 1 ) IS NOT NULL LIMIT 1) AS `carts` INNER JOIN `cartDetails` AS `cartDetails` ON `carts`.`id` = `cartDetails`.`cartId` AND `cartDetails`.`isBuy` = false AND `cartDetails`.`isDeleted` = false LEFT OUTER JOIN `products` AS `cartDetails->product` ON `cartDetails`.`productId` = `cartDetails->product`.`id`;
[2021-12-14 20:32:52] [[32minfo[39m] Request status: [object Object] Created!
[2021-12-14 20:32:52] [[32minfo[39m] Executing (default): SELECT `carts`.*, `cartDetails`.`id` AS `cartDetails.id`, `cartDetails`.`quantity` AS `cartDetails.quantity`, `cartDetails`.`isBuy` AS `cartDetails.isBuy`, `cartDetails`.`isDeleted` AS `cartDetails.isDeleted`, `cartDetails`.`createdAt` AS `cartDetails.createdAt`, `cartDetails`.`updatedAt` AS `cartDetails.updatedAt`, `cartDetails`.`cartId` AS `cartDetails.cartId`, `cartDetails`.`productId` AS `cartDetails.productId`, `cartDetails->product`.`id` AS `cartDetails.product.id`, `cartDetails->product`.`proName` AS `cartDetails.product.proName`, `cartDetails->product`.`proDescription` AS `cartDetails.product.proDescription`, `cartDetails->product`.`quantityValue` AS `cartDetails.product.quantityValue`, `cartDetails->product`.`price` AS `cartDetails.product.price`, `cartDetails->product`.`brand` AS `cartDetails.product.brand`, `cartDetails->product`.`origin` AS `cartDetails.product.origin`, `cartDetails->product`.`productAt` AS `cartDetails.product.productAt`, `cartDetails->product`.`expireAt` AS `cartDetails.product.expireAt`, `cartDetails->product`.`manual` AS `cartDetails.product.manual`, `cartDetails->product`.`preserve` AS `cartDetails.product.preserve`, `cartDetails->product`.`productImage` AS `cartDetails.product.productImage`, `cartDetails->product`.`createdAt` AS `cartDetails.product.createdAt`, `cartDetails->product`.`updatedAt` AS `cartDetails.product.updatedAt`, `cartDetails->product`.`productCategoryId` AS `cartDetails.product.productCategoryId`, `cartDetails->product`.`quantityId` AS `cartDetails.product.quantityId` FROM (SELECT `carts`.`id`, `carts`.`createdAt`, `carts`.`updatedAt`, `carts`.`userId` FROM `carts` AS `carts` WHERE `carts`.`userId` = '2' AND ( SELECT `cartId` FROM `cartDetails` AS `cartDetails` WHERE ((`cartDetails`.`isBuy` = false AND `cartDetails`.`isDeleted` = false) AND `cartDetails`.`cartId` = `carts`.`id`) LIMIT 1 ) IS NOT NULL LIMIT 1) AS `carts` INNER JOIN `cartDetails` AS `cartDetails` ON `carts`.`id` = `cartDetails`.`cartId` AND `cartDetails`.`isBuy` = false AND `cartDetails`.`isDeleted` = false LEFT OUTER JOIN `products` AS `cartDetails->product` ON `cartDetails`.`productId` = `cartDetails->product`.`id`;
[2021-12-14 20:32:52] [[32minfo[39m] Request status: [object Object] Created!
[2021-12-14 20:32:52] [[32minfo[39m] Executing (default): SELECT `carts`.*, `cartDetails`.`id` AS `cartDetails.id`, `cartDetails`.`quantity` AS `cartDetails.quantity`, `cartDetails`.`isBuy` AS `cartDetails.isBuy`, `cartDetails`.`isDeleted` AS `cartDetails.isDeleted`, `cartDetails`.`createdAt` AS `cartDetails.createdAt`, `cartDetails`.`updatedAt` AS `cartDetails.updatedAt`, `cartDetails`.`cartId` AS `cartDetails.cartId`, `cartDetails`.`productId` AS `cartDetails.productId`, `cartDetails->product`.`id` AS `cartDetails.product.id`, `cartDetails->product`.`proName` AS `cartDetails.product.proName`, `cartDetails->product`.`proDescription` AS `cartDetails.product.proDescription`, `cartDetails->product`.`quantityValue` AS `cartDetails.product.quantityValue`, `cartDetails->product`.`price` AS `cartDetails.product.price`, `cartDetails->product`.`brand` AS `cartDetails.product.brand`, `cartDetails->product`.`origin` AS `cartDetails.product.origin`, `cartDetails->product`.`productAt` AS `cartDetails.product.productAt`, `cartDetails->product`.`expireAt` AS `cartDetails.product.expireAt`, `cartDetails->product`.`manual` AS `cartDetails.product.manual`, `cartDetails->product`.`preserve` AS `cartDetails.product.preserve`, `cartDetails->product`.`productImage` AS `cartDetails.product.productImage`, `cartDetails->product`.`createdAt` AS `cartDetails.product.createdAt`, `cartDetails->product`.`updatedAt` AS `cartDetails.product.updatedAt`, `cartDetails->product`.`productCategoryId` AS `cartDetails.product.productCategoryId`, `cartDetails->product`.`quantityId` AS `cartDetails.product.quantityId` FROM (SELECT `carts`.`id`, `carts`.`createdAt`, `carts`.`updatedAt`, `carts`.`userId` FROM `carts` AS `carts` WHERE `carts`.`userId` = '2' AND ( SELECT `cartId` FROM `cartDetails` AS `cartDetails` WHERE ((`cartDetails`.`isBuy` = false AND `cartDetails`.`isDeleted` = false) AND `cartDetails`.`cartId` = `carts`.`id`) LIMIT 1 ) IS NOT NULL LIMIT 1) AS `carts` INNER JOIN `cartDetails` AS `cartDetails` ON `carts`.`id` = `cartDetails`.`cartId` AND `cartDetails`.`isBuy` = false AND `cartDetails`.`isDeleted` = false LEFT OUTER JOIN `products` AS `cartDetails->product` ON `cartDetails`.`productId` = `cartDetails->product`.`id`;
[2021-12-14 20:32:52] [[32minfo[39m] Executing (default): SELECT `carts`.*, `cartDetails`.`id` AS `cartDetails.id`, `cartDetails`.`quantity` AS `cartDetails.quantity`, `cartDetails`.`isBuy` AS `cartDetails.isBuy`, `cartDetails`.`isDeleted` AS `cartDetails.isDeleted`, `cartDetails`.`createdAt` AS `cartDetails.createdAt`, `cartDetails`.`updatedAt` AS `cartDetails.updatedAt`, `cartDetails`.`cartId` AS `cartDetails.cartId`, `cartDetails`.`productId` AS `cartDetails.productId`, `cartDetails->product`.`id` AS `cartDetails.product.id`, `cartDetails->product`.`proName` AS `cartDetails.product.proName`, `cartDetails->product`.`proDescription` AS `cartDetails.product.proDescription`, `cartDetails->product`.`quantityValue` AS `cartDetails.product.quantityValue`, `cartDetails->product`.`price` AS `cartDetails.product.price`, `cartDetails->product`.`brand` AS `cartDetails.product.brand`, `cartDetails->product`.`origin` AS `cartDetails.product.origin`, `cartDetails->product`.`productAt` AS `cartDetails.product.productAt`, `cartDetails->product`.`expireAt` AS `cartDetails.product.expireAt`, `cartDetails->product`.`manual` AS `cartDetails.product.manual`, `cartDetails->product`.`preserve` AS `cartDetails.product.preserve`, `cartDetails->product`.`productImage` AS `cartDetails.product.productImage`, `cartDetails->product`.`createdAt` AS `cartDetails.product.createdAt`, `cartDetails->product`.`updatedAt` AS `cartDetails.product.updatedAt`, `cartDetails->product`.`productCategoryId` AS `cartDetails.product.productCategoryId`, `cartDetails->product`.`quantityId` AS `cartDetails.product.quantityId` FROM (SELECT `carts`.`id`, `carts`.`createdAt`, `carts`.`updatedAt`, `carts`.`userId` FROM `carts` AS `carts` WHERE `carts`.`userId` = '2' AND ( SELECT `cartId` FROM `cartDetails` AS `cartDetails` WHERE ((`cartDetails`.`isBuy` = false AND `cartDetails`.`isDeleted` = false) AND `cartDetails`.`cartId` = `carts`.`id`) LIMIT 1 ) IS NOT NULL LIMIT 1) AS `carts` INNER JOIN `cartDetails` AS `cartDetails` ON `carts`.`id` = `cartDetails`.`cartId` AND `cartDetails`.`isBuy` = false AND `cartDetails`.`isDeleted` = false LEFT OUTER JOIN `products` AS `cartDetails->product` ON `cartDetails`.`productId` = `cartDetails->product`.`id`;
[2021-12-14 20:32:52] [[32minfo[39m] Executing (default): SELECT `createdAt`, `updatedAt`, `userId`, `foodCategoryId` FROM `favoriteFoodCategories` AS `favoriteFoodCategories` WHERE `favoriteFoodCategories`.`userId` = 2;
[2021-12-14 20:32:52] [[32minfo[39m] Executing (default): SELECT `createdAt`, `updatedAt`, `userId`, `foodCategoryId` FROM `favoriteFoodCategories` AS `favoriteFoodCategories` WHERE `favoriteFoodCategories`.`userId` = 2;
[2021-12-14 20:32:52] [[32minfo[39m] Executing (default): SELECT `createdAt`, `updatedAt`, `userId`, `foodCategoryId` FROM `favoriteFoodCategories` AS `favoriteFoodCategories` WHERE `favoriteFoodCategories`.`userId` = 2;
[2021-12-14 20:32:52] [[32minfo[39m] Executing (default): SELECT `createdAt`, `updatedAt`, `userId`, `foodCategoryId` FROM `favoriteFoodCategories` AS `favoriteFoodCategories` WHERE `favoriteFoodCategories`.`userId` = 2;
[2021-12-14 20:32:52] [[32minfo[39m] Executing (default): SELECT `carts`.*, `cartDetails`.`id` AS `cartDetails.id`, `cartDetails`.`quantity` AS `cartDetails.quantity`, `cartDetails`.`isBuy` AS `cartDetails.isBuy`, `cartDetails`.`isDeleted` AS `cartDetails.isDeleted`, `cartDetails`.`createdAt` AS `cartDetails.createdAt`, `cartDetails`.`updatedAt` AS `cartDetails.updatedAt`, `cartDetails`.`cartId` AS `cartDetails.cartId`, `cartDetails`.`productId` AS `cartDetails.productId`, `cartDetails->product`.`id` AS `cartDetails.product.id`, `cartDetails->product`.`proName` AS `cartDetails.product.proName`, `cartDetails->product`.`proDescription` AS `cartDetails.product.proDescription`, `cartDetails->product`.`quantityValue` AS `cartDetails.product.quantityValue`, `cartDetails->product`.`price` AS `cartDetails.product.price`, `cartDetails->product`.`brand` AS `cartDetails.product.brand`, `cartDetails->product`.`origin` AS `cartDetails.product.origin`, `cartDetails->product`.`productAt` AS `cartDetails.product.productAt`, `cartDetails->product`.`expireAt` AS `cartDetails.product.expireAt`, `cartDetails->product`.`manual` AS `cartDetails.product.manual`, `cartDetails->product`.`preserve` AS `cartDetails.product.preserve`, `cartDetails->product`.`productImage` AS `cartDetails.product.productImage`, `cartDetails->product`.`createdAt` AS `cartDetails.product.createdAt`, `cartDetails->product`.`updatedAt` AS `cartDetails.product.updatedAt`, `cartDetails->product`.`productCategoryId` AS `cartDetails.product.productCategoryId`, `cartDetails->product`.`quantityId` AS `cartDetails.product.quantityId` FROM (SELECT `carts`.`id`, `carts`.`createdAt`, `carts`.`updatedAt`, `carts`.`userId` FROM `carts` AS `carts` WHERE `carts`.`userId` = '2' AND ( SELECT `cartId` FROM `cartDetails` AS `cartDetails` WHERE ((`cartDetails`.`isBuy` = false AND `cartDetails`.`isDeleted` = false) AND `cartDetails`.`cartId` = `carts`.`id`) LIMIT 1 ) IS NOT NULL LIMIT 1) AS `carts` INNER JOIN `cartDetails` AS `cartDetails` ON `carts`.`id` = `cartDetails`.`cartId` AND `cartDetails`.`isBuy` = false AND `cartDetails`.`isDeleted` = false LEFT OUTER JOIN `products` AS `cartDetails->product` ON `cartDetails`.`productId` = `cartDetails->product`.`id`;
[2021-12-14 20:32:52] [[32minfo[39m] Executing (default): SELECT `carts`.*, `cartDetails`.`id` AS `cartDetails.id`, `cartDetails`.`quantity` AS `cartDetails.quantity`, `cartDetails`.`isBuy` AS `cartDetails.isBuy`, `cartDetails`.`isDeleted` AS `cartDetails.isDeleted`, `cartDetails`.`createdAt` AS `cartDetails.createdAt`, `cartDetails`.`updatedAt` AS `cartDetails.updatedAt`, `cartDetails`.`cartId` AS `cartDetails.cartId`, `cartDetails`.`productId` AS `cartDetails.productId`, `cartDetails->product`.`id` AS `cartDetails.product.id`, `cartDetails->product`.`proName` AS `cartDetails.product.proName`, `cartDetails->product`.`proDescription` AS `cartDetails.product.proDescription`, `cartDetails->product`.`quantityValue` AS `cartDetails.product.quantityValue`, `cartDetails->product`.`price` AS `cartDetails.product.price`, `cartDetails->product`.`brand` AS `cartDetails.product.brand`, `cartDetails->product`.`origin` AS `cartDetails.product.origin`, `cartDetails->product`.`productAt` AS `cartDetails.product.productAt`, `cartDetails->product`.`expireAt` AS `cartDetails.product.expireAt`, `cartDetails->product`.`manual` AS `cartDetails.product.manual`, `cartDetails->product`.`preserve` AS `cartDetails.product.preserve`, `cartDetails->product`.`productImage` AS `cartDetails.product.productImage`, `cartDetails->product`.`createdAt` AS `cartDetails.product.createdAt`, `cartDetails->product`.`updatedAt` AS `cartDetails.product.updatedAt`, `cartDetails->product`.`productCategoryId` AS `cartDetails.product.productCategoryId`, `cartDetails->product`.`quantityId` AS `cartDetails.product.quantityId` FROM (SELECT `carts`.`id`, `carts`.`createdAt`, `carts`.`updatedAt`, `carts`.`userId` FROM `carts` AS `carts` WHERE `carts`.`userId` = '2' AND ( SELECT `cartId` FROM `cartDetails` AS `cartDetails` WHERE ((`cartDetails`.`isBuy` = false AND `cartDetails`.`isDeleted` = false) AND `cartDetails`.`cartId` = `carts`.`id`) LIMIT 1 ) IS NOT NULL LIMIT 1) AS `carts` INNER JOIN `cartDetails` AS `cartDetails` ON `carts`.`id` = `cartDetails`.`cartId` AND `cartDetails`.`isBuy` = false AND `cartDetails`.`isDeleted` = false LEFT OUTER JOIN `products` AS `cartDetails->product` ON `cartDetails`.`productId` = `cartDetails->product`.`id`;
[2021-12-14 20:32:52] [[32minfo[39m] Executing (default): SELECT `carts`.*, `cartDetails`.`id` AS `cartDetails.id`, `cartDetails`.`quantity` AS `cartDetails.quantity`, `cartDetails`.`isBuy` AS `cartDetails.isBuy`, `cartDetails`.`isDeleted` AS `cartDetails.isDeleted`, `cartDetails`.`createdAt` AS `cartDetails.createdAt`, `cartDetails`.`updatedAt` AS `cartDetails.updatedAt`, `cartDetails`.`cartId` AS `cartDetails.cartId`, `cartDetails`.`productId` AS `cartDetails.productId`, `cartDetails->product`.`id` AS `cartDetails.product.id`, `cartDetails->product`.`proName` AS `cartDetails.product.proName`, `cartDetails->product`.`proDescription` AS `cartDetails.product.proDescription`, `cartDetails->product`.`quantityValue` AS `cartDetails.product.quantityValue`, `cartDetails->product`.`price` AS `cartDetails.product.price`, `cartDetails->product`.`brand` AS `cartDetails.product.brand`, `cartDetails->product`.`origin` AS `cartDetails.product.origin`, `cartDetails->product`.`productAt` AS `cartDetails.product.productAt`, `cartDetails->product`.`expireAt` AS `cartDetails.product.expireAt`, `cartDetails->product`.`manual` AS `cartDetails.product.manual`, `cartDetails->product`.`preserve` AS `cartDetails.product.preserve`, `cartDetails->product`.`productImage` AS `cartDetails.product.productImage`, `cartDetails->product`.`createdAt` AS `cartDetails.product.createdAt`, `cartDetails->product`.`updatedAt` AS `cartDetails.product.updatedAt`, `cartDetails->product`.`productCategoryId` AS `cartDetails.product.productCategoryId`, `cartDetails->product`.`quantityId` AS `cartDetails.product.quantityId` FROM (SELECT `carts`.`id`, `carts`.`createdAt`, `carts`.`updatedAt`, `carts`.`userId` FROM `carts` AS `carts` WHERE `carts`.`userId` = '2' AND ( SELECT `cartId` FROM `cartDetails` AS `cartDetails` WHERE ((`cartDetails`.`isBuy` = false AND `cartDetails`.`isDeleted` = false) AND `cartDetails`.`cartId` = `carts`.`id`) LIMIT 1 ) IS NOT NULL LIMIT 1) AS `carts` INNER JOIN `cartDetails` AS `cartDetails` ON `carts`.`id` = `cartDetails`.`cartId` AND `cartDetails`.`isBuy` = false AND `cartDetails`.`isDeleted` = false LEFT OUTER JOIN `products` AS `cartDetails->product` ON `cartDetails`.`productId` = `cartDetails->product`.`id`;
[2021-12-14 20:32:52] [[32minfo[39m] Executing (default): SELECT `carts`.*, `cartDetails`.`id` AS `cartDetails.id`, `cartDetails`.`quantity` AS `cartDetails.quantity`, `cartDetails`.`isBuy` AS `cartDetails.isBuy`, `cartDetails`.`isDeleted` AS `cartDetails.isDeleted`, `cartDetails`.`createdAt` AS `cartDetails.createdAt`, `cartDetails`.`updatedAt` AS `cartDetails.updatedAt`, `cartDetails`.`cartId` AS `cartDetails.cartId`, `cartDetails`.`productId` AS `cartDetails.productId`, `cartDetails->product`.`id` AS `cartDetails.product.id`, `cartDetails->product`.`proName` AS `cartDetails.product.proName`, `cartDetails->product`.`proDescription` AS `cartDetails.product.proDescription`, `cartDetails->product`.`quantityValue` AS `cartDetails.product.quantityValue`, `cartDetails->product`.`price` AS `cartDetails.product.price`, `cartDetails->product`.`brand` AS `cartDetails.product.brand`, `cartDetails->product`.`origin` AS `cartDetails.product.origin`, `cartDetails->product`.`productAt` AS `cartDetails.product.productAt`, `cartDetails->product`.`expireAt` AS `cartDetails.product.expireAt`, `cartDetails->product`.`manual` AS `cartDetails.product.manual`, `cartDetails->product`.`preserve` AS `cartDetails.product.preserve`, `cartDetails->product`.`productImage` AS `cartDetails.product.productImage`, `cartDetails->product`.`createdAt` AS `cartDetails.product.createdAt`, `cartDetails->product`.`updatedAt` AS `cartDetails.product.updatedAt`, `cartDetails->product`.`productCategoryId` AS `cartDetails.product.productCategoryId`, `cartDetails->product`.`quantityId` AS `cartDetails.product.quantityId` FROM (SELECT `carts`.`id`, `carts`.`createdAt`, `carts`.`updatedAt`, `carts`.`userId` FROM `carts` AS `carts` WHERE `carts`.`userId` = '2' AND ( SELECT `cartId` FROM `cartDetails` AS `cartDetails` WHERE ((`cartDetails`.`isBuy` = false AND `cartDetails`.`isDeleted` = false) AND `cartDetails`.`cartId` = `carts`.`id`) LIMIT 1 ) IS NOT NULL LIMIT 1) AS `carts` INNER JOIN `cartDetails` AS `cartDetails` ON `carts`.`id` = `cartDetails`.`cartId` AND `cartDetails`.`isBuy` = false AND `cartDetails`.`isDeleted` = false LEFT OUTER JOIN `products` AS `cartDetails->product` ON `cartDetails`.`productId` = `cartDetails->product`.`id`;
[2021-12-14 20:32:52] [[32minfo[39m] Executing (default): SELECT `carts`.*, `cartDetails`.`id` AS `cartDetails.id`, `cartDetails`.`quantity` AS `cartDetails.quantity`, `cartDetails`.`isBuy` AS `cartDetails.isBuy`, `cartDetails`.`isDeleted` AS `cartDetails.isDeleted`, `cartDetails`.`createdAt` AS `cartDetails.createdAt`, `cartDetails`.`updatedAt` AS `cartDetails.updatedAt`, `cartDetails`.`cartId` AS `cartDetails.cartId`, `cartDetails`.`productId` AS `cartDetails.productId`, `cartDetails->product`.`id` AS `cartDetails.product.id`, `cartDetails->product`.`proName` AS `cartDetails.product.proName`, `cartDetails->product`.`proDescription` AS `cartDetails.product.proDescription`, `cartDetails->product`.`quantityValue` AS `cartDetails.product.quantityValue`, `cartDetails->product`.`price` AS `cartDetails.product.price`, `cartDetails->product`.`brand` AS `cartDetails.product.brand`, `cartDetails->product`.`origin` AS `cartDetails.product.origin`, `cartDetails->product`.`productAt` AS `cartDetails.product.productAt`, `cartDetails->product`.`expireAt` AS `cartDetails.product.expireAt`, `cartDetails->product`.`manual` AS `cartDetails.product.manual`, `cartDetails->product`.`preserve` AS `cartDetails.product.preserve`, `cartDetails->product`.`productImage` AS `cartDetails.product.productImage`, `cartDetails->product`.`createdAt` AS `cartDetails.product.createdAt`, `cartDetails->product`.`updatedAt` AS `cartDetails.product.updatedAt`, `cartDetails->product`.`productCategoryId` AS `cartDetails.product.productCategoryId`, `cartDetails->product`.`quantityId` AS `cartDetails.product.quantityId` FROM (SELECT `carts`.`id`, `carts`.`createdAt`, `carts`.`updatedAt`, `carts`.`userId` FROM `carts` AS `carts` WHERE `carts`.`userId` = '2' AND ( SELECT `cartId` FROM `cartDetails` AS `cartDetails` WHERE ((`cartDetails`.`isBuy` = false AND `cartDetails`.`isDeleted` = false) AND `cartDetails`.`cartId` = `carts`.`id`) LIMIT 1 ) IS NOT NULL LIMIT 1) AS `carts` INNER JOIN `cartDetails` AS `cartDetails` ON `carts`.`id` = `cartDetails`.`cartId` AND `cartDetails`.`isBuy` = false AND `cartDetails`.`isDeleted` = false LEFT OUTER JOIN `products` AS `cartDetails->product` ON `cartDetails`.`productId` = `cartDetails->product`.`id`;
[2021-12-14 20:32:52] [[32minfo[39m] Executing (default): SELECT `carts`.*, `cartDetails`.`id` AS `cartDetails.id`, `cartDetails`.`quantity` AS `cartDetails.quantity`, `cartDetails`.`isBuy` AS `cartDetails.isBuy`, `cartDetails`.`isDeleted` AS `cartDetails.isDeleted`, `cartDetails`.`createdAt` AS `cartDetails.createdAt`, `cartDetails`.`updatedAt` AS `cartDetails.updatedAt`, `cartDetails`.`cartId` AS `cartDetails.cartId`, `cartDetails`.`productId` AS `cartDetails.productId`, `cartDetails->product`.`id` AS `cartDetails.product.id`, `cartDetails->product`.`proName` AS `cartDetails.product.proName`, `cartDetails->product`.`proDescription` AS `cartDetails.product.proDescription`, `cartDetails->product`.`quantityValue` AS `cartDetails.product.quantityValue`, `cartDetails->product`.`price` AS `cartDetails.product.price`, `cartDetails->product`.`brand` AS `cartDetails.product.brand`, `cartDetails->product`.`origin` AS `cartDetails.product.origin`, `cartDetails->product`.`productAt` AS `cartDetails.product.productAt`, `cartDetails->product`.`expireAt` AS `cartDetails.product.expireAt`, `cartDetails->product`.`manual` AS `cartDetails.product.manual`, `cartDetails->product`.`preserve` AS `cartDetails.product.preserve`, `cartDetails->product`.`productImage` AS `cartDetails.product.productImage`, `cartDetails->product`.`createdAt` AS `cartDetails.product.createdAt`, `cartDetails->product`.`updatedAt` AS `cartDetails.product.updatedAt`, `cartDetails->product`.`productCategoryId` AS `cartDetails.product.productCategoryId`, `cartDetails->product`.`quantityId` AS `cartDetails.product.quantityId` FROM (SELECT `carts`.`id`, `carts`.`createdAt`, `carts`.`updatedAt`, `carts`.`userId` FROM `carts` AS `carts` WHERE `carts`.`userId` = '2' AND ( SELECT `cartId` FROM `cartDetails` AS `cartDetails` WHERE ((`cartDetails`.`isBuy` = false AND `cartDetails`.`isDeleted` = false) AND `cartDetails`.`cartId` = `carts`.`id`) LIMIT 1 ) IS NOT NULL LIMIT 1) AS `carts` INNER JOIN `cartDetails` AS `cartDetails` ON `carts`.`id` = `cartDetails`.`cartId` AND `cartDetails`.`isBuy` = false AND `cartDetails`.`isDeleted` = false LEFT OUTER JOIN `products` AS `cartDetails->product` ON `cartDetails`.`productId` = `cartDetails->product`.`id`;
[2021-12-14 20:32:52] [[32minfo[39m] Executing (default): SELECT `carts`.*, `cartDetails`.`id` AS `cartDetails.id`, `cartDetails`.`quantity` AS `cartDetails.quantity`, `cartDetails`.`isBuy` AS `cartDetails.isBuy`, `cartDetails`.`isDeleted` AS `cartDetails.isDeleted`, `cartDetails`.`createdAt` AS `cartDetails.createdAt`, `cartDetails`.`updatedAt` AS `cartDetails.updatedAt`, `cartDetails`.`cartId` AS `cartDetails.cartId`, `cartDetails`.`productId` AS `cartDetails.productId`, `cartDetails->product`.`id` AS `cartDetails.product.id`, `cartDetails->product`.`proName` AS `cartDetails.product.proName`, `cartDetails->product`.`proDescription` AS `cartDetails.product.proDescription`, `cartDetails->product`.`quantityValue` AS `cartDetails.product.quantityValue`, `cartDetails->product`.`price` AS `cartDetails.product.price`, `cartDetails->product`.`brand` AS `cartDetails.product.brand`, `cartDetails->product`.`origin` AS `cartDetails.product.origin`, `cartDetails->product`.`productAt` AS `cartDetails.product.productAt`, `cartDetails->product`.`expireAt` AS `cartDetails.product.expireAt`, `cartDetails->product`.`manual` AS `cartDetails.product.manual`, `cartDetails->product`.`preserve` AS `cartDetails.product.preserve`, `cartDetails->product`.`productImage` AS `cartDetails.product.productImage`, `cartDetails->product`.`createdAt` AS `cartDetails.product.createdAt`, `cartDetails->product`.`updatedAt` AS `cartDetails.product.updatedAt`, `cartDetails->product`.`productCategoryId` AS `cartDetails.product.productCategoryId`, `cartDetails->product`.`quantityId` AS `cartDetails.product.quantityId` FROM (SELECT `carts`.`id`, `carts`.`createdAt`, `carts`.`updatedAt`, `carts`.`userId` FROM `carts` AS `carts` WHERE `carts`.`userId` = '2' AND ( SELECT `cartId` FROM `cartDetails` AS `cartDetails` WHERE ((`cartDetails`.`isBuy` = false AND `cartDetails`.`isDeleted` = false) AND `cartDetails`.`cartId` = `carts`.`id`) LIMIT 1 ) IS NOT NULL LIMIT 1) AS `carts` INNER JOIN `cartDetails` AS `cartDetails` ON `carts`.`id` = `cartDetails`.`cartId` AND `cartDetails`.`isBuy` = false AND `cartDetails`.`isDeleted` = false LEFT OUTER JOIN `products` AS `cartDetails->product` ON `cartDetails`.`productId` = `cartDetails->product`.`id`;
[2021-12-14 20:34:55] [[32minfo[39m] Executing (default): SELECT `id`, `username`, `email`, `password`, `firstname`, `lastname`, `gender`, `phone`, `birthday`, `address`, `userAvatar`, `createdAt`, `updatedAt` FROM `users` AS `users` WHERE `users`.`username` = 'phuctg';
[2021-12-14 20:34:56] [[32minfo[39m] Executing (default): SELECT `id`, `username`, `email`, `password`, `firstname`, `lastname`, `gender`, `phone`, `birthday`, `address`, `userAvatar`, `createdAt`, `updatedAt` FROM `users` AS `users` WHERE `users`.`id` = '1';
[2021-12-14 20:34:56] [[32minfo[39m] Executing (default): SELECT `createdAt`, `updatedAt`, `userId`, `foodCategoryId` FROM `favoriteFoodCategories` AS `favoriteFoodCategories` WHERE `favoriteFoodCategories`.`userId` = '1';
[2021-12-14 20:34:56] [[32minfo[39m] Request status: [object Object] data [object SequelizeInstance:users]
[2021-12-14 20:34:56] [[31merror[39m] Request status: [object Object] error Error: ENOENT: no such file or directory, open 'D:\git\CNPMM\BEnull'
[2021-12-14 20:34:56] [[32minfo[39m] Request status: [object Object] data [object SequelizeInstance:favoriteFoodCategories]
[2021-12-14 20:35:03] [[32minfo[39m] Executing (default): SELECT `createdAt`, `updatedAt`, `userId`, `foodCategoryId` FROM `favoriteFoodCategories` AS `favoriteFoodCategories` WHERE `favoriteFoodCategories`.`userId` = '1';
[2021-12-14 20:35:03] [[32minfo[39m] Executing (default): SELECT `id`, `username`, `email`, `password`, `firstname`, `lastname`, `gender`, `phone`, `birthday`, `address`, `userAvatar`, `createdAt`, `updatedAt` FROM `users` AS `users` WHERE `users`.`id` = '1';
[2021-12-14 20:35:03] [[32minfo[39m] Executing (default): SELECT `id`, `username`, `email`, `password`, `firstname`, `lastname`, `gender`, `phone`, `birthday`, `address`, `userAvatar`, `createdAt`, `updatedAt` FROM `users` AS `users` WHERE `users`.`id` = '1';
[2021-12-14 20:35:03] [[32minfo[39m] Request status: [object Object] data [object SequelizeInstance:favoriteFoodCategories]
[2021-12-14 20:35:03] [[32minfo[39m] Request status: [object Object] data [object SequelizeInstance:users]
[2021-12-14 20:35:03] [[31merror[39m] Request status: [object Object] error Error: ENOENT: no such file or directory, open 'D:\git\CNPMM\BEnull'
[2021-12-14 20:35:03] [[32minfo[39m] Request status: [object Object] data [object SequelizeInstance:users]
[2021-12-14 20:35:03] [[31merror[39m] Request status: [object Object] error Error: ENOENT: no such file or directory, open 'D:\git\CNPMM\BEnull'
[2021-12-14 20:35:05] [[32minfo[39m] Executing (default): SELECT `id`, `catName`, `catIcon` FROM `foodCategories` AS `foodCategories`;
[2021-12-14 20:35:05] [[32minfo[39m] Request status: [object Object] data [object SequelizeInstance:foodCategories],[object SequelizeInstance:foodCategories],[object SequelizeInstance:foodCategories],[object SequelizeInstance:foodCategories],[object SequelizeInstance:foodCategories]
[2021-12-14 20:35:06] [[32minfo[39m] Executing (default): SELECT `createdAt`, `updatedAt`, `userId`, `foodCategoryId` FROM `favoriteFoodCategories` AS `favoriteFoodCategories` WHERE `favoriteFoodCategories`.`userId` = '1';
[2021-12-14 20:35:06] [[32minfo[39m] Request status: [object Object] data [object SequelizeInstance:favoriteFoodCategories]
[2021-12-14 20:35:06] [[32minfo[39m] Request status: [object Object]
[2021-12-14 20:35:11] [[32minfo[39m] Executing (default): SELECT `id`, `username`, `email`, `password`, `firstname`, `lastname`, `gender`, `phone`, `birthday`, `address`, `userAvatar`, `createdAt`, `updatedAt` FROM `users` AS `users` WHERE `users`.`id` = '1';
[2021-12-14 20:35:11] [[32minfo[39m] Request status: [object Object] data [object SequelizeInstance:users]
[2021-12-14 20:35:11] [[31merror[39m] Request status: [object Object] error Error: ENOENT: no such file or directory, open 'D:\git\CNPMM\BEnull'
[2021-12-14 20:35:11] [[32minfo[39m] Executing (default): SELECT `createdAt`, `updatedAt`, `userId`, `foodCategoryId` FROM `favoriteFoodCategories` AS `favoriteFoodCategories` WHERE `favoriteFoodCategories`.`userId` = '1';
[2021-12-14 20:35:11] [[32minfo[39m] Request status: [object Object] data [object SequelizeInstance:favoriteFoodCategories],[object SequelizeInstance:favoriteFoodCategories]
[2021-12-14 20:35:13] [[32minfo[39m] Executing (default): SELECT `id`, `catName` FROM `productCategories` AS `productCategories`;
[2021-12-14 20:35:13] [[32minfo[39m] Executing (default): SELECT `id`, `username`, `email`, `password`, `firstname`, `lastname`, `gender`, `phone`, `birthday`, `address`, `userAvatar`, `createdAt`, `updatedAt` FROM `users` AS `users` WHERE `users`.`id` = '1';
[2021-12-14 20:35:13] [[32minfo[39m] Request status: [object Object] data [object SequelizeInstance:productCategories],[object SequelizeInstance:productCategories],[object SequelizeInstance:productCategories],[object SequelizeInstance:productCategories],[object SequelizeInstance:productCategories]
[2021-12-14 20:35:13] [[32minfo[39m] Request status: [object Object] data [object SequelizeInstance:users]
[2021-12-14 20:35:13] [[31merror[39m] Request status: [object Object] error Error: ENOENT: no such file or directory, open 'D:\git\CNPMM\BEnull'
[2021-12-14 20:35:13] [[32minfo[39m] Executing (default): SELECT `createdAt`, `updatedAt`, `userId`, `foodCategoryId` FROM `favoriteFoodCategories` AS `favoriteFoodCategories` WHERE `favoriteFoodCategories`.`userId` = '1';
[2021-12-14 20:35:13] [[32minfo[39m] Request status: [object Object] data [object SequelizeInstance:favoriteFoodCategories],[object SequelizeInstance:favoriteFoodCategories]
[2021-12-14 20:35:15] [[32minfo[39m] Executing (default): SELECT `id`, `proName`, `proDescription`, `quantityValue`, `price`, `brand`, `origin`, `productAt`, `expireAt`, `manual`, `preserve`, `productImage`, `createdAt`, `updatedAt`, `productCategoryId`, `quantityId` FROM `products` AS `products` WHERE `products`.`productCategoryId` = '1';
[2021-12-14 20:35:15] [[32minfo[39m] Request status: [object Object] data [object SequelizeInstance:products],[object SequelizeInstance:products],[object SequelizeInstance:products],[object SequelizeInstance:products],[object SequelizeInstance:products],[object SequelizeInstance:products],[object SequelizeInstance:products],[object SequelizeInstance:products],[object SequelizeInstance:products],[object SequelizeInstance:products],[object SequelizeInstance:products],[object SequelizeInstance:products],[object SequelizeInstance:products],[object SequelizeInstance:products]
[2021-12-14 20:35:16] [[32minfo[39m] Executing (default): SELECT `id`, `proName`, `proDescription`, `quantityValue`, `price`, `brand`, `origin`, `productAt`, `expireAt`, `manual`, `preserve`, `productImage`, `createdAt`, `updatedAt`, `productCategoryId`, `quantityId` FROM `products` AS `products` WHERE `products`.`productCategoryId` = '1';
[2021-12-14 20:35:16] [[32minfo[39m] Request status: [object Object] data [object SequelizeInstance:products],[object SequelizeInstance:products],[object SequelizeInstance:products],[object SequelizeInstance:products],[object SequelizeInstance:products],[object SequelizeInstance:products],[object SequelizeInstance:products],[object SequelizeInstance:products],[object SequelizeInstance:products],[object SequelizeInstance:products],[object SequelizeInstance:products],[object SequelizeInstance:products],[object SequelizeInstance:products],[object SequelizeInstance:products]
[2021-12-14 20:35:25] [[32minfo[39m] Executing (default): SELECT `id`, `createdAt`, `updatedAt`, `userId` FROM `carts` AS `carts` WHERE `carts`.`userId` = '1' LIMIT 1;
[2021-12-14 20:35:29] [[32minfo[39m] Executing (default): SELECT `id`, `createdAt`, `updatedAt`, `userId` FROM `carts` AS `carts` WHERE `carts`.`userId` = '1' LIMIT 1;
[2021-12-14 20:35:31] [[32minfo[39m] Executing (default): SELECT `carts`.*, `cartDetails`.`id` AS `cartDetails.id`, `cartDetails`.`quantity` AS `cartDetails.quantity`, `cartDetails`.`isBuy` AS `cartDetails.isBuy`, `cartDetails`.`isDeleted` AS `cartDetails.isDeleted`, `cartDetails`.`createdAt` AS `cartDetails.createdAt`, `cartDetails`.`updatedAt` AS `cartDetails.updatedAt`, `cartDetails`.`cartId` AS `cartDetails.cartId`, `cartDetails`.`productId` AS `cartDetails.productId`, `cartDetails->product`.`id` AS `cartDetails.product.id`, `cartDetails->product`.`proName` AS `cartDetails.product.proName`, `cartDetails->product`.`proDescription` AS `cartDetails.product.proDescription`, `cartDetails->product`.`quantityValue` AS `cartDetails.product.quantityValue`, `cartDetails->product`.`price` AS `cartDetails.product.price`, `cartDetails->product`.`brand` AS `cartDetails.product.brand`, `cartDetails->product`.`origin` AS `cartDetails.product.origin`, `cartDetails->product`.`productAt` AS `cartDetails.product.productAt`, `cartDetails->product`.`expireAt` AS `cartDetails.product.expireAt`, `cartDetails->product`.`manual` AS `cartDetails.product.manual`, `cartDetails->product`.`preserve` AS `cartDetails.product.preserve`, `cartDetails->product`.`productImage` AS `cartDetails.product.productImage`, `cartDetails->product`.`createdAt` AS `cartDetails.product.createdAt`, `cartDetails->product`.`updatedAt` AS `cartDetails.product.updatedAt`, `cartDetails->product`.`productCategoryId` AS `cartDetails.product.productCategoryId`, `cartDetails->product`.`quantityId` AS `cartDetails.product.quantityId` FROM (SELECT `carts`.`id`, `carts`.`createdAt`, `carts`.`updatedAt`, `carts`.`userId` FROM `carts` AS `carts` WHERE `carts`.`userId` = '1' AND ( SELECT `cartId` FROM `cartDetails` AS `cartDetails` WHERE ((`cartDetails`.`isBuy` = false AND `cartDetails`.`isDeleted` = false) AND `cartDetails`.`cartId` = `carts`.`id`) LIMIT 1 ) IS NOT NULL LIMIT 1) AS `carts` INNER JOIN `cartDetails` AS `cartDetails` ON `carts`.`id` = `cartDetails`.`cartId` AND `cartDetails`.`isBuy` = false AND `cartDetails`.`isDeleted` = false LEFT OUTER JOIN `products` AS `cartDetails->product` ON `cartDetails`.`productId` = `cartDetails->product`.`id`;
[2021-12-14 20:35:31] [[32minfo[39m] Executing (default): SELECT `carts`.*, `cartDetails`.`id` AS `cartDetails.id`, `cartDetails`.`quantity` AS `cartDetails.quantity`, `cartDetails`.`isBuy` AS `cartDetails.isBuy`, `cartDetails`.`isDeleted` AS `cartDetails.isDeleted`, `cartDetails`.`createdAt` AS `cartDetails.createdAt`, `cartDetails`.`updatedAt` AS `cartDetails.updatedAt`, `cartDetails`.`cartId` AS `cartDetails.cartId`, `cartDetails`.`productId` AS `cartDetails.productId`, `cartDetails->product`.`id` AS `cartDetails.product.id`, `cartDetails->product`.`proName` AS `cartDetails.product.proName`, `cartDetails->product`.`proDescription` AS `cartDetails.product.proDescription`, `cartDetails->product`.`quantityValue` AS `cartDetails.product.quantityValue`, `cartDetails->product`.`price` AS `cartDetails.product.price`, `cartDetails->product`.`brand` AS `cartDetails.product.brand`, `cartDetails->product`.`origin` AS `cartDetails.product.origin`, `cartDetails->product`.`productAt` AS `cartDetails.product.productAt`, `cartDetails->product`.`expireAt` AS `cartDetails.product.expireAt`, `cartDetails->product`.`manual` AS `cartDetails.product.manual`, `cartDetails->product`.`preserve` AS `cartDetails.product.preserve`, `cartDetails->product`.`productImage` AS `cartDetails.product.productImage`, `cartDetails->product`.`createdAt` AS `cartDetails.product.createdAt`, `cartDetails->product`.`updatedAt` AS `cartDetails.product.updatedAt`, `cartDetails->product`.`productCategoryId` AS `cartDetails.product.productCategoryId`, `cartDetails->product`.`quantityId` AS `cartDetails.product.quantityId` FROM (SELECT `carts`.`id`, `carts`.`createdAt`, `carts`.`updatedAt`, `carts`.`userId` FROM `carts` AS `carts` WHERE `carts`.`userId` = '1' AND ( SELECT `cartId` FROM `cartDetails` AS `cartDetails` WHERE ((`cartDetails`.`isBuy` = false AND `cartDetails`.`isDeleted` = false) AND `cartDetails`.`cartId` = `carts`.`id`) LIMIT 1 ) IS NOT NULL LIMIT 1) AS `carts` INNER JOIN `cartDetails` AS `cartDetails` ON `carts`.`id` = `cartDetails`.`cartId` AND `cartDetails`.`isBuy` = false AND `cartDetails`.`isDeleted` = false LEFT OUTER JOIN `products` AS `cartDetails->product` ON `cartDetails`.`productId` = `cartDetails->product`.`id`;
[2021-12-14 20:35:31] [[32minfo[39m] Request: status: [object Object]  data [object SequelizeInstance:carts]
[2021-12-14 20:35:31] [[32minfo[39m] Request: status: [object Object]  data [object SequelizeInstance:carts]
[2021-12-14 20:35:34] [[32minfo[39m] Executing (default): SELECT `id`, `createdAt`, `updatedAt`, `userId` FROM `carts` AS `carts` WHERE `carts`.`userId` = '1' LIMIT 1;
[2021-12-14 20:35:34] [[32minfo[39m] Executing (default): SELECT `id`, `quantity`, `isBuy`, `isDeleted`, `createdAt`, `updatedAt`, `cartId`, `productId` FROM `cartDetails` AS `cartDetails` WHERE `cartDetails`.`id` = '1' AND `cartDetails`.`isDeleted` = false;
[2021-12-14 20:35:34] [[32minfo[39m] Executing (default): SELECT `carts`.*, `cartDetails`.`id` AS `cartDetails.id`, `cartDetails`.`quantity` AS `cartDetails.quantity`, `cartDetails`.`isBuy` AS `cartDetails.isBuy`, `cartDetails`.`isDeleted` AS `cartDetails.isDeleted`, `cartDetails`.`createdAt` AS `cartDetails.createdAt`, `cartDetails`.`updatedAt` AS `cartDetails.updatedAt`, `cartDetails`.`cartId` AS `cartDetails.cartId`, `cartDetails`.`productId` AS `cartDetails.productId`, `cartDetails->product`.`id` AS `cartDetails.product.id`, `cartDetails->product`.`proName` AS `cartDetails.product.proName`, `cartDetails->product`.`proDescription` AS `cartDetails.product.proDescription`, `cartDetails->product`.`quantityValue` AS `cartDetails.product.quantityValue`, `cartDetails->product`.`price` AS `cartDetails.product.price`, `cartDetails->product`.`brand` AS `cartDetails.product.brand`, `cartDetails->product`.`origin` AS `cartDetails.product.origin`, `cartDetails->product`.`productAt` AS `cartDetails.product.productAt`, `cartDetails->product`.`expireAt` AS `cartDetails.product.expireAt`, `cartDetails->product`.`manual` AS `cartDetails.product.manual`, `cartDetails->product`.`preserve` AS `cartDetails.product.preserve`, `cartDetails->product`.`productImage` AS `cartDetails.product.productImage`, `cartDetails->product`.`createdAt` AS `cartDetails.product.createdAt`, `cartDetails->product`.`updatedAt` AS `cartDetails.product.updatedAt`, `cartDetails->product`.`productCategoryId` AS `cartDetails.product.productCategoryId`, `cartDetails->product`.`quantityId` AS `cartDetails.product.quantityId` FROM (SELECT `carts`.`id`, `carts`.`createdAt`, `carts`.`updatedAt`, `carts`.`userId` FROM `carts` AS `carts` WHERE `carts`.`userId` = '1' AND ( SELECT `cartId` FROM `cartDetails` AS `cartDetails` WHERE ((`cartDetails`.`isBuy` = false AND `cartDetails`.`isDeleted` = false) AND `cartDetails`.`cartId` = `carts`.`id`) LIMIT 1 ) IS NOT NULL LIMIT 1) AS `carts` INNER JOIN `cartDetails` AS `cartDetails` ON `carts`.`id` = `cartDetails`.`cartId` AND `cartDetails`.`isBuy` = false AND `cartDetails`.`isDeleted` = false LEFT OUTER JOIN `products` AS `cartDetails->product` ON `cartDetails`.`productId` = `cartDetails->product`.`id`;
[2021-12-14 20:35:34] [[32minfo[39m] Request: status: [object Object]  data [object SequelizeInstance:carts]
[2021-12-14 20:35:35] [[32minfo[39m] Executing (default): SELECT `carts`.*, `cartDetails`.`id` AS `cartDetails.id`, `cartDetails`.`quantity` AS `cartDetails.quantity`, `cartDetails`.`isBuy` AS `cartDetails.isBuy`, `cartDetails`.`isDeleted` AS `cartDetails.isDeleted`, `cartDetails`.`createdAt` AS `cartDetails.createdAt`, `cartDetails`.`updatedAt` AS `cartDetails.updatedAt`, `cartDetails`.`cartId` AS `cartDetails.cartId`, `cartDetails`.`productId` AS `cartDetails.productId`, `cartDetails->product`.`id` AS `cartDetails.product.id`, `cartDetails->product`.`proName` AS `cartDetails.product.proName`, `cartDetails->product`.`proDescription` AS `cartDetails.product.proDescription`, `cartDetails->product`.`quantityValue` AS `cartDetails.product.quantityValue`, `cartDetails->product`.`price` AS `cartDetails.product.price`, `cartDetails->product`.`brand` AS `cartDetails.product.brand`, `cartDetails->product`.`origin` AS `cartDetails.product.origin`, `cartDetails->product`.`productAt` AS `cartDetails.product.productAt`, `cartDetails->product`.`expireAt` AS `cartDetails.product.expireAt`, `cartDetails->product`.`manual` AS `cartDetails.product.manual`, `cartDetails->product`.`preserve` AS `cartDetails.product.preserve`, `cartDetails->product`.`productImage` AS `cartDetails.product.productImage`, `cartDetails->product`.`createdAt` AS `cartDetails.product.createdAt`, `cartDetails->product`.`updatedAt` AS `cartDetails.product.updatedAt`, `cartDetails->product`.`productCategoryId` AS `cartDetails.product.productCategoryId`, `cartDetails->product`.`quantityId` AS `cartDetails.product.quantityId` FROM (SELECT `carts`.`id`, `carts`.`createdAt`, `carts`.`updatedAt`, `carts`.`userId` FROM `carts` AS `carts` WHERE `carts`.`userId` = '1' AND ( SELECT `cartId` FROM `cartDetails` AS `cartDetails` WHERE ((`cartDetails`.`isBuy` = false AND `cartDetails`.`isDeleted` = false) AND `cartDetails`.`cartId` = `carts`.`id`) LIMIT 1 ) IS NOT NULL LIMIT 1) AS `carts` INNER JOIN `cartDetails` AS `cartDetails` ON `carts`.`id` = `cartDetails`.`cartId` AND `cartDetails`.`isBuy` = false AND `cartDetails`.`isDeleted` = false LEFT OUTER JOIN `products` AS `cartDetails->product` ON `cartDetails`.`productId` = `cartDetails->product`.`id`;
[2021-12-14 20:35:36] [[32minfo[39m] Request: status: [object Object]  data [object SequelizeInstance:carts]
[2021-12-14 20:35:53] [[32minfo[39m] Executing (default): SELECT `id`, `username`, `email`, `password`, `firstname`, `lastname`, `gender`, `phone`, `birthday`, `address`, `userAvatar`, `createdAt`, `updatedAt` FROM `users` AS `users` WHERE `users`.`id` = '1';
[2021-12-14 20:35:53] [[32minfo[39m] Executing (default): SELECT `createdAt`, `updatedAt`, `userId`, `foodCategoryId` FROM `favoriteFoodCategories` AS `favoriteFoodCategories` WHERE `favoriteFoodCategories`.`userId` = '1';
[2021-12-14 20:35:53] [[32minfo[39m] Request status: [object Object] data [object SequelizeInstance:users]
[2021-12-14 20:35:53] [[31merror[39m] Request status: [object Object] error Error: ENOENT: no such file or directory, open 'D:\git\CNPMM\BEnull'
[2021-12-14 20:35:53] [[32minfo[39m] Request status: [object Object] data [object SequelizeInstance:favoriteFoodCategories],[object SequelizeInstance:favoriteFoodCategories]
[2021-12-14 20:35:57] [[32minfo[39m] Executing (default): SELECT `id`, `username`, `email`, `password`, `firstname`, `lastname`, `gender`, `phone`, `birthday`, `address`, `userAvatar`, `createdAt`, `updatedAt` FROM `users` AS `users` WHERE `users`.`id` = '1';
[2021-12-14 20:35:57] [[32minfo[39m] Executing (default): SELECT `createdAt`, `updatedAt`, `userId`, `foodCategoryId` FROM `favoriteFoodCategories` AS `favoriteFoodCategories` WHERE `favoriteFoodCategories`.`userId` = '1';
[2021-12-14 20:35:57] [[32minfo[39m] Request status: [object Object] data [object SequelizeInstance:users]
[2021-12-14 20:35:57] [[31merror[39m] Request status: [object Object] error Error: ENOENT: no such file or directory, open 'D:\git\CNPMM\BEnull'
[2021-12-14 20:35:57] [[32minfo[39m] Request status: [object Object] data [object SequelizeInstance:favoriteFoodCategories],[object SequelizeInstance:favoriteFoodCategories]
[2021-12-14 20:36:06] [[32minfo[39m] Executing (default): SELECT `id`, `proName`, `proDescription`, `quantityValue`, `price`, `brand`, `origin`, `productAt`, `expireAt`, `manual`, `preserve`, `productImage`, `createdAt`, `updatedAt`, `productCategoryId`, `quantityId` FROM `products` AS `products` WHERE `products`.`id` = '13';
[2021-12-14 20:36:06] [[32minfo[39m] Request status: [object Object] data [object SequelizeInstance:products]
[2021-12-14 20:36:09] [[32minfo[39m] Executing (default): SELECT `id`, `createdAt`, `updatedAt`, `userId` FROM `carts` AS `carts` WHERE `carts`.`userId` = '1' LIMIT 1;
[2021-12-14 20:36:13] [[32minfo[39m] Executing (default): SELECT `carts`.*, `cartDetails`.`id` AS `cartDetails.id`, `cartDetails`.`quantity` AS `cartDetails.quantity`, `cartDetails`.`isBuy` AS `cartDetails.isBuy`, `cartDetails`.`isDeleted` AS `cartDetails.isDeleted`, `cartDetails`.`createdAt` AS `cartDetails.createdAt`, `cartDetails`.`updatedAt` AS `cartDetails.updatedAt`, `cartDetails`.`cartId` AS `cartDetails.cartId`, `cartDetails`.`productId` AS `cartDetails.productId`, `cartDetails->product`.`id` AS `cartDetails.product.id`, `cartDetails->product`.`proName` AS `cartDetails.product.proName`, `cartDetails->product`.`proDescription` AS `cartDetails.product.proDescription`, `cartDetails->product`.`quantityValue` AS `cartDetails.product.quantityValue`, `cartDetails->product`.`price` AS `cartDetails.product.price`, `cartDetails->product`.`brand` AS `cartDetails.product.brand`, `cartDetails->product`.`origin` AS `cartDetails.product.origin`, `cartDetails->product`.`productAt` AS `cartDetails.product.productAt`, `cartDetails->product`.`expireAt` AS `cartDetails.product.expireAt`, `cartDetails->product`.`manual` AS `cartDetails.product.manual`, `cartDetails->product`.`preserve` AS `cartDetails.product.preserve`, `cartDetails->product`.`productImage` AS `cartDetails.product.productImage`, `cartDetails->product`.`createdAt` AS `cartDetails.product.createdAt`, `cartDetails->product`.`updatedAt` AS `cartDetails.product.updatedAt`, `cartDetails->product`.`productCategoryId` AS `cartDetails.product.productCategoryId`, `cartDetails->product`.`quantityId` AS `cartDetails.product.quantityId` FROM (SELECT `carts`.`id`, `carts`.`createdAt`, `carts`.`updatedAt`, `carts`.`userId` FROM `carts` AS `carts` WHERE `carts`.`userId` = '1' AND ( SELECT `cartId` FROM `cartDetails` AS `cartDetails` WHERE ((`cartDetails`.`isBuy` = false AND `cartDetails`.`isDeleted` = false) AND `cartDetails`.`cartId` = `carts`.`id`) LIMIT 1 ) IS NOT NULL LIMIT 1) AS `carts` INNER JOIN `cartDetails` AS `cartDetails` ON `carts`.`id` = `cartDetails`.`cartId` AND `cartDetails`.`isBuy` = false AND `cartDetails`.`isDeleted` = false LEFT OUTER JOIN `products` AS `cartDetails->product` ON `cartDetails`.`productId` = `cartDetails->product`.`id`;
[2021-12-14 20:36:13] [[32minfo[39m] Request: status: [object Object]  data [object SequelizeInstance:carts]
[2021-12-14 20:36:25] [[32minfo[39m] Executing (default): SELECT `carts`.*, `cartDetails`.`id` AS `cartDetails.id`, `cartDetails`.`quantity` AS `cartDetails.quantity`, `cartDetails`.`isBuy` AS `cartDetails.isBuy`, `cartDetails`.`isDeleted` AS `cartDetails.isDeleted`, `cartDetails`.`createdAt` AS `cartDetails.createdAt`, `cartDetails`.`updatedAt` AS `cartDetails.updatedAt`, `cartDetails`.`cartId` AS `cartDetails.cartId`, `cartDetails`.`productId` AS `cartDetails.productId`, `cartDetails->product`.`id` AS `cartDetails.product.id`, `cartDetails->product`.`proName` AS `cartDetails.product.proName`, `cartDetails->product`.`proDescription` AS `cartDetails.product.proDescription`, `cartDetails->product`.`quantityValue` AS `cartDetails.product.quantityValue`, `cartDetails->product`.`price` AS `cartDetails.product.price`, `cartDetails->product`.`brand` AS `cartDetails.product.brand`, `cartDetails->product`.`origin` AS `cartDetails.product.origin`, `cartDetails->product`.`productAt` AS `cartDetails.product.productAt`, `cartDetails->product`.`expireAt` AS `cartDetails.product.expireAt`, `cartDetails->product`.`manual` AS `cartDetails.product.manual`, `cartDetails->product`.`preserve` AS `cartDetails.product.preserve`, `cartDetails->product`.`productImage` AS `cartDetails.product.productImage`, `cartDetails->product`.`createdAt` AS `cartDetails.product.createdAt`, `cartDetails->product`.`updatedAt` AS `cartDetails.product.updatedAt`, `cartDetails->product`.`productCategoryId` AS `cartDetails.product.productCategoryId`, `cartDetails->product`.`quantityId` AS `cartDetails.product.quantityId` FROM (SELECT `carts`.`id`, `carts`.`createdAt`, `carts`.`updatedAt`, `carts`.`userId` FROM `carts` AS `carts` WHERE `carts`.`userId` = '1' AND ( SELECT `cartId` FROM `cartDetails` AS `cartDetails` WHERE ((`cartDetails`.`isBuy` = false AND `cartDetails`.`isDeleted` = false) AND `cartDetails`.`cartId` = `carts`.`id`) LIMIT 1 ) IS NOT NULL LIMIT 1) AS `carts` INNER JOIN `cartDetails` AS `cartDetails` ON `carts`.`id` = `cartDetails`.`cartId` AND `cartDetails`.`isBuy` = false AND `cartDetails`.`isDeleted` = false LEFT OUTER JOIN `products` AS `cartDetails->product` ON `cartDetails`.`productId` = `cartDetails->product`.`id`;
[2021-12-14 20:36:25] [[32minfo[39m] Request: status: [object Object]  data [object SequelizeInstance:carts]
[2021-12-14 20:36:26] [[32minfo[39m] Executing (default): SELECT `carts`.*, `cartDetails`.`id` AS `cartDetails.id`, `cartDetails`.`quantity` AS `cartDetails.quantity`, `cartDetails`.`isBuy` AS `cartDetails.isBuy`, `cartDetails`.`isDeleted` AS `cartDetails.isDeleted`, `cartDetails`.`createdAt` AS `cartDetails.createdAt`, `cartDetails`.`updatedAt` AS `cartDetails.updatedAt`, `cartDetails`.`cartId` AS `cartDetails.cartId`, `cartDetails`.`productId` AS `cartDetails.productId`, `cartDetails->product`.`id` AS `cartDetails.product.id`, `cartDetails->product`.`proName` AS `cartDetails.product.proName`, `cartDetails->product`.`proDescription` AS `cartDetails.product.proDescription`, `cartDetails->product`.`quantityValue` AS `cartDetails.product.quantityValue`, `cartDetails->product`.`price` AS `cartDetails.product.price`, `cartDetails->product`.`brand` AS `cartDetails.product.brand`, `cartDetails->product`.`origin` AS `cartDetails.product.origin`, `cartDetails->product`.`productAt` AS `cartDetails.product.productAt`, `cartDetails->product`.`expireAt` AS `cartDetails.product.expireAt`, `cartDetails->product`.`manual` AS `cartDetails.product.manual`, `cartDetails->product`.`preserve` AS `cartDetails.product.preserve`, `cartDetails->product`.`productImage` AS `cartDetails.product.productImage`, `cartDetails->product`.`createdAt` AS `cartDetails.product.createdAt`, `cartDetails->product`.`updatedAt` AS `cartDetails.product.updatedAt`, `cartDetails->product`.`productCategoryId` AS `cartDetails.product.productCategoryId`, `cartDetails->product`.`quantityId` AS `cartDetails.product.quantityId` FROM (SELECT `carts`.`id`, `carts`.`createdAt`, `carts`.`updatedAt`, `carts`.`userId` FROM `carts` AS `carts` WHERE `carts`.`userId` = '1' AND ( SELECT `cartId` FROM `cartDetails` AS `cartDetails` WHERE ((`cartDetails`.`isBuy` = false AND `cartDetails`.`isDeleted` = false) AND `cartDetails`.`cartId` = `carts`.`id`) LIMIT 1 ) IS NOT NULL LIMIT 1) AS `carts` INNER JOIN `cartDetails` AS `cartDetails` ON `carts`.`id` = `cartDetails`.`cartId` AND `cartDetails`.`isBuy` = false AND `cartDetails`.`isDeleted` = false LEFT OUTER JOIN `products` AS `cartDetails->product` ON `cartDetails`.`productId` = `cartDetails->product`.`id`;
[2021-12-14 20:36:26] [[32minfo[39m] Request: status: [object Object]  data [object SequelizeInstance:carts]
[2021-12-14 20:36:27] [[32minfo[39m] Executing (default): SELECT `carts`.*, `cartDetails`.`id` AS `cartDetails.id`, `cartDetails`.`quantity` AS `cartDetails.quantity`, `cartDetails`.`isBuy` AS `cartDetails.isBuy`, `cartDetails`.`isDeleted` AS `cartDetails.isDeleted`, `cartDetails`.`createdAt` AS `cartDetails.createdAt`, `cartDetails`.`updatedAt` AS `cartDetails.updatedAt`, `cartDetails`.`cartId` AS `cartDetails.cartId`, `cartDetails`.`productId` AS `cartDetails.productId`, `cartDetails->product`.`id` AS `cartDetails.product.id`, `cartDetails->product`.`proName` AS `cartDetails.product.proName`, `cartDetails->product`.`proDescription` AS `cartDetails.product.proDescription`, `cartDetails->product`.`quantityValue` AS `cartDetails.product.quantityValue`, `cartDetails->product`.`price` AS `cartDetails.product.price`, `cartDetails->product`.`brand` AS `cartDetails.product.brand`, `cartDetails->product`.`origin` AS `cartDetails.product.origin`, `cartDetails->product`.`productAt` AS `cartDetails.product.productAt`, `cartDetails->product`.`expireAt` AS `cartDetails.product.expireAt`, `cartDetails->product`.`manual` AS `cartDetails.product.manual`, `cartDetails->product`.`preserve` AS `cartDetails.product.preserve`, `cartDetails->product`.`productImage` AS `cartDetails.product.productImage`, `cartDetails->product`.`createdAt` AS `cartDetails.product.createdAt`, `cartDetails->product`.`updatedAt` AS `cartDetails.product.updatedAt`, `cartDetails->product`.`productCategoryId` AS `cartDetails.product.productCategoryId`, `cartDetails->product`.`quantityId` AS `cartDetails.product.quantityId` FROM (SELECT `carts`.`id`, `carts`.`createdAt`, `carts`.`updatedAt`, `carts`.`userId` FROM `carts` AS `carts` WHERE `carts`.`userId` = '1' AND ( SELECT `cartId` FROM `cartDetails` AS `cartDetails` WHERE ((`cartDetails`.`isBuy` = false AND `cartDetails`.`isDeleted` = false) AND `cartDetails`.`cartId` = `carts`.`id`) LIMIT 1 ) IS NOT NULL LIMIT 1) AS `carts` INNER JOIN `cartDetails` AS `cartDetails` ON `carts`.`id` = `cartDetails`.`cartId` AND `cartDetails`.`isBuy` = false AND `cartDetails`.`isDeleted` = false LEFT OUTER JOIN `products` AS `cartDetails->product` ON `cartDetails`.`productId` = `cartDetails->product`.`id`;
[2021-12-14 20:36:27] [[32minfo[39m] Request: status: [object Object]  data [object SequelizeInstance:carts]
[2021-12-14 20:36:27] [[32minfo[39m] Executing (default): SELECT `id`, `catName`, `catIcon` FROM `foodCategories` AS `foodCategories`;
[2021-12-14 20:36:27] [[32minfo[39m] Request status: [object Object] data [object SequelizeInstance:foodCategories],[object SequelizeInstance:foodCategories],[object SequelizeInstance:foodCategories],[object SequelizeInstance:foodCategories],[object SequelizeInstance:foodCategories]
[2021-12-14 20:36:29] [[32minfo[39m] Executing (default): SELECT `id`, `username`, `email`, `password`, `firstname`, `lastname`, `gender`, `phone`, `birthday`, `address`, `userAvatar`, `createdAt`, `updatedAt` FROM `users` AS `users` WHERE `users`.`id` = '1';
[2021-12-14 20:36:29] [[32minfo[39m] Request status: [object Object] data [object SequelizeInstance:users]
[2021-12-14 20:36:29] [[31merror[39m] Request status: [object Object] error Error: ENOENT: no such file or directory, open 'D:\git\CNPMM\BEnull'
[2021-12-14 20:36:29] [[32minfo[39m] Executing (default): SELECT `createdAt`, `updatedAt`, `userId`, `foodCategoryId` FROM `favoriteFoodCategories` AS `favoriteFoodCategories` WHERE `favoriteFoodCategories`.`userId` = '1';
[2021-12-14 20:36:29] [[32minfo[39m] Request status: [object Object] data [object SequelizeInstance:favoriteFoodCategories],[object SequelizeInstance:favoriteFoodCategories]
[2021-12-14 20:36:30] [[32minfo[39m] Executing (default): SELECT `createdAt`, `updatedAt`, `userId`, `foodCategoryId` FROM `favoriteFoodCategories` AS `favoriteFoodCategories` WHERE `favoriteFoodCategories`.`userId` = '1';
[2021-12-14 20:36:30] [[32minfo[39m] Executing (default): SELECT `id`, `username`, `email`, `password`, `firstname`, `lastname`, `gender`, `phone`, `birthday`, `address`, `userAvatar`, `createdAt`, `updatedAt` FROM `users` AS `users` WHERE `users`.`id` = '1';
[2021-12-14 20:36:30] [[32minfo[39m] Request status: [object Object] data [object SequelizeInstance:favoriteFoodCategories],[object SequelizeInstance:favoriteFoodCategories]
[2021-12-14 20:36:30] [[32minfo[39m] Request status: [object Object] data [object SequelizeInstance:users]
[2021-12-14 20:36:30] [[31merror[39m] Request status: [object Object] error Error: ENOENT: no such file or directory, open 'D:\git\CNPMM\BEnull'
[2021-12-14 20:36:31] [[32minfo[39m] Executing (default): SELECT `id`, `username`, `email`, `password`, `firstname`, `lastname`, `gender`, `phone`, `birthday`, `address`, `userAvatar`, `createdAt`, `updatedAt` FROM `users` AS `users` WHERE `users`.`id` = '1';
[2021-12-14 20:36:31] [[32minfo[39m] Executing (default): SELECT `createdAt`, `updatedAt`, `userId`, `foodCategoryId` FROM `favoriteFoodCategories` AS `favoriteFoodCategories` WHERE `favoriteFoodCategories`.`userId` = '1';
[2021-12-14 20:36:31] [[32minfo[39m] Request status: [object Object] data [object SequelizeInstance:users]
[2021-12-14 20:36:31] [[31merror[39m] Request status: [object Object] error Error: ENOENT: no such file or directory, open 'D:\git\CNPMM\BEnull'
[2021-12-14 20:36:31] [[32minfo[39m] Request status: [object Object] data [object SequelizeInstance:favoriteFoodCategories],[object SequelizeInstance:favoriteFoodCategories]
[2021-12-14 20:36:33] [[32minfo[39m] Executing (default): SELECT `id`, `username`, `email`, `password`, `firstname`, `lastname`, `gender`, `phone`, `birthday`, `address`, `userAvatar`, `createdAt`, `updatedAt` FROM `users` AS `users` WHERE `users`.`id` = '1';
[2021-12-14 20:36:33] [[32minfo[39m] Executing (default): SELECT `createdAt`, `updatedAt`, `userId`, `foodCategoryId` FROM `favoriteFoodCategories` AS `favoriteFoodCategories` WHERE `favoriteFoodCategories`.`userId` = '1';
[2021-12-14 20:36:33] [[32minfo[39m] Request status: [object Object] data [object SequelizeInstance:users]
[2021-12-14 20:36:33] [[31merror[39m] Request status: [object Object] error Error: ENOENT: no such file or directory, open 'D:\git\CNPMM\BEnull'
[2021-12-14 20:36:33] [[32minfo[39m] Request status: [object Object] data [object SequelizeInstance:favoriteFoodCategories],[object SequelizeInstance:favoriteFoodCategories]
[2021-12-14 20:36:35] [[32minfo[39m] Executing (default): SELECT `id`, `username`, `email`, `password`, `firstname`, `lastname`, `gender`, `phone`, `birthday`, `address`, `userAvatar`, `createdAt`, `updatedAt` FROM `users` AS `users` WHERE `users`.`id` = '1';
[2021-12-14 20:36:35] [[32minfo[39m] Executing (default): SELECT `createdAt`, `updatedAt`, `userId`, `foodCategoryId` FROM `favoriteFoodCategories` AS `favoriteFoodCategories` WHERE `favoriteFoodCategories`.`userId` = '1';
[2021-12-14 20:36:35] [[32minfo[39m] Request status: [object Object] data [object SequelizeInstance:users]
[2021-12-14 20:36:35] [[31merror[39m] Request status: [object Object] error Error: ENOENT: no such file or directory, open 'D:\git\CNPMM\BEnull'
[2021-12-14 20:36:35] [[32minfo[39m] Request status: [object Object] data [object SequelizeInstance:favoriteFoodCategories],[object SequelizeInstance:favoriteFoodCategories]
[2021-12-14 20:36:36] [[32minfo[39m] Executing (default): SELECT `id`, `username`, `email`, `password`, `firstname`, `lastname`, `gender`, `phone`, `birthday`, `address`, `userAvatar`, `createdAt`, `updatedAt` FROM `users` AS `users` WHERE `users`.`id` = '1';
[2021-12-14 20:36:36] [[32minfo[39m] Request status: [object Object] data [object SequelizeInstance:users]
[2021-12-14 20:36:36] [[31merror[39m] Request status: [object Object] error Error: ENOENT: no such file or directory, open 'D:\git\CNPMM\BEnull'
[2021-12-14 20:36:36] [[32minfo[39m] Executing (default): SELECT `createdAt`, `updatedAt`, `userId`, `foodCategoryId` FROM `favoriteFoodCategories` AS `favoriteFoodCategories` WHERE `favoriteFoodCategories`.`userId` = '1';
[2021-12-14 20:36:36] [[32minfo[39m] Request status: [object Object] data [object SequelizeInstance:favoriteFoodCategories],[object SequelizeInstance:favoriteFoodCategories]
[2021-12-14 20:36:40] [[32minfo[39m] Executing (default): SELECT `id`, `username`, `email`, `password`, `firstname`, `lastname`, `gender`, `phone`, `birthday`, `address`, `userAvatar`, `createdAt`, `updatedAt` FROM `users` AS `users` WHERE `users`.`id` = '1';
[2021-12-14 20:36:40] [[32minfo[39m] Request status: [object Object] data [object SequelizeInstance:users]
[2021-12-14 20:36:40] [[31merror[39m] Request status: [object Object] error Error: ENOENT: no such file or directory, open 'D:\git\CNPMM\BEnull'
[2021-12-14 20:36:40] [[32minfo[39m] Executing (default): SELECT `createdAt`, `updatedAt`, `userId`, `foodCategoryId` FROM `favoriteFoodCategories` AS `favoriteFoodCategories` WHERE `favoriteFoodCategories`.`userId` = '1';
[2021-12-14 20:36:40] [[32minfo[39m] Request status: [object Object] data [object SequelizeInstance:favoriteFoodCategories],[object SequelizeInstance:favoriteFoodCategories]
[2021-12-14 20:36:42] [[32minfo[39m] Executing (default): SELECT `id`, `username`, `email`, `password`, `firstname`, `lastname`, `gender`, `phone`, `birthday`, `address`, `userAvatar`, `createdAt`, `updatedAt` FROM `users` AS `users` WHERE `users`.`id` = '1';
[2021-12-14 20:36:42] [[32minfo[39m] Request status: [object Object] data [object SequelizeInstance:users]
[2021-12-14 20:36:42] [[31merror[39m] Request status: [object Object] error Error: ENOENT: no such file or directory, open 'D:\git\CNPMM\BEnull'
[2021-12-14 20:36:42] [[32minfo[39m] Executing (default): SELECT `createdAt`, `updatedAt`, `userId`, `foodCategoryId` FROM `favoriteFoodCategories` AS `favoriteFoodCategories` WHERE `favoriteFoodCategories`.`userId` = '1';
[2021-12-14 20:36:42] [[32minfo[39m] Request status: [object Object] data [object SequelizeInstance:favoriteFoodCategories],[object SequelizeInstance:favoriteFoodCategories]
[2021-12-14 20:36:46] [[32minfo[39m] Executing (default): SELECT `id`, `proName`, `proDescription`, `quantityValue`, `price`, `brand`, `origin`, `productAt`, `expireAt`, `manual`, `preserve`, `productImage`, `createdAt`, `updatedAt`, `productCategoryId`, `quantityId` FROM `products` AS `products` WHERE `products`.`id` = '14';
[2021-12-14 20:36:46] [[32minfo[39m] Request status: [object Object] data [object SequelizeInstance:products]
[2021-12-14 20:36:50] [[32minfo[39m] Executing (default): SELECT `id`, `username`, `email`, `password`, `firstname`, `lastname`, `gender`, `phone`, `birthday`, `address`, `userAvatar`, `createdAt`, `updatedAt` FROM `users` AS `users` WHERE `users`.`id` = '1';
[2021-12-14 20:36:50] [[32minfo[39m] Request status: [object Object] data [object SequelizeInstance:users]
[2021-12-14 20:36:50] [[31merror[39m] Request status: [object Object] error Error: ENOENT: no such file or directory, open 'D:\git\CNPMM\BEnull'
[2021-12-14 20:36:50] [[32minfo[39m] Executing (default): SELECT `createdAt`, `updatedAt`, `userId`, `foodCategoryId` FROM `favoriteFoodCategories` AS `favoriteFoodCategories` WHERE `favoriteFoodCategories`.`userId` = '1';
[2021-12-14 20:36:50] [[32minfo[39m] Request status: [object Object] data [object SequelizeInstance:favoriteFoodCategories],[object SequelizeInstance:favoriteFoodCategories]
[2021-12-14 20:37:00] [[32minfo[39m] Executing (default): SELECT `createdAt`, `updatedAt`, `userId`, `foodCategoryId` FROM `favoriteFoodCategories` AS `favoriteFoodCategories` WHERE `favoriteFoodCategories`.`userId` = '1';
[2021-12-14 20:37:00] [[32minfo[39m] Executing (default): SELECT `id`, `catName` FROM `productCategories` AS `productCategories`;
[2021-12-14 20:37:00] [[32minfo[39m] Executing (default): SELECT `id`, `username`, `email`, `password`, `firstname`, `lastname`, `gender`, `phone`, `birthday`, `address`, `userAvatar`, `createdAt`, `updatedAt` FROM `users` AS `users` WHERE `users`.`id` = '1';
[2021-12-14 20:37:00] [[32minfo[39m] Executing (default): SELECT `id`, `catName`, `catIcon` FROM `foodCategories` AS `foodCategories`;
[2021-12-14 20:37:00] [[32minfo[39m] Request status: [object Object] data [object SequelizeInstance:favoriteFoodCategories],[object SequelizeInstance:favoriteFoodCategories]
[2021-12-14 20:37:00] [[32minfo[39m] Request status: [object Object] data [object SequelizeInstance:foodCategories],[object SequelizeInstance:foodCategories],[object SequelizeInstance:foodCategories],[object SequelizeInstance:foodCategories],[object SequelizeInstance:foodCategories]
[2021-12-14 20:37:00] [[32minfo[39m] Request status: [object Object] data [object SequelizeInstance:productCategories],[object SequelizeInstance:productCategories],[object SequelizeInstance:productCategories],[object SequelizeInstance:productCategories],[object SequelizeInstance:productCategories]
[2021-12-14 20:37:00] [[32minfo[39m] Request status: [object Object] data [object SequelizeInstance:users]
[2021-12-14 20:37:00] [[31merror[39m] Request status: [object Object] error Error: ENOENT: no such file or directory, open 'D:\git\CNPMM\BEnull'
[2021-12-14 20:37:00] [[32minfo[39m] Executing (default): SELECT `carts`.*, `cartDetails`.`id` AS `cartDetails.id`, `cartDetails`.`quantity` AS `cartDetails.quantity`, `cartDetails`.`isBuy` AS `cartDetails.isBuy`, `cartDetails`.`isDeleted` AS `cartDetails.isDeleted`, `cartDetails`.`createdAt` AS `cartDetails.createdAt`, `cartDetails`.`updatedAt` AS `cartDetails.updatedAt`, `cartDetails`.`cartId` AS `cartDetails.cartId`, `cartDetails`.`productId` AS `cartDetails.productId`, `cartDetails->product`.`id` AS `cartDetails.product.id`, `cartDetails->product`.`proName` AS `cartDetails.product.proName`, `cartDetails->product`.`proDescription` AS `cartDetails.product.proDescription`, `cartDetails->product`.`quantityValue` AS `cartDetails.product.quantityValue`, `cartDetails->product`.`price` AS `cartDetails.product.price`, `cartDetails->product`.`brand` AS `cartDetails.product.brand`, `cartDetails->product`.`origin` AS `cartDetails.product.origin`, `cartDetails->product`.`productAt` AS `cartDetails.product.productAt`, `cartDetails->product`.`expireAt` AS `cartDetails.product.expireAt`, `cartDetails->product`.`manual` AS `cartDetails.product.manual`, `cartDetails->product`.`preserve` AS `cartDetails.product.preserve`, `cartDetails->product`.`productImage` AS `cartDetails.product.productImage`, `cartDetails->product`.`createdAt` AS `cartDetails.product.createdAt`, `cartDetails->product`.`updatedAt` AS `cartDetails.product.updatedAt`, `cartDetails->product`.`productCategoryId` AS `cartDetails.product.productCategoryId`, `cartDetails->product`.`quantityId` AS `cartDetails.product.quantityId` FROM (SELECT `carts`.`id`, `carts`.`createdAt`, `carts`.`updatedAt`, `carts`.`userId` FROM `carts` AS `carts` WHERE `carts`.`userId` = '1' AND ( SELECT `cartId` FROM `cartDetails` AS `cartDetails` WHERE ((`cartDetails`.`isBuy` = false AND `cartDetails`.`isDeleted` = false) AND `cartDetails`.`cartId` = `carts`.`id`) LIMIT 1 ) IS NOT NULL LIMIT 1) AS `carts` INNER JOIN `cartDetails` AS `cartDetails` ON `carts`.`id` = `cartDetails`.`cartId` AND `cartDetails`.`isBuy` = false AND `cartDetails`.`isDeleted` = false LEFT OUTER JOIN `products` AS `cartDetails->product` ON `cartDetails`.`productId` = `cartDetails->product`.`id`;
[2021-12-14 20:37:00] [[32minfo[39m] Executing (default): SELECT `id`, `username`, `email`, `password`, `firstname`, `lastname`, `gender`, `phone`, `birthday`, `address`, `userAvatar`, `createdAt`, `updatedAt` FROM `users` AS `users` WHERE `users`.`id` = '1';
[2021-12-14 20:37:00] [[32minfo[39m] Request: status: [object Object]  data [object SequelizeInstance:carts]
[2021-12-14 20:37:00] [[32minfo[39m] Request status: [object Object] data [object SequelizeInstance:users]
[2021-12-14 20:37:00] [[31merror[39m] Request status: [object Object] error Error: ENOENT: no such file or directory, open 'D:\git\CNPMM\BEnull'
[2021-12-14 20:37:00] [[32minfo[39m] Executing (default): SELECT `carts`.*, `cartDetails`.`id` AS `cartDetails.id`, `cartDetails`.`quantity` AS `cartDetails.quantity`, `cartDetails`.`isBuy` AS `cartDetails.isBuy`, `cartDetails`.`isDeleted` AS `cartDetails.isDeleted`, `cartDetails`.`createdAt` AS `cartDetails.createdAt`, `cartDetails`.`updatedAt` AS `cartDetails.updatedAt`, `cartDetails`.`cartId` AS `cartDetails.cartId`, `cartDetails`.`productId` AS `cartDetails.productId`, `cartDetails->product`.`id` AS `cartDetails.product.id`, `cartDetails->product`.`proName` AS `cartDetails.product.proName`, `cartDetails->product`.`proDescription` AS `cartDetails.product.proDescription`, `cartDetails->product`.`quantityValue` AS `cartDetails.product.quantityValue`, `cartDetails->product`.`price` AS `cartDetails.product.price`, `cartDetails->product`.`brand` AS `cartDetails.product.brand`, `cartDetails->product`.`origin` AS `cartDetails.product.origin`, `cartDetails->product`.`productAt` AS `cartDetails.product.productAt`, `cartDetails->product`.`expireAt` AS `cartDetails.product.expireAt`, `cartDetails->product`.`manual` AS `cartDetails.product.manual`, `cartDetails->product`.`preserve` AS `cartDetails.product.preserve`, `cartDetails->product`.`productImage` AS `cartDetails.product.productImage`, `cartDetails->product`.`createdAt` AS `cartDetails.product.createdAt`, `cartDetails->product`.`updatedAt` AS `cartDetails.product.updatedAt`, `cartDetails->product`.`productCategoryId` AS `cartDetails.product.productCategoryId`, `cartDetails->product`.`quantityId` AS `cartDetails.product.quantityId` FROM (SELECT `carts`.`id`, `carts`.`createdAt`, `carts`.`updatedAt`, `carts`.`userId` FROM `carts` AS `carts` WHERE `carts`.`userId` = '1' AND ( SELECT `cartId` FROM `cartDetails` AS `cartDetails` WHERE ((`cartDetails`.`isBuy` = false AND `cartDetails`.`isDeleted` = false) AND `cartDetails`.`cartId` = `carts`.`id`) LIMIT 1 ) IS NOT NULL LIMIT 1) AS `carts` INNER JOIN `cartDetails` AS `cartDetails` ON `carts`.`id` = `cartDetails`.`cartId` AND `cartDetails`.`isBuy` = false AND `cartDetails`.`isDeleted` = false LEFT OUTER JOIN `products` AS `cartDetails->product` ON `cartDetails`.`productId` = `cartDetails->product`.`id`;
[2021-12-14 20:37:00] [[32minfo[39m] Request: status: [object Object]  data [object SequelizeInstance:carts]
[2021-12-14 20:37:01] [[32minfo[39m] Executing (default): SELECT `id`, `username`, `email`, `password`, `firstname`, `lastname`, `gender`, `phone`, `birthday`, `address`, `userAvatar`, `createdAt`, `updatedAt` FROM `users` AS `users` WHERE `users`.`id` = '1';
[2021-12-14 20:37:01] [[32minfo[39m] Request status: [object Object] data [object SequelizeInstance:users]
[2021-12-14 20:37:01] [[31merror[39m] Request status: [object Object] error Error: ENOENT: no such file or directory, open 'D:\git\CNPMM\BEnull'
[2021-12-14 20:37:01] [[32minfo[39m] Executing (default): SELECT `createdAt`, `updatedAt`, `userId`, `foodCategoryId` FROM `favoriteFoodCategories` AS `favoriteFoodCategories` WHERE `favoriteFoodCategories`.`userId` = '1';
[2021-12-14 20:37:01] [[32minfo[39m] Executing (default): SELECT `id`, `catName` FROM `productCategories` AS `productCategories`;
[2021-12-14 20:37:01] [[32minfo[39m] Request status: [object Object] data [object SequelizeInstance:favoriteFoodCategories],[object SequelizeInstance:favoriteFoodCategories]
[2021-12-14 20:37:01] [[32minfo[39m] Executing (default): SELECT `id`, `catName`, `catIcon` FROM `foodCategories` AS `foodCategories`;
[2021-12-14 20:37:01] [[32minfo[39m] Request status: [object Object] data [object SequelizeInstance:productCategories],[object SequelizeInstance:productCategories],[object SequelizeInstance:productCategories],[object SequelizeInstance:productCategories],[object SequelizeInstance:productCategories]
[2021-12-14 20:37:01] [[32minfo[39m] Request status: [object Object] data [object SequelizeInstance:foodCategories],[object SequelizeInstance:foodCategories],[object SequelizeInstance:foodCategories],[object SequelizeInstance:foodCategories],[object SequelizeInstance:foodCategories]
[2021-12-14 20:37:01] [[32minfo[39m] Executing (default): SELECT `id`, `username`, `email`, `password`, `firstname`, `lastname`, `gender`, `phone`, `birthday`, `address`, `userAvatar`, `createdAt`, `updatedAt` FROM `users` AS `users` WHERE `users`.`id` = '1';
[2021-12-14 20:37:01] [[32minfo[39m] Executing (default): SELECT `carts`.*, `cartDetails`.`id` AS `cartDetails.id`, `cartDetails`.`quantity` AS `cartDetails.quantity`, `cartDetails`.`isBuy` AS `cartDetails.isBuy`, `cartDetails`.`isDeleted` AS `cartDetails.isDeleted`, `cartDetails`.`createdAt` AS `cartDetails.createdAt`, `cartDetails`.`updatedAt` AS `cartDetails.updatedAt`, `cartDetails`.`cartId` AS `cartDetails.cartId`, `cartDetails`.`productId` AS `cartDetails.productId`, `cartDetails->product`.`id` AS `cartDetails.product.id`, `cartDetails->product`.`proName` AS `cartDetails.product.proName`, `cartDetails->product`.`proDescription` AS `cartDetails.product.proDescription`, `cartDetails->product`.`quantityValue` AS `cartDetails.product.quantityValue`, `cartDetails->product`.`price` AS `cartDetails.product.price`, `cartDetails->product`.`brand` AS `cartDetails.product.brand`, `cartDetails->product`.`origin` AS `cartDetails.product.origin`, `cartDetails->product`.`productAt` AS `cartDetails.product.productAt`, `cartDetails->product`.`expireAt` AS `cartDetails.product.expireAt`, `cartDetails->product`.`manual` AS `cartDetails.product.manual`, `cartDetails->product`.`preserve` AS `cartDetails.product.preserve`, `cartDetails->product`.`productImage` AS `cartDetails.product.productImage`, `cartDetails->product`.`createdAt` AS `cartDetails.product.createdAt`, `cartDetails->product`.`updatedAt` AS `cartDetails.product.updatedAt`, `cartDetails->product`.`productCategoryId` AS `cartDetails.product.productCategoryId`, `cartDetails->product`.`quantityId` AS `cartDetails.product.quantityId` FROM (SELECT `carts`.`id`, `carts`.`createdAt`, `carts`.`updatedAt`, `carts`.`userId` FROM `carts` AS `carts` WHERE `carts`.`userId` = '1' AND ( SELECT `cartId` FROM `cartDetails` AS `cartDetails` WHERE ((`cartDetails`.`isBuy` = false AND `cartDetails`.`isDeleted` = false) AND `cartDetails`.`cartId` = `carts`.`id`) LIMIT 1 ) IS NOT NULL LIMIT 1) AS `carts` INNER JOIN `cartDetails` AS `cartDetails` ON `carts`.`id` = `cartDetails`.`cartId` AND `cartDetails`.`isBuy` = false AND `cartDetails`.`isDeleted` = false LEFT OUTER JOIN `products` AS `cartDetails->product` ON `cartDetails`.`productId` = `cartDetails->product`.`id`;
[2021-12-14 20:37:01] [[32minfo[39m] Executing (default): SELECT `carts`.*, `cartDetails`.`id` AS `cartDetails.id`, `cartDetails`.`quantity` AS `cartDetails.quantity`, `cartDetails`.`isBuy` AS `cartDetails.isBuy`, `cartDetails`.`isDeleted` AS `cartDetails.isDeleted`, `cartDetails`.`createdAt` AS `cartDetails.createdAt`, `cartDetails`.`updatedAt` AS `cartDetails.updatedAt`, `cartDetails`.`cartId` AS `cartDetails.cartId`, `cartDetails`.`productId` AS `cartDetails.productId`, `cartDetails->product`.`id` AS `cartDetails.product.id`, `cartDetails->product`.`proName` AS `cartDetails.product.proName`, `cartDetails->product`.`proDescription` AS `cartDetails.product.proDescription`, `cartDetails->product`.`quantityValue` AS `cartDetails.product.quantityValue`, `cartDetails->product`.`price` AS `cartDetails.product.price`, `cartDetails->product`.`brand` AS `cartDetails.product.brand`, `cartDetails->product`.`origin` AS `cartDetails.product.origin`, `cartDetails->product`.`productAt` AS `cartDetails.product.productAt`, `cartDetails->product`.`expireAt` AS `cartDetails.product.expireAt`, `cartDetails->product`.`manual` AS `cartDetails.product.manual`, `cartDetails->product`.`preserve` AS `cartDetails.product.preserve`, `cartDetails->product`.`productImage` AS `cartDetails.product.productImage`, `cartDetails->product`.`createdAt` AS `cartDetails.product.createdAt`, `cartDetails->product`.`updatedAt` AS `cartDetails.product.updatedAt`, `cartDetails->product`.`productCategoryId` AS `cartDetails.product.productCategoryId`, `cartDetails->product`.`quantityId` AS `cartDetails.product.quantityId` FROM (SELECT `carts`.`id`, `carts`.`createdAt`, `carts`.`updatedAt`, `carts`.`userId` FROM `carts` AS `carts` WHERE `carts`.`userId` = '1' AND ( SELECT `cartId` FROM `cartDetails` AS `cartDetails` WHERE ((`cartDetails`.`isBuy` = false AND `cartDetails`.`isDeleted` = false) AND `cartDetails`.`cartId` = `carts`.`id`) LIMIT 1 ) IS NOT NULL LIMIT 1) AS `carts` INNER JOIN `cartDetails` AS `cartDetails` ON `carts`.`id` = `cartDetails`.`cartId` AND `cartDetails`.`isBuy` = false AND `cartDetails`.`isDeleted` = false LEFT OUTER JOIN `products` AS `cartDetails->product` ON `cartDetails`.`productId` = `cartDetails->product`.`id`;
[2021-12-14 20:37:01] [[32minfo[39m] Request status: [object Object] data [object SequelizeInstance:users]
[2021-12-14 20:37:01] [[31merror[39m] Request status: [object Object] error Error: ENOENT: no such file or directory, open 'D:\git\CNPMM\BEnull'
[2021-12-14 20:37:01] [[32minfo[39m] Request: status: [object Object]  data [object SequelizeInstance:carts]
[2021-12-14 20:37:01] [[32minfo[39m] Request: status: [object Object]  data [object SequelizeInstance:carts]
[2021-12-14 20:37:02] [[32minfo[39m] Executing (default): SELECT `id`, `username`, `email`, `password`, `firstname`, `lastname`, `gender`, `phone`, `birthday`, `address`, `userAvatar`, `createdAt`, `updatedAt` FROM `users` AS `users` WHERE `users`.`id` = '1';
[2021-12-14 20:37:02] [[32minfo[39m] Executing (default): SELECT `createdAt`, `updatedAt`, `userId`, `foodCategoryId` FROM `favoriteFoodCategories` AS `favoriteFoodCategories` WHERE `favoriteFoodCategories`.`userId` = '1';
[2021-12-14 20:37:02] [[32minfo[39m] Executing (default): SELECT `id`, `catName`, `catIcon` FROM `foodCategories` AS `foodCategories`;
[2021-12-14 20:37:02] [[32minfo[39m] Request status: [object Object] data [object SequelizeInstance:users]
[2021-12-14 20:37:02] [[31merror[39m] Request status: [object Object] error Error: ENOENT: no such file or directory, open 'D:\git\CNPMM\BEnull'
[2021-12-14 20:37:02] [[32minfo[39m] Request status: [object Object] data [object SequelizeInstance:favoriteFoodCategories],[object SequelizeInstance:favoriteFoodCategories]
[2021-12-14 20:37:02] [[32minfo[39m] Executing (default): SELECT `id`, `catName` FROM `productCategories` AS `productCategories`;
[2021-12-14 20:37:02] [[32minfo[39m] Request status: [object Object] data [object SequelizeInstance:foodCategories],[object SequelizeInstance:foodCategories],[object SequelizeInstance:foodCategories],[object SequelizeInstance:foodCategories],[object SequelizeInstance:foodCategories]
[2021-12-14 20:37:02] [[32minfo[39m] Request status: [object Object] data [object SequelizeInstance:productCategories],[object SequelizeInstance:productCategories],[object SequelizeInstance:productCategories],[object SequelizeInstance:productCategories],[object SequelizeInstance:productCategories]
[2021-12-14 20:37:02] [[32minfo[39m] Executing (default): SELECT `id`, `username`, `email`, `password`, `firstname`, `lastname`, `gender`, `phone`, `birthday`, `address`, `userAvatar`, `createdAt`, `updatedAt` FROM `users` AS `users` WHERE `users`.`id` = '1';
[2021-12-14 20:37:02] [[32minfo[39m] Executing (default): SELECT `carts`.*, `cartDetails`.`id` AS `cartDetails.id`, `cartDetails`.`quantity` AS `cartDetails.quantity`, `cartDetails`.`isBuy` AS `cartDetails.isBuy`, `cartDetails`.`isDeleted` AS `cartDetails.isDeleted`, `cartDetails`.`createdAt` AS `cartDetails.createdAt`, `cartDetails`.`updatedAt` AS `cartDetails.updatedAt`, `cartDetails`.`cartId` AS `cartDetails.cartId`, `cartDetails`.`productId` AS `cartDetails.productId`, `cartDetails->product`.`id` AS `cartDetails.product.id`, `cartDetails->product`.`proName` AS `cartDetails.product.proName`, `cartDetails->product`.`proDescription` AS `cartDetails.product.proDescription`, `cartDetails->product`.`quantityValue` AS `cartDetails.product.quantityValue`, `cartDetails->product`.`price` AS `cartDetails.product.price`, `cartDetails->product`.`brand` AS `cartDetails.product.brand`, `cartDetails->product`.`origin` AS `cartDetails.product.origin`, `cartDetails->product`.`productAt` AS `cartDetails.product.productAt`, `cartDetails->product`.`expireAt` AS `cartDetails.product.expireAt`, `cartDetails->product`.`manual` AS `cartDetails.product.manual`, `cartDetails->product`.`preserve` AS `cartDetails.product.preserve`, `cartDetails->product`.`productImage` AS `cartDetails.product.productImage`, `cartDetails->product`.`createdAt` AS `cartDetails.product.createdAt`, `cartDetails->product`.`updatedAt` AS `cartDetails.product.updatedAt`, `cartDetails->product`.`productCategoryId` AS `cartDetails.product.productCategoryId`, `cartDetails->product`.`quantityId` AS `cartDetails.product.quantityId` FROM (SELECT `carts`.`id`, `carts`.`createdAt`, `carts`.`updatedAt`, `carts`.`userId` FROM `carts` AS `carts` WHERE `carts`.`userId` = '1' AND ( SELECT `cartId` FROM `cartDetails` AS `cartDetails` WHERE ((`cartDetails`.`isBuy` = false AND `cartDetails`.`isDeleted` = false) AND `cartDetails`.`cartId` = `carts`.`id`) LIMIT 1 ) IS NOT NULL LIMIT 1) AS `carts` INNER JOIN `cartDetails` AS `cartDetails` ON `carts`.`id` = `cartDetails`.`cartId` AND `cartDetails`.`isBuy` = false AND `cartDetails`.`isDeleted` = false LEFT OUTER JOIN `products` AS `cartDetails->product` ON `cartDetails`.`productId` = `cartDetails->product`.`id`;
[2021-12-14 20:37:02] [[32minfo[39m] Executing (default): SELECT `carts`.*, `cartDetails`.`id` AS `cartDetails.id`, `cartDetails`.`quantity` AS `cartDetails.quantity`, `cartDetails`.`isBuy` AS `cartDetails.isBuy`, `cartDetails`.`isDeleted` AS `cartDetails.isDeleted`, `cartDetails`.`createdAt` AS `cartDetails.createdAt`, `cartDetails`.`updatedAt` AS `cartDetails.updatedAt`, `cartDetails`.`cartId` AS `cartDetails.cartId`, `cartDetails`.`productId` AS `cartDetails.productId`, `cartDetails->product`.`id` AS `cartDetails.product.id`, `cartDetails->product`.`proName` AS `cartDetails.product.proName`, `cartDetails->product`.`proDescription` AS `cartDetails.product.proDescription`, `cartDetails->product`.`quantityValue` AS `cartDetails.product.quantityValue`, `cartDetails->product`.`price` AS `cartDetails.product.price`, `cartDetails->product`.`brand` AS `cartDetails.product.brand`, `cartDetails->product`.`origin` AS `cartDetails.product.origin`, `cartDetails->product`.`productAt` AS `cartDetails.product.productAt`, `cartDetails->product`.`expireAt` AS `cartDetails.product.expireAt`, `cartDetails->product`.`manual` AS `cartDetails.product.manual`, `cartDetails->product`.`preserve` AS `cartDetails.product.preserve`, `cartDetails->product`.`productImage` AS `cartDetails.product.productImage`, `cartDetails->product`.`createdAt` AS `cartDetails.product.createdAt`, `cartDetails->product`.`updatedAt` AS `cartDetails.product.updatedAt`, `cartDetails->product`.`productCategoryId` AS `cartDetails.product.productCategoryId`, `cartDetails->product`.`quantityId` AS `cartDetails.product.quantityId` FROM (SELECT `carts`.`id`, `carts`.`createdAt`, `carts`.`updatedAt`, `carts`.`userId` FROM `carts` AS `carts` WHERE `carts`.`userId` = '1' AND ( SELECT `cartId` FROM `cartDetails` AS `cartDetails` WHERE ((`cartDetails`.`isBuy` = false AND `cartDetails`.`isDeleted` = false) AND `cartDetails`.`cartId` = `carts`.`id`) LIMIT 1 ) IS NOT NULL LIMIT 1) AS `carts` INNER JOIN `cartDetails` AS `cartDetails` ON `carts`.`id` = `cartDetails`.`cartId` AND `cartDetails`.`isBuy` = false AND `cartDetails`.`isDeleted` = false LEFT OUTER JOIN `products` AS `cartDetails->product` ON `cartDetails`.`productId` = `cartDetails->product`.`id`;
[2021-12-14 20:37:02] [[32minfo[39m] Request status: [object Object] data [object SequelizeInstance:users]
[2021-12-14 20:37:02] [[31merror[39m] Request status: [object Object] error Error: ENOENT: no such file or directory, open 'D:\git\CNPMM\BEnull'
[2021-12-14 20:37:02] [[32minfo[39m] Request: status: [object Object]  data [object SequelizeInstance:carts]
[2021-12-14 20:37:02] [[32minfo[39m] Request: status: [object Object]  data [object SequelizeInstance:carts]
[2021-12-14 20:40:55] [[32minfo[39m] Executing (default): SELECT `id`, `username`, `email`, `password`, `firstname`, `lastname`, `gender`, `phone`, `birthday`, `address`, `userAvatar`, `createdAt`, `updatedAt` FROM `users` AS `users` WHERE `users`.`id` = '1';
[2021-12-14 20:40:55] [[32minfo[39m] Executing (default): SELECT `createdAt`, `updatedAt`, `userId`, `foodCategoryId` FROM `favoriteFoodCategories` AS `favoriteFoodCategories` WHERE `favoriteFoodCategories`.`userId` = '1';
[2021-12-14 20:40:55] [[32minfo[39m] Request status: [object Object] data [object SequelizeInstance:users]
[2021-12-14 20:40:55] [[31merror[39m] Request status: [object Object] error Error: ENOENT: no such file or directory, open 'D:\git\CNPMM\BEnull'
[2021-12-14 20:40:56] [[32minfo[39m] Request status: [object Object] data [object SequelizeInstance:favoriteFoodCategories],[object SequelizeInstance:favoriteFoodCategories]
[2021-12-14 20:42:19] [[32minfo[39m] Executing (default): SELECT `id`, `username`, `email`, `password`, `firstname`, `lastname`, `gender`, `phone`, `birthday`, `address`, `userAvatar`, `createdAt`, `updatedAt` FROM `users` AS `users` WHERE `users`.`id` = '1';
[2021-12-14 20:42:19] [[32minfo[39m] Request status: [object Object] data [object SequelizeInstance:users]
[2021-12-14 20:42:19] [[31merror[39m] Request status: [object Object] error Error: ENOENT: no such file or directory, open 'D:\git\CNPMM\BEnull'
[2021-12-14 20:42:59] [[32minfo[39m] Executing (default): SELECT `id`, `username`, `email`, `password`, `firstname`, `lastname`, `gender`, `phone`, `birthday`, `address`, `userAvatar`, `createdAt`, `updatedAt` FROM `users` AS `users` WHERE `users`.`username` = 'phuctg';
[2021-12-14 20:43:00] [[32minfo[39m] Executing (default): SELECT `id`, `username`, `email`, `password`, `firstname`, `lastname`, `gender`, `phone`, `birthday`, `address`, `userAvatar`, `createdAt`, `updatedAt` FROM `users` AS `users` WHERE `users`.`id` = '1';
[2021-12-14 20:43:00] [[32minfo[39m] Request status: [object Object] data [object SequelizeInstance:users]
[2021-12-14 20:43:00] [[31merror[39m] Request status: [object Object] error Error: ENOENT: no such file or directory, open 'D:\git\CNPMM\BEnull'
[2021-12-14 20:43:00] [[32minfo[39m] Executing (default): SELECT `createdAt`, `updatedAt`, `userId`, `foodCategoryId` FROM `favoriteFoodCategories` AS `favoriteFoodCategories` WHERE `favoriteFoodCategories`.`userId` = '1';
[2021-12-14 20:43:00] [[32minfo[39m] Request status: [object Object] data [object SequelizeInstance:favoriteFoodCategories],[object SequelizeInstance:favoriteFoodCategories]
[2021-12-14 20:43:01] [[32minfo[39m] Executing (default): SELECT `id`, `username`, `email`, `password`, `firstname`, `lastname`, `gender`, `phone`, `birthday`, `address`, `userAvatar`, `createdAt`, `updatedAt` FROM `users` AS `users` WHERE `users`.`id` = '1';
[2021-12-14 20:43:01] [[32minfo[39m] Executing (default): SELECT `id`, `username`, `email`, `password`, `firstname`, `lastname`, `gender`, `phone`, `birthday`, `address`, `userAvatar`, `createdAt`, `updatedAt` FROM `users` AS `users` WHERE `users`.`id` = '1';
[2021-12-14 20:43:01] [[32minfo[39m] Request status: [object Object] data [object SequelizeInstance:users]
[2021-12-14 20:43:01] [[31merror[39m] Request status: [object Object] error Error: ENOENT: no such file or directory, open 'D:\git\CNPMM\BEnull'
[2021-12-14 20:43:01] [[32minfo[39m] Executing (default): SELECT `createdAt`, `updatedAt`, `userId`, `foodCategoryId` FROM `favoriteFoodCategories` AS `favoriteFoodCategories` WHERE `favoriteFoodCategories`.`userId` = '1';
[2021-12-14 20:43:01] [[32minfo[39m] Request status: [object Object] data [object SequelizeInstance:users]
[2021-12-14 20:43:01] [[31merror[39m] Request status: [object Object] error Error: ENOENT: no such file or directory, open 'D:\git\CNPMM\BEnull'
[2021-12-14 20:43:01] [[32minfo[39m] Request status: [object Object] data [object SequelizeInstance:favoriteFoodCategories],[object SequelizeInstance:favoriteFoodCategories]
[2021-12-14 20:44:25] [[32minfo[39m] Executing (default): SELECT `id`, `username`, `email`, `password`, `firstname`, `lastname`, `gender`, `phone`, `birthday`, `address`, `userAvatar`, `createdAt`, `updatedAt` FROM `users` AS `users` WHERE `users`.`username` = 'phuctg';
[2021-12-14 20:44:25] [[32minfo[39m] Executing (default): SELECT `id`, `username`, `email`, `password`, `firstname`, `lastname`, `gender`, `phone`, `birthday`, `address`, `userAvatar`, `createdAt`, `updatedAt` FROM `users` AS `users` WHERE `users`.`id` = '1';
[2021-12-14 20:44:25] [[32minfo[39m] Executing (default): SELECT `createdAt`, `updatedAt`, `userId`, `foodCategoryId` FROM `favoriteFoodCategories` AS `favoriteFoodCategories` WHERE `favoriteFoodCategories`.`userId` = '1';
[2021-12-14 20:44:25] [[32minfo[39m] Request status: [object Object] data [object SequelizeInstance:favoriteFoodCategories],[object SequelizeInstance:favoriteFoodCategories]
[2021-12-14 20:44:25] [[32minfo[39m] Request status: [object Object] data [object SequelizeInstance:users]
[2021-12-14 20:44:25] [[31merror[39m] Request status: [object Object] error Error: ENOENT: no such file or directory, open 'D:\git\CNPMM\BEnull'
[2021-12-14 20:44:27] [[32minfo[39m] Executing (default): SELECT `id`, `catName` FROM `productCategories` AS `productCategories`;
[2021-12-14 20:44:27] [[32minfo[39m] Request status: [object Object] data [object SequelizeInstance:productCategories],[object SequelizeInstance:productCategories],[object SequelizeInstance:productCategories],[object SequelizeInstance:productCategories],[object SequelizeInstance:productCategories]
[2021-12-14 20:44:27] [[32minfo[39m] Executing (default): SELECT `id`, `username`, `email`, `password`, `firstname`, `lastname`, `gender`, `phone`, `birthday`, `address`, `userAvatar`, `createdAt`, `updatedAt` FROM `users` AS `users` WHERE `users`.`id` = '1';
[2021-12-14 20:44:27] [[32minfo[39m] Executing (default): SELECT `createdAt`, `updatedAt`, `userId`, `foodCategoryId` FROM `favoriteFoodCategories` AS `favoriteFoodCategories` WHERE `favoriteFoodCategories`.`userId` = '1';
[2021-12-14 20:44:27] [[32minfo[39m] Request status: [object Object] data [object SequelizeInstance:users]
[2021-12-14 20:44:27] [[31merror[39m] Request status: [object Object] error Error: ENOENT: no such file or directory, open 'D:\git\CNPMM\BEnull'
[2021-12-14 20:44:27] [[32minfo[39m] Request status: [object Object] data [object SequelizeInstance:favoriteFoodCategories],[object SequelizeInstance:favoriteFoodCategories]
[2021-12-14 20:44:28] [[32minfo[39m] Executing (default): SELECT `id`, `username`, `email`, `password`, `firstname`, `lastname`, `gender`, `phone`, `birthday`, `address`, `userAvatar`, `createdAt`, `updatedAt` FROM `users` AS `users` WHERE `users`.`id` = '1';
[2021-12-14 20:44:28] [[32minfo[39m] Executing (default): SELECT `createdAt`, `updatedAt`, `userId`, `foodCategoryId` FROM `favoriteFoodCategories` AS `favoriteFoodCategories` WHERE `favoriteFoodCategories`.`userId` = '1';
[2021-12-14 20:44:28] [[32minfo[39m] Request status: [object Object] data [object SequelizeInstance:users]
[2021-12-14 20:44:28] [[31merror[39m] Request status: [object Object] error Error: ENOENT: no such file or directory, open 'D:\git\CNPMM\BEnull'
[2021-12-14 20:44:28] [[32minfo[39m] Request status: [object Object] data [object SequelizeInstance:favoriteFoodCategories],[object SequelizeInstance:favoriteFoodCategories]
[2021-12-14 20:44:30] [[32minfo[39m] Executing (default): SELECT `id`, `username`, `email`, `password`, `firstname`, `lastname`, `gender`, `phone`, `birthday`, `address`, `userAvatar`, `createdAt`, `updatedAt` FROM `users` AS `users` WHERE `users`.`id` = '1';
[2021-12-14 20:44:30] [[32minfo[39m] Request status: [object Object] data [object SequelizeInstance:users]
[2021-12-14 20:44:30] [[31merror[39m] Request status: [object Object] error Error: ENOENT: no such file or directory, open 'D:\git\CNPMM\BEnull'
[2021-12-14 20:44:30] [[32minfo[39m] Executing (default): SELECT `id`, `username`, `email`, `password`, `firstname`, `lastname`, `gender`, `phone`, `birthday`, `address`, `userAvatar`, `createdAt`, `updatedAt` FROM `users` AS `users` WHERE `users`.`id` = '1';
[2021-12-14 20:44:30] [[32minfo[39m] Request status: [object Object] data [object SequelizeInstance:users]
[2021-12-14 20:44:30] [[31merror[39m] Request status: [object Object] error Error: ENOENT: no such file or directory, open 'D:\git\CNPMM\BEnull'
[2021-12-14 20:44:30] [[32minfo[39m] Executing (default): SELECT `createdAt`, `updatedAt`, `userId`, `foodCategoryId` FROM `favoriteFoodCategories` AS `favoriteFoodCategories` WHERE `favoriteFoodCategories`.`userId` = '1';
[2021-12-14 20:44:30] [[32minfo[39m] Request status: [object Object] data [object SequelizeInstance:favoriteFoodCategories],[object SequelizeInstance:favoriteFoodCategories]
[2021-12-14 20:44:32] [[32minfo[39m] Executing (default): SELECT `id`, `catName`, `catIcon` FROM `foodCategories` AS `foodCategories`;
[2021-12-14 20:44:32] [[32minfo[39m] Request status: [object Object] data [object SequelizeInstance:foodCategories],[object SequelizeInstance:foodCategories],[object SequelizeInstance:foodCategories],[object SequelizeInstance:foodCategories],[object SequelizeInstance:foodCategories]
[2021-12-14 20:44:33] [[32minfo[39m] Executing (default): SELECT `createdAt`, `updatedAt`, `userId`, `foodCategoryId` FROM `favoriteFoodCategories` AS `favoriteFoodCategories` WHERE `favoriteFoodCategories`.`userId` = '1';
[2021-12-14 20:44:33] [[32minfo[39m] Request status: [object Object] data [object SequelizeInstance:favoriteFoodCategories],[object SequelizeInstance:favoriteFoodCategories]
[2021-12-14 20:44:33] [[32minfo[39m] Request status: [object Object]
[2021-12-14 20:44:33] [[31merror[39m] Request status: [object Object]  error SequelizeUniqueConstraintError: Validation error
[2021-12-14 20:44:40] [[32minfo[39m] Executing (default): SELECT `id`, `username`, `email`, `password`, `firstname`, `lastname`, `gender`, `phone`, `birthday`, `address`, `userAvatar`, `createdAt`, `updatedAt` FROM `users` AS `users` WHERE `users`.`id` = '1';
[2021-12-14 20:44:40] [[32minfo[39m] Executing (default): SELECT `createdAt`, `updatedAt`, `userId`, `foodCategoryId` FROM `favoriteFoodCategories` AS `favoriteFoodCategories` WHERE `favoriteFoodCategories`.`userId` = '1';
[2021-12-14 20:44:40] [[32minfo[39m] Request status: [object Object] data [object SequelizeInstance:users]
[2021-12-14 20:44:40] [[31merror[39m] Request status: [object Object] error Error: ENOENT: no such file or directory, open 'D:\git\CNPMM\BEnull'
[2021-12-14 20:44:40] [[32minfo[39m] Request status: [object Object] data [object SequelizeInstance:favoriteFoodCategories],[object SequelizeInstance:favoriteFoodCategories]
[2021-12-14 20:44:44] [[32minfo[39m] Executing (default): SELECT `id`, `catName`, `catIcon` FROM `foodCategories` AS `foodCategories`;
[2021-12-14 20:44:44] [[32minfo[39m] Request status: [object Object] data [object SequelizeInstance:foodCategories],[object SequelizeInstance:foodCategories],[object SequelizeInstance:foodCategories],[object SequelizeInstance:foodCategories],[object SequelizeInstance:foodCategories]
[2021-12-14 20:44:44] [[32minfo[39m] Executing (default): SELECT `id`, `username`, `email`, `password`, `firstname`, `lastname`, `gender`, `phone`, `birthday`, `address`, `userAvatar`, `createdAt`, `updatedAt` FROM `users` AS `users` WHERE `users`.`id` = '1';
[2021-12-14 20:44:44] [[32minfo[39m] Request status: [object Object] data [object SequelizeInstance:users]
[2021-12-14 20:44:44] [[31merror[39m] Request status: [object Object] error Error: ENOENT: no such file or directory, open 'D:\git\CNPMM\BEnull'
[2021-12-14 20:44:44] [[32minfo[39m] Executing (default): SELECT `createdAt`, `updatedAt`, `userId`, `foodCategoryId` FROM `favoriteFoodCategories` AS `favoriteFoodCategories` WHERE `favoriteFoodCategories`.`userId` = '1';
[2021-12-14 20:44:44] [[32minfo[39m] Request status: [object Object] data [object SequelizeInstance:favoriteFoodCategories],[object SequelizeInstance:favoriteFoodCategories]
[2021-12-14 20:44:47] [[32minfo[39m] Executing (default): SELECT `carts`.*, `cartDetails`.`id` AS `cartDetails.id`, `cartDetails`.`quantity` AS `cartDetails.quantity`, `cartDetails`.`isBuy` AS `cartDetails.isBuy`, `cartDetails`.`isDeleted` AS `cartDetails.isDeleted`, `cartDetails`.`createdAt` AS `cartDetails.createdAt`, `cartDetails`.`updatedAt` AS `cartDetails.updatedAt`, `cartDetails`.`cartId` AS `cartDetails.cartId`, `cartDetails`.`productId` AS `cartDetails.productId`, `cartDetails->product`.`id` AS `cartDetails.product.id`, `cartDetails->product`.`proName` AS `cartDetails.product.proName`, `cartDetails->product`.`proDescription` AS `cartDetails.product.proDescription`, `cartDetails->product`.`quantityValue` AS `cartDetails.product.quantityValue`, `cartDetails->product`.`price` AS `cartDetails.product.price`, `cartDetails->product`.`brand` AS `cartDetails.product.brand`, `cartDetails->product`.`origin` AS `cartDetails.product.origin`, `cartDetails->product`.`productAt` AS `cartDetails.product.productAt`, `cartDetails->product`.`expireAt` AS `cartDetails.product.expireAt`, `cartDetails->product`.`manual` AS `cartDetails.product.manual`, `cartDetails->product`.`preserve` AS `cartDetails.product.preserve`, `cartDetails->product`.`productImage` AS `cartDetails.product.productImage`, `cartDetails->product`.`createdAt` AS `cartDetails.product.createdAt`, `cartDetails->product`.`updatedAt` AS `cartDetails.product.updatedAt`, `cartDetails->product`.`productCategoryId` AS `cartDetails.product.productCategoryId`, `cartDetails->product`.`quantityId` AS `cartDetails.product.quantityId` FROM (SELECT `carts`.`id`, `carts`.`createdAt`, `carts`.`updatedAt`, `carts`.`userId` FROM `carts` AS `carts` WHERE `carts`.`userId` = '1' AND ( SELECT `cartId` FROM `cartDetails` AS `cartDetails` WHERE ((`cartDetails`.`isBuy` = false AND `cartDetails`.`isDeleted` = false) AND `cartDetails`.`cartId` = `carts`.`id`) LIMIT 1 ) IS NOT NULL LIMIT 1) AS `carts` INNER JOIN `cartDetails` AS `cartDetails` ON `carts`.`id` = `cartDetails`.`cartId` AND `cartDetails`.`isBuy` = false AND `cartDetails`.`isDeleted` = false LEFT OUTER JOIN `products` AS `cartDetails->product` ON `cartDetails`.`productId` = `cartDetails->product`.`id`;
[2021-12-14 20:44:47] [[32minfo[39m] Request: status: [object Object]  data [object SequelizeInstance:carts]
[2021-12-14 20:44:47] [[32minfo[39m] Executing (default): SELECT `carts`.*, `cartDetails`.`id` AS `cartDetails.id`, `cartDetails`.`quantity` AS `cartDetails.quantity`, `cartDetails`.`isBuy` AS `cartDetails.isBuy`, `cartDetails`.`isDeleted` AS `cartDetails.isDeleted`, `cartDetails`.`createdAt` AS `cartDetails.createdAt`, `cartDetails`.`updatedAt` AS `cartDetails.updatedAt`, `cartDetails`.`cartId` AS `cartDetails.cartId`, `cartDetails`.`productId` AS `cartDetails.productId`, `cartDetails->product`.`id` AS `cartDetails.product.id`, `cartDetails->product`.`proName` AS `cartDetails.product.proName`, `cartDetails->product`.`proDescription` AS `cartDetails.product.proDescription`, `cartDetails->product`.`quantityValue` AS `cartDetails.product.quantityValue`, `cartDetails->product`.`price` AS `cartDetails.product.price`, `cartDetails->product`.`brand` AS `cartDetails.product.brand`, `cartDetails->product`.`origin` AS `cartDetails.product.origin`, `cartDetails->product`.`productAt` AS `cartDetails.product.productAt`, `cartDetails->product`.`expireAt` AS `cartDetails.product.expireAt`, `cartDetails->product`.`manual` AS `cartDetails.product.manual`, `cartDetails->product`.`preserve` AS `cartDetails.product.preserve`, `cartDetails->product`.`productImage` AS `cartDetails.product.productImage`, `cartDetails->product`.`createdAt` AS `cartDetails.product.createdAt`, `cartDetails->product`.`updatedAt` AS `cartDetails.product.updatedAt`, `cartDetails->product`.`productCategoryId` AS `cartDetails.product.productCategoryId`, `cartDetails->product`.`quantityId` AS `cartDetails.product.quantityId` FROM (SELECT `carts`.`id`, `carts`.`createdAt`, `carts`.`updatedAt`, `carts`.`userId` FROM `carts` AS `carts` WHERE `carts`.`userId` = '1' AND ( SELECT `cartId` FROM `cartDetails` AS `cartDetails` WHERE ((`cartDetails`.`isBuy` = false AND `cartDetails`.`isDeleted` = false) AND `cartDetails`.`cartId` = `carts`.`id`) LIMIT 1 ) IS NOT NULL LIMIT 1) AS `carts` INNER JOIN `cartDetails` AS `cartDetails` ON `carts`.`id` = `cartDetails`.`cartId` AND `cartDetails`.`isBuy` = false AND `cartDetails`.`isDeleted` = false LEFT OUTER JOIN `products` AS `cartDetails->product` ON `cartDetails`.`productId` = `cartDetails->product`.`id`;
[2021-12-14 20:44:47] [[32minfo[39m] Request: status: [object Object]  data [object SequelizeInstance:carts]
[2021-12-14 20:44:48] [[32minfo[39m] Executing (default): SELECT `carts`.*, `cartDetails`.`id` AS `cartDetails.id`, `cartDetails`.`quantity` AS `cartDetails.quantity`, `cartDetails`.`isBuy` AS `cartDetails.isBuy`, `cartDetails`.`isDeleted` AS `cartDetails.isDeleted`, `cartDetails`.`createdAt` AS `cartDetails.createdAt`, `cartDetails`.`updatedAt` AS `cartDetails.updatedAt`, `cartDetails`.`cartId` AS `cartDetails.cartId`, `cartDetails`.`productId` AS `cartDetails.productId`, `cartDetails->product`.`id` AS `cartDetails.product.id`, `cartDetails->product`.`proName` AS `cartDetails.product.proName`, `cartDetails->product`.`proDescription` AS `cartDetails.product.proDescription`, `cartDetails->product`.`quantityValue` AS `cartDetails.product.quantityValue`, `cartDetails->product`.`price` AS `cartDetails.product.price`, `cartDetails->product`.`brand` AS `cartDetails.product.brand`, `cartDetails->product`.`origin` AS `cartDetails.product.origin`, `cartDetails->product`.`productAt` AS `cartDetails.product.productAt`, `cartDetails->product`.`expireAt` AS `cartDetails.product.expireAt`, `cartDetails->product`.`manual` AS `cartDetails.product.manual`, `cartDetails->product`.`preserve` AS `cartDetails.product.preserve`, `cartDetails->product`.`productImage` AS `cartDetails.product.productImage`, `cartDetails->product`.`createdAt` AS `cartDetails.product.createdAt`, `cartDetails->product`.`updatedAt` AS `cartDetails.product.updatedAt`, `cartDetails->product`.`productCategoryId` AS `cartDetails.product.productCategoryId`, `cartDetails->product`.`quantityId` AS `cartDetails.product.quantityId` FROM (SELECT `carts`.`id`, `carts`.`createdAt`, `carts`.`updatedAt`, `carts`.`userId` FROM `carts` AS `carts` WHERE `carts`.`userId` = '1' AND ( SELECT `cartId` FROM `cartDetails` AS `cartDetails` WHERE ((`cartDetails`.`isBuy` = false AND `cartDetails`.`isDeleted` = false) AND `cartDetails`.`cartId` = `carts`.`id`) LIMIT 1 ) IS NOT NULL LIMIT 1) AS `carts` INNER JOIN `cartDetails` AS `cartDetails` ON `carts`.`id` = `cartDetails`.`cartId` AND `cartDetails`.`isBuy` = false AND `cartDetails`.`isDeleted` = false LEFT OUTER JOIN `products` AS `cartDetails->product` ON `cartDetails`.`productId` = `cartDetails->product`.`id`;
[2021-12-14 20:44:48] [[32minfo[39m] Request: status: [object Object]  data [object SequelizeInstance:carts]
[2021-12-14 20:45:22] [[32minfo[39m] Executing (default): SELECT `id`, `username`, `email`, `password`, `firstname`, `lastname`, `gender`, `phone`, `birthday`, `address`, `userAvatar`, `createdAt`, `updatedAt` FROM `users` AS `users` WHERE `users`.`id` = '1';
[2021-12-14 20:45:22] [[32minfo[39m] Request status: [object Object] data [object SequelizeInstance:users]
[2021-12-14 20:45:22] [[31merror[39m] Request status: [object Object] error Error: ENOENT: no such file or directory, open 'D:\git\CNPMM\BEnull'
[2021-12-14 20:45:30] [[32minfo[39m] Executing (default): SELECT `id`, `username`, `email`, `password`, `firstname`, `lastname`, `gender`, `phone`, `birthday`, `address`, `userAvatar`, `createdAt`, `updatedAt` FROM `users` AS `users` WHERE `users`.`username` = 'phuctg';
[2021-12-14 20:45:30] [[32minfo[39m] Executing (default): SELECT `id`, `username`, `email`, `password`, `firstname`, `lastname`, `gender`, `phone`, `birthday`, `address`, `userAvatar`, `createdAt`, `updatedAt` FROM `users` AS `users` WHERE `users`.`id` = '1';
[2021-12-14 20:45:30] [[32minfo[39m] Executing (default): SELECT `createdAt`, `updatedAt`, `userId`, `foodCategoryId` FROM `favoriteFoodCategories` AS `favoriteFoodCategories` WHERE `favoriteFoodCategories`.`userId` = '1';
[2021-12-14 20:45:30] [[32minfo[39m] Request status: [object Object] data [object SequelizeInstance:users]
[2021-12-14 20:45:30] [[31merror[39m] Request status: [object Object] error Error: ENOENT: no such file or directory, open 'D:\git\CNPMM\BEnull'
[2021-12-14 20:45:30] [[32minfo[39m] Request status: [object Object] data [object SequelizeInstance:favoriteFoodCategories],[object SequelizeInstance:favoriteFoodCategories]
[2021-12-14 20:45:32] [[32minfo[39m] Executing (default): SELECT `id`, `username`, `email`, `password`, `firstname`, `lastname`, `gender`, `phone`, `birthday`, `address`, `userAvatar`, `createdAt`, `updatedAt` FROM `users` AS `users` WHERE `users`.`id` = '1';
[2021-12-14 20:45:32] [[32minfo[39m] Request status: [object Object] data [object SequelizeInstance:users]
[2021-12-14 20:45:32] [[31merror[39m] Request status: [object Object] error Error: ENOENT: no such file or directory, open 'D:\git\CNPMM\BEnull'
[2021-12-14 20:45:32] [[32minfo[39m] Executing (default): SELECT `id`, `username`, `email`, `password`, `firstname`, `lastname`, `gender`, `phone`, `birthday`, `address`, `userAvatar`, `createdAt`, `updatedAt` FROM `users` AS `users` WHERE `users`.`id` = '1';
[2021-12-14 20:45:32] [[32minfo[39m] Executing (default): SELECT `createdAt`, `updatedAt`, `userId`, `foodCategoryId` FROM `favoriteFoodCategories` AS `favoriteFoodCategories` WHERE `favoriteFoodCategories`.`userId` = '1';
[2021-12-14 20:45:32] [[32minfo[39m] Request status: [object Object] data [object SequelizeInstance:users]
[2021-12-14 20:45:32] [[31merror[39m] Request status: [object Object] error Error: ENOENT: no such file or directory, open 'D:\git\CNPMM\BEnull'
[2021-12-14 20:45:32] [[32minfo[39m] Request status: [object Object] data [object SequelizeInstance:favoriteFoodCategories],[object SequelizeInstance:favoriteFoodCategories]
[2021-12-14 20:45:38] [[32minfo[39m] Executing (default): SELECT `id`, `username`, `email`, `password`, `firstname`, `lastname`, `gender`, `phone`, `birthday`, `address`, `userAvatar`, `createdAt`, `updatedAt` FROM `users` AS `users` WHERE `users`.`id` = 'undefined';
[2021-12-14 20:45:38] [[31merror[39m] Request status: [object Object]  error User not found
[2021-12-14 20:48:52] [[32minfo[39m] Executing (default): SELECT `id`, `username`, `email`, `password`, `firstname`, `lastname`, `gender`, `phone`, `birthday`, `address`, `userAvatar`, `createdAt`, `updatedAt` FROM `users` AS `users` WHERE `users`.`id` = '1';
[2021-12-14 20:48:52] [[32minfo[39m] Executing (default): SELECT `createdAt`, `updatedAt`, `userId`, `foodCategoryId` FROM `favoriteFoodCategories` AS `favoriteFoodCategories` WHERE `favoriteFoodCategories`.`userId` = '1';
[2021-12-14 20:48:52] [[32minfo[39m] Request status: [object Object] data [object SequelizeInstance:users]
[2021-12-14 20:48:52] [[31merror[39m] Request status: [object Object] error Error: ENOENT: no such file or directory, open 'D:\git\CNPMM\BEnull'
[2021-12-14 20:48:52] [[32minfo[39m] Request status: [object Object] data [object SequelizeInstance:favoriteFoodCategories],[object SequelizeInstance:favoriteFoodCategories]
[2021-12-14 20:48:53] [[32minfo[39m] Executing (default): SELECT `id`, `catName` FROM `productCategories` AS `productCategories`;
[2021-12-14 20:48:53] [[32minfo[39m] Request status: [object Object] data [object SequelizeInstance:productCategories],[object SequelizeInstance:productCategories],[object SequelizeInstance:productCategories],[object SequelizeInstance:productCategories],[object SequelizeInstance:productCategories]
[2021-12-14 20:48:53] [[32minfo[39m] Executing (default): SELECT `id`, `username`, `email`, `password`, `firstname`, `lastname`, `gender`, `phone`, `birthday`, `address`, `userAvatar`, `createdAt`, `updatedAt` FROM `users` AS `users` WHERE `users`.`id` = '1';
[2021-12-14 20:48:53] [[32minfo[39m] Executing (default): SELECT `createdAt`, `updatedAt`, `userId`, `foodCategoryId` FROM `favoriteFoodCategories` AS `favoriteFoodCategories` WHERE `favoriteFoodCategories`.`userId` = '1';
[2021-12-14 20:48:53] [[32minfo[39m] Request status: [object Object] data [object SequelizeInstance:users]
[2021-12-14 20:48:53] [[31merror[39m] Request status: [object Object] error Error: ENOENT: no such file or directory, open 'D:\git\CNPMM\BEnull'
[2021-12-14 20:48:53] [[32minfo[39m] Request status: [object Object] data [object SequelizeInstance:favoriteFoodCategories],[object SequelizeInstance:favoriteFoodCategories]
[2021-12-14 20:48:54] [[32minfo[39m] Executing (default): SELECT `id`, `username`, `email`, `password`, `firstname`, `lastname`, `gender`, `phone`, `birthday`, `address`, `userAvatar`, `createdAt`, `updatedAt` FROM `users` AS `users` WHERE `users`.`id` = '1';
[2021-12-14 20:48:54] [[32minfo[39m] Executing (default): SELECT `createdAt`, `updatedAt`, `userId`, `foodCategoryId` FROM `favoriteFoodCategories` AS `favoriteFoodCategories` WHERE `favoriteFoodCategories`.`userId` = '1';
[2021-12-14 20:48:54] [[32minfo[39m] Request status: [object Object] data [object SequelizeInstance:users]
[2021-12-14 20:48:54] [[31merror[39m] Request status: [object Object] error Error: ENOENT: no such file or directory, open 'D:\git\CNPMM\BEnull'
[2021-12-14 20:48:54] [[32minfo[39m] Request status: [object Object] data [object SequelizeInstance:favoriteFoodCategories],[object SequelizeInstance:favoriteFoodCategories]
[2021-12-14 20:49:04] [[32minfo[39m] Executing (default): SELECT `id`, `username`, `email`, `password`, `firstname`, `lastname`, `gender`, `phone`, `birthday`, `address`, `userAvatar`, `createdAt`, `updatedAt` FROM `users` AS `users` WHERE `users`.`id` = '1';
[2021-12-14 20:49:04] [[32minfo[39m] Executing (default): SELECT `createdAt`, `updatedAt`, `userId`, `foodCategoryId` FROM `favoriteFoodCategories` AS `favoriteFoodCategories` WHERE `favoriteFoodCategories`.`userId` = '1';
[2021-12-14 20:49:04] [[32minfo[39m] Request status: [object Object] data [object SequelizeInstance:users]
[2021-12-14 20:49:04] [[31merror[39m] Request status: [object Object] error Error: ENOENT: no such file or directory, open 'D:\git\CNPMM\BEnull'
[2021-12-14 20:49:04] [[32minfo[39m] Request status: [object Object] data [object SequelizeInstance:favoriteFoodCategories],[object SequelizeInstance:favoriteFoodCategories]
[2021-12-14 20:49:11] [[32minfo[39m] Executing (default): SELECT `id`, `username`, `email`, `password`, `firstname`, `lastname`, `gender`, `phone`, `birthday`, `address`, `userAvatar`, `createdAt`, `updatedAt` FROM `users` AS `users` WHERE `users`.`id` = '1';
[2021-12-14 20:49:11] [[32minfo[39m] Executing (default): SELECT `createdAt`, `updatedAt`, `userId`, `foodCategoryId` FROM `favoriteFoodCategories` AS `favoriteFoodCategories` WHERE `favoriteFoodCategories`.`userId` = '1';
[2021-12-14 20:49:11] [[32minfo[39m] Request status: [object Object] data [object SequelizeInstance:users]
[2021-12-14 20:49:11] [[31merror[39m] Request status: [object Object] error Error: ENOENT: no such file or directory, open 'D:\git\CNPMM\BEnull'
[2021-12-14 20:49:11] [[32minfo[39m] Request status: [object Object] data [object SequelizeInstance:favoriteFoodCategories],[object SequelizeInstance:favoriteFoodCategories]
[2021-12-14 20:51:30] [[32minfo[39m] Executing (default): SELECT `id`, `username`, `email`, `password`, `firstname`, `lastname`, `gender`, `phone`, `birthday`, `address`, `userAvatar`, `createdAt`, `updatedAt` FROM `users` AS `users` WHERE `users`.`username` = 'phuctg';
[2021-12-14 20:51:30] [[32minfo[39m] Executing (default): SELECT `id`, `username`, `email`, `password`, `firstname`, `lastname`, `gender`, `phone`, `birthday`, `address`, `userAvatar`, `createdAt`, `updatedAt` FROM `users` AS `users` WHERE `users`.`id` = '1';
[2021-12-14 20:51:30] [[32minfo[39m] Request status: [object Object] data [object SequelizeInstance:users]
[2021-12-14 20:51:30] [[31merror[39m] Request status: [object Object] error Error: ENOENT: no such file or directory, open 'D:\git\CNPMM\BEnull'
[2021-12-14 20:51:30] [[32minfo[39m] Executing (default): SELECT `createdAt`, `updatedAt`, `userId`, `foodCategoryId` FROM `favoriteFoodCategories` AS `favoriteFoodCategories` WHERE `favoriteFoodCategories`.`userId` = '1';
[2021-12-14 20:51:30] [[32minfo[39m] Request status: [object Object] data [object SequelizeInstance:favoriteFoodCategories],[object SequelizeInstance:favoriteFoodCategories]
[2021-12-14 20:51:32] [[32minfo[39m] Executing (default): SELECT `id`, `catName` FROM `productCategories` AS `productCategories`;
[2021-12-14 20:51:32] [[32minfo[39m] Request status: [object Object] data [object SequelizeInstance:productCategories],[object SequelizeInstance:productCategories],[object SequelizeInstance:productCategories],[object SequelizeInstance:productCategories],[object SequelizeInstance:productCategories]
[2021-12-14 20:51:32] [[32minfo[39m] Executing (default): SELECT `id`, `username`, `email`, `password`, `firstname`, `lastname`, `gender`, `phone`, `birthday`, `address`, `userAvatar`, `createdAt`, `updatedAt` FROM `users` AS `users` WHERE `users`.`id` = '1';
[2021-12-14 20:51:32] [[32minfo[39m] Executing (default): SELECT `createdAt`, `updatedAt`, `userId`, `foodCategoryId` FROM `favoriteFoodCategories` AS `favoriteFoodCategories` WHERE `favoriteFoodCategories`.`userId` = '1';
[2021-12-14 20:51:32] [[32minfo[39m] Request status: [object Object] data [object SequelizeInstance:users]
[2021-12-14 20:51:32] [[31merror[39m] Request status: [object Object] error Error: ENOENT: no such file or directory, open 'D:\git\CNPMM\BEnull'
[2021-12-14 20:51:32] [[32minfo[39m] Request status: [object Object] data [object SequelizeInstance:favoriteFoodCategories],[object SequelizeInstance:favoriteFoodCategories]
[2021-12-14 20:51:34] [[32minfo[39m] Executing (default): SELECT `id`, `catName`, `catIcon` FROM `foodCategories` AS `foodCategories`;
[2021-12-14 20:51:34] [[32minfo[39m] Request status: [object Object] data [object SequelizeInstance:foodCategories],[object SequelizeInstance:foodCategories],[object SequelizeInstance:foodCategories],[object SequelizeInstance:foodCategories],[object SequelizeInstance:foodCategories]
[2021-12-14 20:51:37] [[32minfo[39m] Executing (default): SELECT `id`, `foodName`, `foodDescription`, `foodCalories`, `foodImage`, `createdAt`, `updatedAt`, `foodCategoryId` FROM `foods` AS `foods` WHERE `foods`.`foodCategoryId` = '1';
[2021-12-14 20:51:37] [[32minfo[39m] Request status: [object Object] data [object SequelizeInstance:foods],[object SequelizeInstance:foods],[object SequelizeInstance:foods],[object SequelizeInstance:foods],[object SequelizeInstance:foods]
[2021-12-14 20:51:40] [[32minfo[39m] Executing (default): SELECT `id`, `foodName`, `foodDescription`, `foodCalories`, `foodImage`, `createdAt`, `updatedAt`, `foodCategoryId` FROM `foods` AS `foods` WHERE `foods`.`foodCategoryId` = '2';
[2021-12-14 20:51:40] [[32minfo[39m] Request status: [object Object] data [object SequelizeInstance:foods],[object SequelizeInstance:foods],[object SequelizeInstance:foods],[object SequelizeInstance:foods],[object SequelizeInstance:foods]
[2021-12-14 20:51:41] [[32minfo[39m] Executing (default): SELECT `id`, `foodName`, `foodDescription`, `foodCalories`, `foodImage`, `createdAt`, `updatedAt`, `foodCategoryId` FROM `foods` AS `foods` WHERE `foods`.`foodCategoryId` = '3';
[2021-12-14 20:51:41] [[32minfo[39m] Request status: [object Object] data [object SequelizeInstance:foods],[object SequelizeInstance:foods],[object SequelizeInstance:foods],[object SequelizeInstance:foods],[object SequelizeInstance:foods]
[2021-12-14 20:51:43] [[32minfo[39m] Executing (default): SELECT `id`, `foodName`, `foodDescription`, `foodCalories`, `foodImage`, `createdAt`, `updatedAt`, `foodCategoryId` FROM `foods` AS `foods` WHERE `foods`.`foodCategoryId` = '1';
[2021-12-14 20:51:43] [[32minfo[39m] Request status: [object Object] data [object SequelizeInstance:foods],[object SequelizeInstance:foods],[object SequelizeInstance:foods],[object SequelizeInstance:foods],[object SequelizeInstance:foods]
[2021-12-14 20:51:45] [[32minfo[39m] Executing (default): SELECT `id`, `username`, `email`, `password`, `firstname`, `lastname`, `gender`, `phone`, `birthday`, `address`, `userAvatar`, `createdAt`, `updatedAt` FROM `users` AS `users` WHERE `users`.`id` = '1';
[2021-12-14 20:51:45] [[32minfo[39m] Request status: [object Object] data [object SequelizeInstance:users]
[2021-12-14 20:51:45] [[31merror[39m] Request status: [object Object] error Error: ENOENT: no such file or directory, open 'D:\git\CNPMM\BEnull'
[2021-12-14 20:51:45] [[32minfo[39m] Executing (default): SELECT `createdAt`, `updatedAt`, `userId`, `foodCategoryId` FROM `favoriteFoodCategories` AS `favoriteFoodCategories` WHERE `favoriteFoodCategories`.`userId` = '1';
[2021-12-14 20:51:45] [[32minfo[39m] Request status: [object Object] data [object SequelizeInstance:favoriteFoodCategories],[object SequelizeInstance:favoriteFoodCategories]
[2021-12-14 20:51:47] [[32minfo[39m] Executing (default): SELECT `id`, `username`, `email`, `password`, `firstname`, `lastname`, `gender`, `phone`, `birthday`, `address`, `userAvatar`, `createdAt`, `updatedAt` FROM `users` AS `users` WHERE `users`.`id` = '1';
[2021-12-14 20:51:47] [[32minfo[39m] Executing (default): SELECT `createdAt`, `updatedAt`, `userId`, `foodCategoryId` FROM `favoriteFoodCategories` AS `favoriteFoodCategories` WHERE `favoriteFoodCategories`.`userId` = '1';
[2021-12-14 20:51:47] [[32minfo[39m] Request status: [object Object] data [object SequelizeInstance:users]
[2021-12-14 20:51:47] [[31merror[39m] Request status: [object Object] error Error: ENOENT: no such file or directory, open 'D:\git\CNPMM\BEnull'
[2021-12-14 20:51:47] [[32minfo[39m] Request status: [object Object] data [object SequelizeInstance:favoriteFoodCategories],[object SequelizeInstance:favoriteFoodCategories]
[2021-12-14 20:52:06] [[32minfo[39m] Executing (default): SELECT `id`, `username`, `email`, `password`, `firstname`, `lastname`, `gender`, `phone`, `birthday`, `address`, `userAvatar`, `createdAt`, `updatedAt` FROM `users` AS `users` WHERE `users`.`username` = 'phuctg';
[2021-12-14 20:52:06] [[32minfo[39m] Executing (default): SELECT `id`, `username`, `email`, `password`, `firstname`, `lastname`, `gender`, `phone`, `birthday`, `address`, `userAvatar`, `createdAt`, `updatedAt` FROM `users` AS `users` WHERE `users`.`id` = '1';
[2021-12-14 20:52:06] [[32minfo[39m] Executing (default): SELECT `createdAt`, `updatedAt`, `userId`, `foodCategoryId` FROM `favoriteFoodCategories` AS `favoriteFoodCategories` WHERE `favoriteFoodCategories`.`userId` = '1';
[2021-12-14 20:52:06] [[32minfo[39m] Request status: [object Object] data [object SequelizeInstance:users]
[2021-12-14 20:52:06] [[31merror[39m] Request status: [object Object] error Error: ENOENT: no such file or directory, open 'D:\git\CNPMM\BEnull'
[2021-12-14 20:52:06] [[32minfo[39m] Request status: [object Object] data [object SequelizeInstance:favoriteFoodCategories],[object SequelizeInstance:favoriteFoodCategories]
[2021-12-14 20:55:12] [[32minfo[39m] Executing (default): SELECT `id`, `name`, `createdAt`, `updatedAt` FROM `roles` AS `roles` WHERE (`roles`.`name` = 'user');
[2021-12-14 20:55:12] [[32minfo[39m] User baotg is registered
[2021-12-14 20:55:16] [[32minfo[39m] Executing (default): SELECT `id`, `username`, `email`, `password`, `firstname`, `lastname`, `gender`, `phone`, `birthday`, `address`, `userAvatar`, `createdAt`, `updatedAt` FROM `users` AS `users` WHERE `users`.`username` = 'baotg';
[2021-12-14 20:55:35] [[32minfo[39m] Executing (default): SELECT `id`, `username`, `email`, `password`, `firstname`, `lastname`, `gender`, `phone`, `birthday`, `address`, `userAvatar`, `createdAt`, `updatedAt` FROM `users` AS `users` WHERE `users`.`id` = '2';
[2021-12-14 20:55:35] [[32minfo[39m] Request status: [object Object] data [object SequelizeInstance:users]
[2021-12-14 20:55:35] [[32minfo[39m] Executing (default): SELECT `createdAt`, `updatedAt`, `userId`, `foodCategoryId` FROM `favoriteFoodCategories` AS `favoriteFoodCategories` WHERE `favoriteFoodCategories`.`userId` = 2;
